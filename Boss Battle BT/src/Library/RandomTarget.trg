{
  "Id": 50332075,
  "Comment": "",
  "IsScript": true,
  "RunOnMapInit": false,
  "Script": "library RandomTargetLib initializer init requires UnitstLib\r\n\r\n    globals\r\n        constant string RANDOM_TARGET_NOT_STUNNED = \"notstun\"//0\r\n        constant string RANDOM_TARGET_UNDEAD = \"undead\"//1\r\n        constant string RANDOM_TARGET_ORGANIC = \"org\"//2\r\n        constant string RANDOM_TARGET_NOT_UNDEAD = \"notundead\"//3\r\n        constant string RANDOM_TARGET_NOT_CASTER = \"notcaster\"//4\r\n        constant string RANDOM_TARGET_MINION = \"pris\"//5\r\n        constant string RANDOM_TARGET_HERO = \"hero\"//6\r\n        constant string RANDOM_TARGET_NOT_FULL_HEALTH = \"notfull\"//7\r\n        constant string RANDOM_TARGET_VULNERABLE = \"vulnerable\"//8\r\n        constant string RANDOM_TARGET_CAN_MOVE = \"notstand\"//9\r\n        constant string RANDOM_TARGET_NOT_PROVOKED = \"notprovoked\"//10\r\n        \r\n        private constant integer PROVOKE_TYPES_COUNT = 11\r\n        private constant integer PROVOKE_TYPES_COUNT_ARRAYS = PROVOKE_TYPES_COUNT + 1\r\n        \r\n        private string array RandomTargetTypes[PROVOKE_TYPES_COUNT_ARRAYS]\r\n        \r\n        private unit TempUnit = null\r\n    endglobals\r\n    \r\n    private function init takes nothing returns nothing\r\n        set RandomTargetTypes[0] = RANDOM_TARGET_NOT_STUNNED \r\n        set RandomTargetTypes[1] = RANDOM_TARGET_UNDEAD\r\n        set RandomTargetTypes[2] = RANDOM_TARGET_ORGANIC\r\n        set RandomTargetTypes[3] = RANDOM_TARGET_NOT_UNDEAD\r\n        set RandomTargetTypes[4] = RANDOM_TARGET_NOT_CASTER \r\n        set RandomTargetTypes[5] = RANDOM_TARGET_MINION \r\n        set RandomTargetTypes[6] = RANDOM_TARGET_HERO\r\n        set RandomTargetTypes[7] = RANDOM_TARGET_NOT_FULL_HEALTH\r\n        set RandomTargetTypes[8] = RANDOM_TARGET_VULNERABLE \r\n        set RandomTargetTypes[9] = RANDOM_TARGET_CAN_MOVE\r\n        set RandomTargetTypes[10] = RANDOM_TARGET_NOT_PROVOKED\r\n    endfunction\r\n    \r\n    private struct ProvokeTypes\r\n        boolean array isTypeActive[PROVOKE_TYPES_COUNT_ARRAYS]\r\n    endstruct\r\n    \r\n    private function IsCanBeTarget takes unit caster, unit target, ProvokeTypes provokeTypes returns boolean\r\n        local boolean isWork = true\r\n    \r\n        if provokeTypes.isTypeActive[0] and IsUnitHasAbility( target, 'BPSE' ) then\r\n            set isWork = false\r\n        elseif provokeTypes.isTypeActive[1] and IsUnitType( target, UNIT_TYPE_UNDEAD ) == false then\r\n            set isWork = false\r\n        elseif provokeTypes.isTypeActive[2] and IsUnitType( target, UNIT_TYPE_MECHANICAL) then \r\n            set isWork = false\r\n        elseif provokeTypes.isTypeActive[3] and IsUnitType( target, UNIT_TYPE_UNDEAD ) == false then \r\n            set isWork = false\r\n        elseif provokeTypes.isTypeActive[4] and caster == target then \r\n            set isWork = false\r\n        elseif provokeTypes.isTypeActive[5] and ( IsUnitType( target, UNIT_TYPE_HERO) or IsUnitType( target, UNIT_TYPE_ANCIENT) ) then \r\n            set isWork = false\r\n        elseif provokeTypes.isTypeActive[6] and IsUnitType( target, UNIT_TYPE_HERO) == false then \r\n            set isWork = false\r\n        elseif provokeTypes.isTypeActive[7] and IsUnitHealthIsFull(target) then \r\n            set isWork = false\r\n        elseif provokeTypes.isTypeActive[8] and IsUnitHasAbility( target, 'Avul' ) then \r\n            set isWork = false\r\n        elseif provokeTypes.isTypeActive[9] and GetUnitDefaultMoveSpeed(target) == 0 then \r\n            set isWork = false\r\n        elseif provokeTypes.isTypeActive[10] and IsUnitHasAbility( target, 'A09H' ) then \r\n            set isWork = false\r\n        endif\r\n        \r\n        set caster = null\r\n        set target = null\r\n        call provokeTypes.destroy()\r\n        return isWork\r\n    endfunction\r\n\r\n    function randomtarget takes unit caster, real r, string str, string str1, string str2, string str3, string str4 returns unit\r\n        local integer i\r\n        local integer k\r\n        local group utr = CreateGroup()\r\n        local group g = CreateGroup()\r\n        local unit u\r\n        local string array s\r\n        local ProvokeTypes provokeTypes = ProvokeTypes.create()\r\n\r\n        if str != \"ally\" and str != \"all\" and str != \"enemy\" then\r\n            call BJDebugMsg(\"An ability that was applied accidentally has an incorrect target. Please notify the developer about this.\")\r\n            set str = \"all\"\r\n        endif\r\n        \r\n        set s[1] = str1\r\n        set s[2] = str2\r\n        set s[3] = str3\r\n        set s[4] = str4\r\n        \r\n        set i = 1\r\n        loop \r\n            exitwhen i > 4\r\n            if s[i] != null and s[i] != \"\" then\r\n                set k = 1\r\n                loop\r\n                    exitwhen k > PROVOKE_TYPES_COUNT\r\n                    if s[i] == RandomTargetTypes[k] then\r\n                        set provokeTypes.isTypeActive[k] = true \r\n                        set k = PROVOKE_TYPES_COUNT\r\n                    endif\r\n                    set k = k + 1\r\n                endloop \r\n            endif\r\n            set i = i + 1\r\n        endloop \r\n        \r\n        call GroupEnumUnitsInRange( g, GetUnitX( caster ), GetUnitY( caster ), r, null )\r\n        loop\r\n            set u = FirstOfGroup(g)\r\n            exitwhen u == null\r\n            if unitst( u, caster, str ) and IsCanBeTarget( caster, u, provokeTypes ) then\r\n                call GroupAddUnit( utr, u )\r\n            endif\r\n            call GroupRemoveUnit(g,u)\r\n        endloop\r\n        \r\n        set TempUnit = null\r\n        if IsUnitGroupEmptyBJ( utr ) == false then\r\n            set TempUnit = GroupPickRandomUnit( utr )\r\n        endif\r\n\r\n        call GroupClear( g )\r\n        call GroupClear( utr )\r\n        call DestroyGroup( g )\r\n        call DestroyGroup( utr )\r\n        set u = null\r\n        set g = null\r\n        set utr = null\r\n        set caster = null\r\n        return TempUnit\r\n    endfunction\r\n\r\nendlibrary",
  "Events": [],
  "LocalVariables": [],
  "Conditions": [],
  "Actions": []
}