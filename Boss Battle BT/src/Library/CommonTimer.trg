{
  "Id": 50332086,
  "Comment": "",
  "IsScript": true,
  "RunOnMapInit": false,
  "Script": "library CommonTimer\r\n\r\n    function InvokeTimerWithUnit takes unit myUnit, string stringHash, real time, boolean isPeriodic, code func returns integer\r\n        local integer id = GetHandleId( myUnit )\r\n        local integer secondKey = StringHash( stringHash )\r\n        local timer usedTimer = LoadTimerHandle( udg_hash, id, secondKey )\r\n\t\t\r\n\t\t/*call BJDebugMsg(\"myUnit: \" + GetUnitName(myUnit))\r\n\t\tcall BJDebugMsg(\"id: \" + I2S(id))\r\n\t\tcall BJDebugMsg(\"secondKey: \" + I2S(secondKey))\r\n\t\tcall BJDebugMsg(\"stringHash: \" + stringHash)*/\r\n        if usedTimer == null then\r\n        \t//call BJDebugMsg(\"Create New\")\r\n        \tset usedTimer = CreateTimer()\r\n            call SaveTimerHandle( udg_hash, id, secondKey, usedTimer )\r\n        /*else\r\n        \tcall BJDebugMsg(\"Refresh\")*/\r\n        endif\r\n        set id = GetHandleId( usedTimer ) \r\n        call SaveUnitHandle( udg_hash, id, secondKey, myUnit )\r\n        call TimerStart( usedTimer, time, isPeriodic, func )\r\n        \r\n        set myUnit = null\r\n        set func = null\r\n        set usedTimer = null\r\n        return id\r\n    endfunction\r\n\r\n    function InvokeTimerWithItem takes item myItem, string stringHash, real time, boolean isPeriodic, code func returns integer\r\n        local integer id = GetHandleId( myItem )\r\n        local integer secondKey = StringHash( stringHash )\r\n\r\n        if LoadTimerHandle( udg_hash, id, secondKey ) == null then\r\n            call SaveTimerHandle( udg_hash, id, secondKey, CreateTimer() )\r\n        endif\r\n        set id = GetHandleId( LoadTimerHandle( udg_hash, id, secondKey ) ) \r\n        call SaveItemHandle( udg_hash, id, secondKey, myItem )\r\n        call TimerStart( LoadTimerHandle( udg_hash, GetHandleId( myItem ), secondKey ), time, isPeriodic, func )\r\n        \r\n        set myItem = null\r\n        set func = null\r\n        return id\r\n    endfunction\r\n\r\n    function InvokeTimerWithEffect takes effect myEffect, string stringHash, real time, boolean isPeriodic, code func returns integer\r\n        local integer id = GetHandleId( myEffect )\r\n        local integer secondKey = StringHash( stringHash )\r\n\r\n        if LoadTimerHandle( udg_hash, id, secondKey ) == null then\r\n            call SaveTimerHandle( udg_hash, id, secondKey, CreateTimer() )\r\n        endif\r\n        set id = GetHandleId( LoadTimerHandle( udg_hash, id, secondKey ) ) \r\n        call SaveEffectHandle( udg_hash, id, secondKey, myEffect )\r\n        call TimerStart( LoadTimerHandle( udg_hash, GetHandleId( myEffect ), secondKey ), time, isPeriodic, func )\r\n        \r\n        set myEffect = null\r\n        set func = null\r\n        return id\r\n    endfunction\r\n\r\nendlibrary",
  "Events": [],
  "LocalVariables": [],
  "Conditions": [],
  "Actions": []
}