{
  "Id": 50332054,
  "Comment": "",
  "IsScript": true,
  "RunOnMapInit": false,
  "Script": "library SpellPower initializer init requires TextLib, Trigger\r\n\r\n    globals\r\n        private constant integer KEY_SPELL_POWER = StringHash(\"spd\")\r\n        private constant real BASE_SPELL_POWER = 1\r\n        \r\n        private real BossSpellPower = 1\r\n        private constant real BOSS_SPELL_POWER_MIN = 0.2\r\n        private constant real BOSS_SPELL_POWER_MAX = 10\r\n    endglobals\r\n\r\n    private function UpdateFrames takes integer heroIndex, real newSpellPower returns nothing\r\n        local string spellPowerText\r\n        local real k\r\n    \r\n        set spellPowerText = R2SW( newSpellPower, 1, 2 )\r\n        call MultiSetValue( udg_multi, ( udg_Multiboard_Position[heroIndex] * 3 ) - 1, 4, spellPowerText + udg_perc )\r\n        set k = StringLength(spellPowerText) * 0.004\r\n        if GetLocalPlayer() == Player(heroIndex-1) then\r\n            call BlzFrameSetText(spelltext, spellPowerText + udg_perc)\r\n            call BlzFrameSetAbsPoint( spelltext, FRAMEPOINT_CENTER, 0.636 - k, 0.578 )\r\n        endif\r\n    endfunction\r\n\r\n    function spdst takes unit u, real spd returns nothing\r\n        local integer index = GetUnitUserData(u)\r\n        local integer unitId = GetHandleId(u)\r\n        local real oldSpellPower = LoadReal(udg_hash, unitId, KEY_SPELL_POWER )\r\n        local real newSpellPower\r\n        local real realForText\r\n        \r\n        if index <= 0 or index > PLAYERS_LIMIT then\r\n            set u = null\r\n            return\r\n        endif\r\n        \r\n        set newSpellPower = oldSpellPower + ( spd / 100 )\r\n        call SaveReal(udg_hash, unitId, KEY_SPELL_POWER, newSpellPower )\r\n\r\n        set realForText = 100 * ( newSpellPower - 1 )\r\n        if realForText < 0 and realForText > -1 then\r\n            set realForText = 0\r\n        endif\r\n\r\n        call UpdateFrames( index, realForText )\r\n        \r\n        set u = null\r\n    endfunction\r\n\r\n    function SpellPotionUnit takes unit hero, real spd returns nothing\r\n        local integer p = GetUnitUserData(hero)\r\n        local player pl = GetOwningPlayer(hero)\r\n        local integer i = p\r\n        local string str\r\n        local real r \r\n        local real a\r\n        local real k\r\n        \r\n        set udg_SpellDamagePotion[i] = udg_SpellDamagePotion[i] + ( spd / 100 ) \r\n        set r = 100 * ( udg_SpellDamagePotion[i] - 1 )\r\n        set a = r - 1\r\n\r\n        if a < 0 and a > -1 then\r\n            set a = 0\r\n        endif\r\n\r\n        set str = R2SW( a, 1, 2 )\r\n        set k = StringLength(str) * 0.004\r\n        if GetLocalPlayer() == pl then\r\n            call BlzFrameSetText(extraPanelNumPotion, str + udg_perc)\r\n            call BlzFrameSetPoint(extraPanelNumPotion, FRAMEPOINT_LEFT, extraPanelBackground, FRAMEPOINT_LEFT, 0.051 - k, -0.006)\r\n        endif\r\n        \r\n        set hero = null\r\n        set pl = null\r\n    endfunction\r\n\r\n    function SpellUniqueUnit takes unit hero, real spd returns nothing\r\n        local integer i = GetUnitUserData(hero)\r\n        local player pl = GetOwningPlayer(hero)\r\n        local string str\r\n        local real r \r\n        local real a\r\n        local real k\r\n        \r\n        set udg_SpellDamageSpec[i] = udg_SpellDamageSpec[i] + ( spd / 100 ) \r\n        set r = 100 * ( udg_SpellDamageSpec[i] - 1 )\r\n        set a = r - 1\r\n\r\n        if a < 0 and a > -1 then\r\n            set a = 0\r\n        endif\r\n        \r\n        set str = R2SW( a, 1, 2 )\r\n        set k = StringLength(str) * 0.004\r\n        if GetLocalPlayer() == pl then\r\n            call BlzFrameSetText(extraPanelNumUnique, str + udg_perc)\r\n            call BlzFrameSetPoint(extraPanelNumUnique, FRAMEPOINT_LEFT, extraPanelBackground, FRAMEPOINT_LEFT, 0.051 - k, -0.025)\r\n        endif\r\n\r\n        set pl = null\r\n        set hero = null\r\n    endfunction\r\n    \r\n    function GetUnitSpellPower takes unit myUnit returns real\r\n        local player owner = GetOwningPlayer(myUnit)\r\n        local integer unitId = GetHandleId(myUnit)\r\n        local real spellPower\r\n\r\n        if owner == Player(10) or owner == Player(11) or owner == Player(PLAYER_NEUTRAL_AGGRESSIVE) then\r\n            set spellPower = BossSpellPower\r\n        elseif IsUnitInGroup(myUnit, udg_heroinfo) then\r\n            set spellPower = LoadReal(udg_hash, unitId, KEY_SPELL_POWER )\r\n        else\r\n            set unitId = GetHandleId(udg_hero[GetPlayerId( GetOwningPlayer(myUnit) ) + 1])\r\n            set spellPower = LoadReal(udg_hash, unitId, KEY_SPELL_POWER )\r\n        endif\r\n        set owner = null\r\n        return spellPower\r\n    endfunction\r\n    \r\n    /*Returns Spell Power with weight.   \r\n    *If Spell Power is 3, then at weight = 1 it will return 3.\r\n    *If it is weight = 0.5, it will return 2.\r\n    *If it is weight = 2, then 5.\r\n    */\r\n    function GetUnitSpellPowerWeight takes unit myUnit, real weight returns real\r\n        local real spellPower = GetUnitSpellPower(myUnit)\r\n\t\tlocal real gain = spellPower - 1\r\n\t\tlocal real result = gain * weight + 1\r\n\r\n        return result\r\n    endfunction\r\n    \r\n    function GetPotionSpellPower takes unit myUnit returns real\r\n        local real spellPower = udg_SpellDamagePotion[GetUnitUserData(myUnit)]\r\n        \r\n        set myUnit = null\r\n        return spellPower\r\n    endfunction\r\n    \r\n    function GetUniqueSpellPower takes unit myUnit returns real\r\n        local real spellPower = udg_SpellDamageSpec[GetUnitUserData(myUnit)]\r\n        \r\n        set myUnit = null\r\n        return spellPower\r\n    endfunction\r\n\r\n    //Obsolete. Do not use.\r\n    function SpellPotion takes integer p, real spd returns nothing\r\n        local player pl = Player( p-1 )\r\n        local integer i = GetPlayerId( pl ) + 1\r\n        local string str\r\n        local real r \r\n        local real a\r\n        local real k\r\n        \r\n        set udg_SpellDamagePotion[i] = udg_SpellDamagePotion[i] + ( spd / 100 ) \r\n        set r = 100 * ( udg_SpellDamagePotion[i] - 1 )\r\n        set a = r - 1\r\n\r\n        if a < 0 and a > -1 then\r\n            set a = 0\r\n        endif\r\n\r\n        set str = R2SW( a, 1, 2 )\r\n        set k = StringLength(str) * 0.004\r\n        if GetLocalPlayer() == pl then\r\n            call BlzFrameSetText(extraPanelNumPotion, str + udg_perc)\r\n            call BlzFrameSetPoint(extraPanelNumPotion, FRAMEPOINT_LEFT, extraPanelBackground, FRAMEPOINT_LEFT, 0.051 - k, -0.006)\r\n        endif\r\n        \r\n        set pl = null\r\n    endfunction\r\n    \r\n    public function SetBossSpellPower takes real newBossSpellPower returns nothing\r\n        set BossSpellPower = newBossSpellPower\r\n        if BossSpellPower < BOSS_SPELL_POWER_MIN then\r\n            set BossSpellPower = BOSS_SPELL_POWER_MIN\r\n        elseif BossSpellPower > BOSS_SPELL_POWER_MAX then\r\n            set BossSpellPower = BOSS_SPELL_POWER_MAX\r\n        endif\r\n    endfunction\r\n    \r\n    public function AddBossSpellPower takes real addedBossSpellPower returns nothing\r\n        set BossSpellPower = BossSpellPower + addedBossSpellPower\r\n        if BossSpellPower < BOSS_SPELL_POWER_MIN then\r\n            set BossSpellPower = BOSS_SPELL_POWER_MIN\r\n        endif\r\n    endfunction\r\n\r\n    public function GetBossSpellPower takes nothing returns real\r\n        return BossSpellPower\r\n    endfunction\r\n    \r\n    \r\n    private function HeroChoose takes nothing returns nothing\r\n        local integer unitId = GetHandleId(Event_HeroChoose_Hero)\r\n        \r\n        call SaveReal(udg_hash, unitId, KEY_SPELL_POWER, BASE_SPELL_POWER )\r\n    endfunction\r\n    \r\n    private function OnDamageChange_Conditions takes nothing returns boolean\r\n        return udg_IsDamageSpell and IsUnitHasAbility( udg_DamageEventSource, 'A0N5' ) == false and IsDisableSpellPower == false\r\n    endfunction\r\n    \r\n    private function OnDamageChange takes nothing returns nothing\r\n        set udg_DamageEventAmount = udg_DamageEventAmount + ( Event_OnDamageChange_StaticDamage * ( GetUnitSpellPower(udg_DamageEventSource) - 1 ) )\r\n    endfunction\r\n \r\n    private function init takes nothing returns nothing\r\n        call CreateEventTrigger( \"Event_HeroChoose_Real\", function HeroChoose, null )\r\n        call CreateEventTrigger( \"Event_OnDamageChange_Real\", function OnDamageChange, function OnDamageChange_Conditions )\r\n        \r\n        /*set cyclA = 0\r\n        loop\r\n            exitwhen cyclA > 3\r\n            if GetPlayerSlotState(Player(cyclA)) == PLAYER_SLOT_STATE_PLAYING then\r\n                call spdstpl( cyclA, 1 )\r\n                call spdstpl( cyclA, -1 )\r\n            endif\r\n            set cyclA = cyclA + 1\r\n        endloop*/\r\n    endfunction\r\n\r\nendlibrary",
  "Events": [],
  "LocalVariables": [],
  "Conditions": [],
  "Actions": []
}