{
  "Id": 50332060,
  "Comment": "",
  "IsScript": true,
  "RunOnMapInit": false,
  "Script": "library Health requires Inventory\r\n\r\n    globals\r\n        private unit conditionTarget = null\r\n    endglobals\r\n\r\n    private function ResourceCondition takes unit caster, unit target returns boolean\r\n        local boolean isWork = true\r\n    \r\n        if IsHeroHasItem(caster, 'I09N') and caster != null then\r\n            set isWork = false\r\n        elseif IsUnitEnemy(target, GetOwningPlayer(caster)) and caster != null then\r\n            set isWork = false\r\n        elseif IsUnitDead(target) then\r\n            set isWork = false\r\n        elseif IsUnitInDuel(target) and IsUnitInDuel(caster) == false and udg_fightmod[3] then\r\n            set isWork = false\r\n        endif\r\n    \r\n        set caster = null\r\n        set target = null\r\n        return isWork\r\n    endfunction\r\n    \r\n    function HeroLessHP takes unit caster returns unit\r\n        local integer cyclA = 1\r\n        \r\n        set conditionTarget = null\r\n        loop\r\n            exitwhen cyclA > PLAYERS_LIMIT\r\n            if ResourceCondition(caster, udg_hero[cyclA]) and ( RMinBJ(GetUnitLifePercent(udg_hero[cyclA]), GetUnitLifePercent(udg_hero[cyclA - 3])) == GetUnitLifePercent(udg_hero[cyclA]) or GetUnitState(udg_hero[cyclA - 3], UNIT_STATE_LIFE) <= 0.405 ) and ( RMinBJ(GetUnitLifePercent(udg_hero[cyclA]), GetUnitLifePercent(udg_hero[cyclA - 1])) == GetUnitLifePercent(udg_hero[cyclA]) or GetUnitState(udg_hero[cyclA - 1], UNIT_STATE_LIFE) <= 0.405 ) and ( RMinBJ(GetUnitLifePercent(udg_hero[cyclA]), GetUnitLifePercent(udg_hero[cyclA - 2])) == GetUnitLifePercent(udg_hero[cyclA]) or GetUnitState(udg_hero[cyclA - 2], UNIT_STATE_LIFE) <= 0.405 ) then\r\n                set conditionTarget = udg_hero[cyclA]\r\n            endif\r\n            set cyclA = cyclA + 1\r\n        endloop\r\n        set caster = null\r\n        return conditionTarget\r\n    endfunction\r\n\r\n    function HeroLessMP takes unit caster returns unit\r\n        local integer cyclA = 1\r\n        \r\n        set conditionTarget = null\r\n        loop\r\n            exitwhen cyclA > PLAYERS_LIMIT\r\n            if ResourceCondition(caster, udg_hero[cyclA]) and ( RMinBJ(GetUnitManaPercent(udg_hero[cyclA]), GetUnitManaPercent(udg_hero[cyclA - 3])) == GetUnitManaPercent(udg_hero[cyclA]) or GetUnitState(udg_hero[cyclA - 3], UNIT_STATE_LIFE) <= 0.405 ) and ( RMinBJ(GetUnitManaPercent(udg_hero[cyclA]), GetUnitManaPercent(udg_hero[cyclA - 1])) == GetUnitManaPercent(udg_hero[cyclA]) or GetUnitState(udg_hero[cyclA - 1], UNIT_STATE_LIFE) <= 0.405 ) and ( RMinBJ(GetUnitManaPercent(udg_hero[cyclA]), GetUnitManaPercent(udg_hero[cyclA - 2])) == GetUnitManaPercent(udg_hero[cyclA]) or GetUnitState(udg_hero[cyclA - 2], UNIT_STATE_LIFE) <= 0.405 ) then\r\n                set conditionTarget = udg_hero[cyclA]\r\n            endif\r\n            set cyclA = cyclA + 1\r\n        endloop\r\n        \r\n        set caster = null\r\n        return conditionTarget\r\n    endfunction\r\n    \r\n    function HeroMoreHP takes unit caster returns unit\r\n        local integer cyclA = 1\r\n        local real health\r\n        \r\n        set conditionTarget = null\r\n        loop\r\n            exitwhen cyclA > PLAYERS_LIMIT\r\n            set health = GetUnitLifePercent(udg_hero[cyclA])\r\n            if ResourceCondition(caster, udg_hero[cyclA]) and health >= GetUnitLifePercent(udg_hero[cyclA - 1] ) and health >= GetUnitLifePercent(udg_hero[cyclA - 2] ) and health >= GetUnitLifePercent(udg_hero[cyclA - 3]) then\r\n                set conditionTarget = udg_hero[cyclA]\r\n            endif\r\n            set cyclA = cyclA + 1\r\n        endloop\r\n        set caster = null\r\n        return conditionTarget\r\n    endfunction\r\n\r\n    function GetHealthPercent takes unit whichUnit returns real\r\n        local real value    = GetUnitState(whichUnit, UNIT_STATE_LIFE)\r\n        local real maxValue = GetUnitState(whichUnit, UNIT_STATE_MAX_LIFE)\r\n\r\n        // Return 0 for null units.\r\n        if whichUnit == null or maxValue == 0 then\r\n            return 0.0\r\n        endif\r\n\r\n        set whichUnit = null\r\n        return value / maxValue * 100.0\r\n    endfunction\r\n\r\n    function GetManaPercent takes unit whichUnit returns real\r\n        local real value    = GetUnitState(whichUnit, UNIT_STATE_MANA)\r\n        local real maxValue = GetUnitState(whichUnit, UNIT_STATE_MAX_MANA)\r\n\r\n        // Return 0 for null units.\r\n        if whichUnit == null or maxValue == 0 then\r\n            return 0.0\r\n        endif\r\n\r\n        set whichUnit = null\r\n        return value / maxValue * 100.0\r\n    endfunction\r\n\r\n    function GetHealthFromPercent takes unit whichUnit, integer percent returns real\r\n        local real value    = GetUnitState(whichUnit, UNIT_STATE_LIFE)\r\n        local real maxValue = GetUnitState(whichUnit, UNIT_STATE_MAX_LIFE)\r\n\r\n        // Return 0 for null units.\r\n        if whichUnit == null or maxValue == 0 then\r\n            return 0.0\r\n        endif\r\n        if percent < 0 then\r\n            set percent = 0\r\n        elseif percent > 100 then\r\n            set percent = 100\r\n        endif\r\n\r\n        set whichUnit = null\r\n        return value / maxValue * percent\r\n    endfunction\r\n\r\n    function GetManaFromPercent takes unit whichUnit, integer percent returns real\r\n        local real value    = GetUnitState(whichUnit, UNIT_STATE_MANA)\r\n        local real maxValue = GetUnitState(whichUnit, UNIT_STATE_MAX_MANA)\r\n\r\n        // Return 0 for null units.\r\n        if whichUnit == null or maxValue == 0 then\r\n            return 0.0\r\n        endif\r\n        if percent < 0 then\r\n            set percent = 0\r\n        elseif percent > 100 then\r\n            set percent = 100\r\n        endif\r\n\r\n        set whichUnit = null\r\n        return value / maxValue * percent\r\n    endfunction\r\n    \r\n    function IsUnitHealthIsFull takes unit whichUnit returns boolean\r\n        local boolean isFull = GetUnitState(whichUnit, UNIT_STATE_LIFE) == GetUnitState(whichUnit, UNIT_STATE_MAX_LIFE)\r\n        set whichUnit = null\r\n        return isFull\r\n    endfunction\r\n    \r\n    function IsUnitManaIsFull takes unit whichUnit returns boolean\r\n        local boolean isFull = GetUnitState(whichUnit, UNIT_STATE_MANA) == GetUnitState(whichUnit, UNIT_STATE_MAX_MANA)\r\n        set whichUnit = null\r\n        return isFull\r\n    endfunction\r\n\r\n    function AddHealthPercent takes unit whichUnit, integer percent returns real\r\n        local real value    = GetUnitState(whichUnit, UNIT_STATE_LIFE)\r\n        local real maxValue = GetUnitState(whichUnit, UNIT_STATE_MAX_LIFE)\r\n        local real addedValue = maxValue * percent / 100\r\n\r\n        // Return 0 for null units.\r\n        if whichUnit == null or maxValue == 0 then\r\n            return value\r\n        endif\r\n\r\n        call SetUnitState( whichUnit, UNIT_STATE_LIFE, RMaxBJ(0,GetUnitState( whichUnit, UNIT_STATE_LIFE) + addedValue ))\r\n        set whichUnit = null\r\n        return GetUnitState( whichUnit, UNIT_STATE_LIFE)\r\n    endfunction\r\n    \r\n    function AddManaPercent takes unit whichUnit, integer percent returns real\r\n        local real value    = GetUnitState(whichUnit, UNIT_STATE_MANA)\r\n        local real maxValue = GetUnitState(whichUnit, UNIT_STATE_MAX_MANA)\r\n        local real addedValue = maxValue * percent / 100\r\n\r\n        // Return 0 for null units.\r\n        if whichUnit == null or maxValue == 0 then\r\n            return value\r\n        endif\r\n\r\n        call SetUnitState( whichUnit, UNIT_STATE_MANA, RMaxBJ(0,GetUnitState( whichUnit, UNIT_STATE_MANA) + addedValue ))\r\n        set whichUnit = null\r\n        return GetUnitState( whichUnit, UNIT_STATE_MANA)\r\n    endfunction\r\n\r\nendlibrary",
  "Events": [],
  "LocalVariables": [],
  "Conditions": [],
  "Actions": []
}