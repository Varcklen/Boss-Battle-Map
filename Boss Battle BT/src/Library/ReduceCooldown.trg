{
  "Id": 50332087,
  "Comment": "",
  "IsScript": true,
  "RunOnMapInit": false,
  "Script": "library ReduceCooldown\r\n\r\n\tglobals\r\n\t\tprivate constant real COOLDOWN_MIN = 0.1\t\r\n\tendglobals\r\n\r\n\tfunction UnitReduceAbilityCooldown takes unit target, integer abilityAffected, real time returns nothing\r\n\t\tlocal real currentCooldown\r\n\t\r\n\t\tif IsUnitInGroup( target, udg_heroinfo) == false then\r\n            call BJDebugMsg(\"Error! ReduceCooldown - UnitReduceAbilityCooldown: You are trying to reduce the cooldown of a '\" + GetUnitName(target) + \"' unit that is not a hero! \")\r\n            return\r\n        endif\r\n        \r\n        if GetUnitAbilityLevel( target, abilityAffected) == 0 then\r\n        \treturn\r\n        endif\r\n        \r\n        set currentCooldown = BlzGetUnitAbilityCooldownRemaining( target, abilityAffected)\r\n        \r\n        if currentCooldown <= COOLDOWN_MIN then \r\n        \treturn\r\n        endif\r\n        if time <= 0 then \r\n        \treturn\r\n        endif\r\n        \r\n        if currentCooldown > time then\r\n            call BlzStartUnitAbilityCooldown( target, abilityAffected, currentCooldown - time )\r\n        else\r\n        \tcall BlzEndUnitAbilityCooldown( target, abilityAffected )\r\n        endif\r\n\t\r\n\t\tset target = null\r\n\tendfunction\r\n\t\r\n\tfunction UnitReduceAbilityCooldownPercent takes unit target, integer abilityAffected, real percent returns nothing\r\n\t\tcall UnitReduceAbilityCooldown(target, abilityAffected, BlzGetUnitAbilityCooldown( target, abilityAffected, GetUnitAbilityLevel( target, abilityAffected ) - 1 ) * percent )\r\n\tendfunction\r\n\r\n    function UnitReduceCooldown takes unit target, real time returns nothing\r\n        local integer heroAbility\r\n        local integer i\r\n        local integer index = GetUnitUserData(target)\r\n        \r\n        if IsUnitInGroup(target, udg_heroinfo) == false then\r\n            call BJDebugMsg(\"Error! ReduceCooldown - UnitReduceCooldown: You are trying to reduce the cooldown of a \\\"\" + GetUnitName(target) + \"\\\" unit that is not a hero! Please report this error to the map author.\")\r\n            return\r\n        endif\r\n        \r\n        set i = 1\r\n        loop\r\n            exitwhen i > 4\r\n            set heroAbility = Database_Hero_Abilities[i][udg_HeroNum[index]]\r\n            call UnitReduceAbilityCooldown(target, heroAbility, time)\r\n            set i = i + 1\r\n        endloop\r\n    endfunction\r\n\r\n    function UnitReduceCooldownPercent takes unit target, real percent returns nothing\r\n    \tlocal integer heroAbility\r\n        local integer i\r\n        local integer index = GetUnitUserData(target)\r\n        \r\n        if IsUnitInGroup(target, udg_heroinfo) == false then\r\n            call BJDebugMsg(\"Error! ReduceCooldown - UnitReduceCooldown: You are trying to reduce the cooldown of a \\\"\" + GetUnitName(target) + \"\\\" unit that is not a hero! Please report this error to the map author.\")\r\n            return\r\n        endif\r\n        \r\n        set i = 1\r\n        loop\r\n            exitwhen i > 4\r\n            set heroAbility = Database_Hero_Abilities[i][udg_HeroNum[index]]\r\n            call UnitReduceAbilityCooldownPercent(target, heroAbility, percent)\r\n            set i = i + 1\r\n        endloop\r\n    endfunction\r\n    \r\n    /*Cancel Long Cooldown*/\r\n    function FindAbilityOnCooldown takes unit caster returns integer\r\n    \tlocal integer abilityId\r\n    \tlocal integer result\r\n    \tlocal integer heroIndex = udg_HeroNum[GetUnitUserData(caster)]\r\n    \tlocal integer i\r\n    \tlocal ListInt list = ListInt.create()\r\n\t\r\n\t\tset i = 1\r\n\t\tloop\r\n\t\t\texitwhen i > 4\r\n\t\t\tset abilityId = Database_Hero_Abilities[i][heroIndex]\r\n\t\t\tif BlzGetUnitAbilityCooldownRemaining( caster, abilityId) > 0 then\r\n\t\t\t\tcall list.Add(abilityId)\r\n\t\t\tendif\r\n\t\t\tset i = i + 1\r\n\t\tendloop\r\n\t\tset result = list.GetRandomCell()\r\n\t\tcall list.destroy()\r\n\t\treturn result\r\n    endfunction\r\n    \r\n    /*Cancel Long Cooldown*/\r\n    globals\r\n\t\tprivate constant integer CANCEL_COOLDOWN = 5\r\n\tendglobals\r\n\t\r\n\tprivate function StartCooldown takes nothing returns nothing\r\n\t    local integer id = GetHandleId( GetExpiredTimer() )\r\n\t    local unit caster = LoadUnitHandle( udg_hash, id, StringHash( \"short_cooldown_caster\" ) )\r\n\t    local integer abilityId = LoadInteger( udg_hash, id, StringHash( \"short_cooldown_ability\" ) )\r\n\t    local integer level = LoadInteger( udg_hash, id, StringHash( \"short_cooldown_level\" ) )\r\n\t    local integer manacost = BlzGetAbilityManaCost( abilityId, level )\r\n\t\r\n\t    call BlzStartUnitAbilityCooldown( caster, abilityId, CANCEL_COOLDOWN )\r\n\t    call SetUnitState( caster, UNIT_STATE_MANA, GetUnitState( caster, UNIT_STATE_MANA ) + manacost )\r\n\t    call FlushChildHashtable( udg_hash, id )\r\n\t\r\n\t    set caster = null\r\n\tendfunction  \r\n    \r\n    function LaunchShortCooldown takes unit caster, integer abilityId, integer level returns nothing\r\n    \tlocal integer id = GetHandleId( caster )\r\n\t\tlocal timer timerUsed = LoadTimerHandle( udg_hash, id, StringHash( \"short_cooldown\" ) )\r\n\t\t\r\n        if timerUsed == null then\r\n        \tset timerUsed = CreateTimer()\r\n        endif\r\n        call SaveTimerHandle( udg_hash, id, StringHash( \"short_cooldown\" ), timerUsed )\r\n        set id = GetHandleId( timerUsed ) \r\n        call SaveUnitHandle( udg_hash, id, StringHash( \"short_cooldown_caster\" ), caster )\r\n        call SaveInteger( udg_hash, id, StringHash( \"short_cooldown_ability\" ), abilityId )\r\n        call SaveInteger( udg_hash, id, StringHash( \"short_cooldown_level\" ), level - 1 )\r\n        call TimerStart( timerUsed, 0.01, false, function StartCooldown )\r\n        \r\n        set timerUsed = null\r\n    endfunction\r\n    \r\n    \r\n\r\nendlibrary",
  "Events": [],
  "LocalVariables": [],
  "Conditions": [],
  "Actions": []
}