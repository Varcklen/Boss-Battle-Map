{
  "Id": 50332072,
  "Comment": "",
  "IsScript": true,
  "RunOnMapInit": false,
  "Script": "library StackAbilities requires Trigger\r\n\r\n    struct AbilityStack\r\n        readonly integer abilityRawCode\r\n        private integer x\r\n        private integer y\r\n        private integer stackLimit\r\n        \r\n        private static integer LIMIT_X = 3\r\n        private static integer LIMIT_Y = 2\r\n        static framehandle array stackIcon[4][3]\r\n        static framehandle array stackText[4][3]\r\n        \r\n        //Nulling Ability\r\n        private static method NullingAbility_Conditions takes nothing returns boolean\r\n            local integer abilityRawCode = LoadInteger(udg_hash, GetHandleId(GetTriggeringTrigger()), StringHash(\"stck\") )\r\n            return GetUnitAbilityLevel( udg_Event_NullingAbility_Unit, abilityRawCode) > 0\r\n        endmethod\r\n\r\n        private static method NullingAbility takes nothing returns nothing\r\n            local integer x = LoadInteger(udg_hash, GetHandleId(GetTriggeringTrigger()), StringHash(\"stckx\") )\r\n            local integer y = LoadInteger(udg_hash, GetHandleId(GetTriggeringTrigger()), StringHash(\"stcky\") )\r\n            if GetLocalPlayer() == GetOwningPlayer( udg_Event_NullingAbility_Unit ) then\r\n                call BlzFrameSetVisible( stackIcon[x][y], false )\r\n            endif\r\n        endmethod\r\n        \r\n        private method InitNullingAbility takes nothing returns nothing\r\n            local trigger trig\r\n            set trig = CreateEventTrigger( \"udg_Event_NullingAbility_Real\", function thistype.NullingAbility, function thistype.NullingAbility_Conditions )\r\n            call SaveInteger(udg_hash, GetHandleId(trig), StringHash(\"stck\"), .abilityRawCode )\r\n            call SaveInteger(udg_hash, GetHandleId(trig), StringHash(\"stckx\"), .x )\r\n            call SaveInteger(udg_hash, GetHandleId(trig), StringHash(\"stcky\"), .y )\r\n            \r\n            set trig = null\r\n        endmethod\r\n        \r\n        //Ability Vision\r\n        private static method Vision_Conditions takes nothing returns boolean\r\n            return true //add something?\r\n        endmethod\r\n        \r\n        private static method Vision takes nothing returns nothing\r\n            local player owner = GetTriggerPlayer()\r\n            local integer triggerId =  GetHandleId(GetTriggeringTrigger())\r\n            local integer abilityRawCode = LoadInteger(udg_hash, triggerId, StringHash(\"stck\") )\r\n            local integer x = LoadInteger(udg_hash, triggerId, StringHash(\"stckx\") )\r\n            local integer y = LoadInteger(udg_hash, triggerId, StringHash(\"stcky\") )\r\n            \r\n            if IsUnitHasAbility(GetTriggerUnit(), abilityRawCode) and GetTriggerPlayer() == GetOwningPlayer(GetTriggerUnit())  then\r\n                if GetLocalPlayer() == owner then\r\n                    call BlzFrameSetVisible( stackIcon[x][y], true )\r\n                    call BlzFrameSetText( stackText[x][y], I2S(LoadInteger( udg_hash, abilityRawCode + GetHandleId(GetTriggerUnit()), StringHash( \"stckc\" ) )) )\r\n                endif\r\n            else\r\n                if GetLocalPlayer() == owner then\r\n                    call BlzFrameSetVisible( stackIcon[x][y], false )\r\n                endif\r\n            endif\r\n            \r\n            set owner = null\r\n        endmethod\r\n        \r\n        private method InitVision takes nothing returns nothing\r\n            local trigger trig = CreateTrigger()\r\n            local integer i = 0\r\n            \r\n            loop\r\n                exitwhen i > 3\r\n                call TriggerRegisterPlayerSelectionEventBJ( trig, Player(i), true )\r\n                set i = i + 1\r\n            endloop\r\n            call TriggerAddAction( trig, function thistype.Vision )\r\n            call TriggerAddCondition( trig, Condition( function thistype.Vision_Conditions ) )\r\n            call SaveInteger(udg_hash, GetHandleId(trig), StringHash(\"stck\"), .abilityRawCode )\r\n            call SaveInteger(udg_hash, GetHandleId(trig), StringHash(\"stckx\"), .x )\r\n            call SaveInteger(udg_hash, GetHandleId(trig), StringHash(\"stcky\"), .y )\r\n            \r\n            set trig = null\r\n        endmethod\r\n        \r\n        //Upgrade Ability\r\n        private static method Upgrade_Conditions takes nothing returns boolean\r\n            local integer abilityRawCode = LoadInteger(udg_hash, GetHandleId(GetTriggeringTrigger()), StringHash(\"stck\") )\r\n            return GetLearnedSkill() == abilityRawCode\r\n        endmethod\r\n\r\n        private static method Upgrade takes nothing returns nothing\r\n            local unit hero = GetLearningUnit()\r\n            local integer triggerId = GetHandleId(GetTriggeringTrigger())\r\n            local integer abilityRawCode = LoadInteger(udg_hash, triggerId, StringHash(\"stck\") )\r\n            local integer stack = LoadInteger(udg_hash, triggerId, StringHash(\"stcks\") )\r\n            local integer x = LoadInteger(udg_hash, triggerId, StringHash(\"stckx\") )\r\n            local integer y = LoadInteger(udg_hash, triggerId, StringHash(\"stcky\") )\r\n            \r\n            if GetUnitAbilityLevel( hero, abilityRawCode) == 1 then\r\n                call SaveInteger( udg_hash, abilityRawCode + GetHandleId(hero), StringHash( \"stckc\" ), stack )\r\n            endif\r\n            if GetLocalPlayer() == GetOwningPlayer( hero ) then\r\n                call BlzFrameSetVisible( stackIcon[x][y], true )\r\n                call BlzFrameSetText( stackText[x][y], I2S( LoadInteger( udg_hash, abilityRawCode + GetHandleId(hero), StringHash( \"stckc\" ) ) ) )\r\n            endif\r\n            \r\n            set hero = null\r\n        endmethod\r\n\r\n        private method InitUpgradeAbility takes nothing returns nothing\r\n            local trigger trig = CreateTrigger()\r\n            call TriggerRegisterAnyUnitEventBJ( trig, EVENT_PLAYER_HERO_SKILL )\r\n            call TriggerAddCondition( trig, Condition( function thistype.Upgrade_Conditions ) )\r\n            call TriggerAddAction( trig, function thistype.Upgrade )\r\n            call SaveInteger(udg_hash, GetHandleId(trig), StringHash(\"stck\"), .abilityRawCode )\r\n            call SaveInteger(udg_hash, GetHandleId(trig), StringHash(\"stcks\"), .stackLimit )\r\n            call SaveInteger(udg_hash, GetHandleId(trig), StringHash(\"stckx\"), .x )\r\n            call SaveInteger(udg_hash, GetHandleId(trig), StringHash(\"stcky\"), .y )\r\n            \r\n            set trig = null\r\n        endmethod\r\n        \r\n        \r\n        //Ability Cast\r\n        private static method Cast_Conditions takes nothing returns boolean\r\n            local integer abilityRawCode = LoadInteger(udg_hash, GetHandleId(GetTriggeringTrigger()), StringHash(\"stck\") )\r\n            return GetSpellAbilityId() == abilityRawCode\r\n        endmethod\r\n\r\n        private static method Charge takes nothing returns nothing \r\n            local integer id = GetHandleId( GetExpiredTimer( ) )\r\n            local unit u = LoadUnitHandle( udg_hash, id, StringHash( \"stcke\" ) )\r\n            local integer unitId = GetHandleId( u )\r\n            local integer pat = LoadInteger( udg_hash, id, StringHash( \"stcke\" ) )\r\n            local integer abilityRawCode = LoadInteger(udg_hash, id, StringHash( \"stckea\" ) )\r\n            local integer stack = LoadInteger(udg_hash, id, StringHash( \"stckes\" ) )\r\n            local framehandle frame = LoadFrameHandle(udg_hash, id, StringHash( \"stckef\" ) )\r\n            local integer k = LoadInteger( udg_hash, abilityRawCode + unitId, StringHash( \"stckc\" ) )\r\n\r\n            if pat == udg_Pattern then\r\n                set k = k + 1\r\n                if k > stack then\r\n                    set k = stack\r\n                endif\r\n                if GetLocalPlayer() == GetOwningPlayer(u) then\r\n                    call BlzFrameSetText( frame, I2S(k) )\r\n                endif\r\n                call SaveInteger( udg_hash, abilityRawCode + unitId, StringHash( \"stckc\" ), k )\r\n                call BlzEndUnitAbilityCooldown( u, abilityRawCode )\r\n            endif\r\n            call FlushChildHashtable( udg_hash, id )\r\n            \r\n            set u = null\r\n            set frame = null\r\n        endmethod\r\n\r\n        private static method Cooldown takes nothing returns nothing\r\n            local integer id = GetHandleId( GetExpiredTimer() )\r\n            local unit caster = LoadUnitHandle( udg_hash, id, StringHash( \"stckd\" ) )\r\n            local integer abilityRawCode = LoadInteger(udg_hash, id, StringHash( \"stckd\" ) )\r\n\r\n            call BlzEndUnitAbilityCooldown( caster, abilityRawCode )\r\n            call FlushChildHashtable( udg_hash, id )\r\n\r\n            set caster = null\r\n        endmethod\r\n\r\n        private static method Cast takes nothing returns nothing\r\n            local unit caster = GetSpellAbilityUnit()\r\n            local integer triggerId =  GetHandleId(GetTriggeringTrigger())\r\n            local integer abilityRawCode = LoadInteger(udg_hash, triggerId, StringHash(\"stck\") )\r\n            local integer stack = LoadInteger(udg_hash, triggerId, StringHash(\"stcks\") )\r\n            local integer x = LoadInteger(udg_hash, triggerId, StringHash(\"stckx\") )\r\n            local integer y = LoadInteger(udg_hash, triggerId, StringHash(\"stcky\") )\r\n            local integer unitId = GetHandleId( caster )\r\n            local integer k = LoadInteger( udg_hash, abilityRawCode + unitId, StringHash( \"stckc\" ) )\r\n            local real t\r\n            local integer id\r\n            \r\n            if k > 0 then\r\n                set k = k - 1\r\n                call SaveInteger( udg_hash, abilityRawCode + unitId, StringHash( \"stckc\" ), k )\r\n                \r\n                set t = BlzGetAbilityRealLevelField(BlzGetUnitAbility(caster, abilityRawCode), ABILITY_RLF_COOLDOWN, 0) \r\n                if k > 0 then\r\n                    set id = InvokeTimerWithUnit( caster, \"stckd\", 0.01, false, function thistype.Cooldown )\r\n                    call SaveInteger(udg_hash, id, StringHash( \"stckd\" ), abilityRawCode )\r\n                endif\r\n                if GetLocalPlayer() == GetOwningPlayer(caster) then\r\n                    call BlzFrameSetText( stackText[x][y], I2S(k) )\r\n                endif\r\n                \r\n                set id = GetHandleId( caster )\r\n                call SaveTimerHandle( udg_hash, id, StringHash( \"stcke\" ), CreateTimer() )\r\n                set id = GetHandleId( LoadTimerHandle( udg_hash, id, StringHash( \"stcke\" ) ) ) \r\n                call SaveUnitHandle( udg_hash, id, StringHash( \"stcke\" ), caster )\r\n                call SaveInteger( udg_hash, id, StringHash( \"stcke\" ), udg_Pattern )\r\n                call SaveInteger(udg_hash, id, StringHash( \"stckea\" ), abilityRawCode )\r\n                call SaveInteger(udg_hash, id, StringHash( \"stckes\" ), stack )\r\n                call SaveFrameHandle(udg_hash, id, StringHash( \"stckef\" ), stackText[x][y] )\r\n                call TimerStart( LoadTimerHandle( udg_hash, GetHandleId( caster ), StringHash( \"stcke\" ) ), t, false, function thistype.Charge )\r\n            endif\r\n            \r\n            set caster = null\r\n        endmethod\r\n        \r\n        private method InitCast takes nothing returns nothing\r\n            local trigger trig = CreateTrigger()\r\n            call TriggerRegisterAnyUnitEventBJ( trig, EVENT_PLAYER_UNIT_SPELL_EFFECT )\r\n            call TriggerAddCondition( trig, Condition( function thistype.Cast_Conditions ) )\r\n            call TriggerAddAction( trig, function thistype.Cast )\r\n            call SaveInteger(udg_hash, GetHandleId(trig), StringHash(\"stck\"), .abilityRawCode )\r\n            call SaveInteger(udg_hash, GetHandleId(trig), StringHash(\"stcks\"), .stackLimit )\r\n            call SaveInteger(udg_hash, GetHandleId(trig), StringHash(\"stckx\"), .x )\r\n            call SaveInteger(udg_hash, GetHandleId(trig), StringHash(\"stcky\"), .y )\r\n            \r\n            set trig = null\r\n        endmethod\r\n        \r\n        \r\n        //Cooldown Reset\r\n        private static method CooldownReset_Conditions takes nothing returns boolean\r\n            local integer abilityRawCode = LoadInteger(udg_hash, GetHandleId(GetTriggeringTrigger()), StringHash(\"stck\") )\r\n            return IsUnitHasAbility( Event_CooldownReset_Hero, abilityRawCode)\r\n        endmethod\r\n\r\n        private static method CooldownReset takes nothing returns nothing\r\n            local unit hero = Event_CooldownReset_Hero\r\n            local integer triggerId =  GetHandleId(GetTriggeringTrigger())\r\n            local integer abilityRawCode = LoadInteger(udg_hash, triggerId, StringHash(\"stck\") )\r\n            local integer x = LoadInteger(udg_hash, triggerId, StringHash(\"stckx\") )\r\n            local integer y = LoadInteger(udg_hash, triggerId, StringHash(\"stcky\") )\r\n            local integer stack = LoadInteger(udg_hash, triggerId, StringHash(\"stcks\") )\r\n            \r\n            call SaveInteger( udg_hash, abilityRawCode + GetHandleId(hero), StringHash( \"stckc\" ), stack )\r\n            if GetLocalPlayer() == GetOwningPlayer(hero) then\r\n                call BlzFrameSetText( stackText[x][y], I2S(stack) )\r\n            endif\r\n            \r\n            set hero = null\r\n        endmethod\r\n        \r\n        private method InitResetCooldown takes nothing returns nothing\r\n            local trigger trig = CreateTrigger()\r\n            set trig = CreateEventTrigger( \"Event_CooldownReset_Real\", function thistype.CooldownReset, function thistype.CooldownReset_Conditions )\r\n            call SaveInteger(udg_hash, GetHandleId(trig), StringHash(\"stck\"), .abilityRawCode )\r\n            call SaveInteger(udg_hash, GetHandleId(trig), StringHash(\"stckx\"), .x )\r\n            call SaveInteger(udg_hash, GetHandleId(trig), StringHash(\"stcky\"), .y )\r\n            call SaveInteger(udg_hash, GetHandleId(trig), StringHash(\"stcks\"), .stackLimit )\r\n            \r\n            set trig = null\r\n        endmethod\r\n        \r\n        //All triggers\r\n        private method InitOther takes nothing returns nothing\r\n            call InitUpgradeAbility()\r\n            call InitNullingAbility()\r\n            call InitVision()\r\n            call InitCast()\r\n            call InitResetCooldown()\r\n            //call SaveInteger(udg_hash, .abilityRawCode, StringHash(\"stckc\"), .stackLimit )\r\n        endmethod\r\n        \r\n        static method create takes integer abilityRawCode, integer x, integer y, integer stackLimit returns AbilityStack\r\n            local AbilityStack p = AbilityStack.allocate() \r\n            set p.abilityRawCode = abilityRawCode\r\n            set p.x = IMinBJ( IMaxBJ(x,0), LIMIT_X )\r\n            set p.y = IMinBJ( IMaxBJ(y,0), LIMIT_Y )\r\n            set p.stackLimit = stackLimit\r\n            call p.InitOther()\r\n            return p\r\n        endmethod\r\n        \r\n        private static method CreateStackIcon takes integer x, integer y returns nothing\r\n            local framehandle text\r\n            local framehandle backdrop\r\n            local real xPos = 0.648 + (x*0.044)\r\n            local real yPos = 0.102 - (y*0.044)\r\n            \r\n            set backdrop = BlzCreateFrameByType(\"BACKDROP\", \"\", BlzGetOriginFrame(ORIGIN_FRAME_GAME_UI, 0), \"StandartFrameTemplate\", 0)\r\n            call BlzFrameSetSize( backdrop, 0.012, 0.012 )\r\n            call BlzFrameSetAbsPoint(backdrop, FRAMEPOINT_CENTER, xPos, yPos)\r\n            call BlzFrameSetTexture( backdrop, \"war3mapImported\\\\BTNfeed-icon-red-1_result.blp\",0, true)\r\n            call BlzFrameSetVisible( backdrop, false )\r\n            set stackIcon[x][y] = backdrop\r\n\r\n            set text = BlzCreateFrameByType(\"TEXT\", \"\", stackIcon[x][y], \"StandartFrameTemplate\", 0)\r\n            call BlzFrameSetSize( text, 0.005, 0.01 )\r\n            call BlzFrameSetAbsPoint(text, FRAMEPOINT_CENTER, xPos + 0.001, yPos)\r\n            call BlzFrameSetText( text, \"0\" )\r\n            set stackText[x][y] = text\r\n            \r\n            set text = null\r\n            set backdrop = null\r\n        endmethod\r\n        \r\n        private static method onInit takes nothing returns nothing\r\n            local integer i\r\n            local integer k\r\n            \r\n            set i = 0\r\n            loop\r\n                exitwhen i > LIMIT_X\r\n                set k = 0\r\n                loop\r\n                    exitwhen k > LIMIT_Y\r\n                    call CreateStackIcon(i, k)\r\n                    set k = k + 1\r\n                endloop\r\n                set i = i + 1\r\n            endloop\r\n        endmethod\r\n        \r\n    endstruct\r\n    \r\n    public function AddAbilityStack takes integer whichAbility, integer x, integer y, integer stackLimit returns AbilityStack\r\n        if udg_hash == null then\r\n            set udg_hash = InitHashtable()\r\n        endif\r\n        return AbilityStack.create(whichAbility, x, y, stackLimit)\r\n    endfunction\r\n\r\nendlibrary\r\n",
  "Events": [],
  "LocalVariables": [],
  "Conditions": [],
  "Actions": []
}