{
  "Id": 50332343,
  "Comment": "",
  "IsScript": true,
  "RunOnMapInit": false,
  "Script": "library HeroesTable initializer init requires HeroesTableDatabase, Repick\r\n\r\n    globals\r\n    \tprivate constant boolean ENABLE_NEW_HERO_ICON = false\r\n    endglobals\r\n    \r\n    globals\r\n        private constant integer CLASSES = HeroesTableDatabase_CLASSES\r\n        private constant integer HEROES_IN_COLUMN_MAX = HeroesTableDatabase_HEROES_IN_COLUMN_MAX\r\n        private framehandle array heroButton[CLASSES][HEROES_IN_COLUMN_MAX]//Class/Position in Column\r\n        private framehandle array heroIcon[CLASSES][HEROES_IN_COLUMN_MAX]//Class/Position in Column\r\n    \r\n        private framehandle HeroTable\r\n        private framehandle ChooseButton\r\n        private framehandle BanButton\r\n        private framehandle array LevelTextFrame\r\n        private framehandle array LevelHeroIcon\r\n        private framehandle MainSkinButton\r\n        private framehandle MainSkinIcon\r\n        private framehandle AbilityBackground\r\n        \r\n        private framehandle array Skins_Button\r\n        private framehandle array Skins_Icon\r\n        private framehandle array Skins_LockFrame\r\n        private framehandle array Skins_Text\r\n        private boolean array Skins_GlowAdd\r\n        \r\n        real Event_HeroPicked_Real\r\n        unit Event_HeroPicked_Hero\r\n        player Event_HeroPicked_Player\r\n        integer Event_HeroPicked_HeroKey\r\n        integer Event_HeroPicked_Class\r\n        \r\n        private constant real BUTTON_SIZE = 0.032\r\n        private constant real START_POSITION_X = 0.66\r\n        private constant real START_POSITION_Y = 0.5\r\n        private constant integer POTION_BONUSES_ADDED_TO_HEROES = 4\r\n        \r\n        private framehandle array AspectVision[3]\r\n        private framehandle array AspectButton[3]\r\n        private constant real ASPECTS_SIZE = 0.03\r\n        private constant real ASPECTS_INDENT = 0.035\r\n        \r\n        private constant integer KEY_CLASS = StringHash(\"kclss\")\r\n        private constant integer KEY_POSITION = StringHash(\"kpstn\")\r\n        \r\n        private ChoosedHeroTemplate array ChoosedHero[PLAYERS_LIMIT_ARRAYS]\r\n        public framehandle array ChoosedHeroButton[PLAYERS_LIMIT_ARRAYS]\r\n        public string array ChoosedHeroIcon[PLAYERS_LIMIT_ARRAYS]\r\n        \r\n        //private unit array PotancialHero[PLAYERS_LIMIT_ARRAYS][HEROES_COUNT_ARRAYS]\r\n        \r\n        boolean array IsBanned[HEROES_COUNT_ARRAYS]\r\n        \r\n        private framehandle InfoBackground = null \r\n        private framehandle InfoButton = null \r\n        private framehandle InfoPanel_Icon = null\r\n        private framehandle StoryTextArea = null\r\n        \r\n        private constant integer TEXT_NUMBERS = 8\r\n        private framehandle array InfoPanelText[TEXT_NUMBERS]\r\n    endglobals\r\n    \r\n    struct ChoosedHeroTemplate\r\n        unit hero = null\r\n        integer class\r\n        integer position\r\n        integer heroKey\r\n    endstruct\r\n    \r\n    public function IsHeroSelected takes unit hero returns boolean\r\n    \treturn LoadBoolean(udg_hash, GetHandleId(hero), HeroesChoise_STRING_HASH_SELECT)\r\n    endfunction\r\n    \r\n    public function GetHeroMainOwner takes unit hero returns player\r\n    \treturn LoadPlayerHandle(udg_hash, GetHandleId(hero), StringHash(\"main_owner\") )\r\n    endfunction\r\n    \r\n    private function GetDifficulty takes integer index returns string\r\n        if index == 2 then\r\n            return \"|cffff3300Hard|r\"\r\n        elseif index == 1 then\r\n            return \"|cffffcc00Medium|r\"\r\n        elseif index == 0 then\r\n            return \"|cff00cc00Easy|r\"\r\n        endif\r\n        return \"|cffff00ffUNKNOWN!|r\"\r\n    endfunction\r\n    \r\n    private function IsCanChoosedManyTimes takes integer heroId returns boolean\r\n        if heroId == udg_Database_Hero[31] then\r\n            return true\r\n        elseif heroId == udg_Database_Hero[34] then\r\n            return true\r\n        endif\r\n        return false\r\n    endfunction\r\n    \r\n    private function StringSizeSmall takes string s returns real\r\n        return (0.0002*StringLength(s))+0.05\r\n    endfunction\r\n    \r\n    public function SetLevelNumberFrame takes player owner, integer level returns nothing\r\n        local integer index = GetPlayerId( owner ) + 1\r\n        call BlzFrameSetText( LevelTextFrame[index], I2S(level) )\r\n        set owner = null\r\n    endfunction\r\n    \r\n    private function ReturnActiveIcon takes unit hero returns nothing\r\n        local integer index = GetUnitUserData(hero)\r\n        local integer heroPosition = udg_HeroNum[index]\r\n        local integer unitType = GetUnitTypeId( hero )\r\n        local integer i\r\n        local integer k\r\n        local integer kEnd\r\n        local boolean end = false\r\n\r\n        set udg_UnitHeroLogic[heroPosition] = false\r\n        \r\n        set i = 0\r\n        loop\r\n            exitwhen i > CLASSES or end\r\n            set k = 0\r\n            set kEnd = HeroesTableDatabase_HEROES_IN_CLASS[HEROES_IN_COLUMN_MAX]\r\n            loop\r\n                exitwhen k > CLASSES or end\r\n                if unitType == HeroFrame[i][k] then //NEED ADD!\r\n                    call BlzFrameSetTexture( heroIcon[i][k], BlzGetAbilityIcon(GetUnitTypeId(hero)),0, true) //heroIcon[CLASSES][HEROES_IN_COLUMN_MAX] NEED ADD!\r\n                    set end = true\r\n                endif\r\n                set k = k + 1\r\n            endloop\r\n            set i = i + 1\r\n        endloop\r\n\r\n        set hero = null\r\n    endfunction\r\n    \r\n    private function HeroRepick takes nothing returns nothing\r\n        local unit hero = Event_HeroRepick_Hero\r\n        local player owner = GetOwningPlayer(hero)\r\n        local integer index = GetPlayerId( owner ) + 1\r\n    \r\n        call ReturnActiveIcon(hero)\r\n        \r\n        call BlzFrameSetTexture(LevelHeroIcon[index], \"ReplaceableTextures\\\\CommandButtons\\\\BTNSelectHeroOn.blp\", 0, true)\r\n        \r\n        //Десинк?\r\n        if GetLocalPlayer() == owner and udg_UntilFirstFight then\r\n            call BlzFrameSetVisible( AbilityBackground, false )\r\n            call BlzFrameSetVisible( MainSkinButton, false )\r\n            call BlzFrameSetVisible( ChooseButton, false )\r\n            call BlzFrameSetVisible( BanButton, false )\r\n            call BlzFrameSetVisible(InfoBackground, false) \r\n            call BlzFrameSetVisible(InfoButton, false)\r\n            call BlzFrameSetVisible( HeroTable, true )\r\n            \r\n            if udg_Host == owner then\r\n                call BlzFrameSetVisible( BanButton, true )\r\n            endif\r\n        endif\r\n        \r\n        set owner = null\r\n        set hero = null\r\n    endfunction\r\n    \r\n    private function HeroLeave takes nothing returns nothing\r\n        local unit hero = Event_HeroRepick_Hero\r\n        local player owner = GetOwningPlayer(hero)\r\n        local integer index = GetPlayerId( owner ) + 1\r\n    \r\n        if udg_UntilFirstFight then\r\n            call ReturnActiveIcon(hero)\r\n        endif\r\n        \r\n        call BlzFrameSetVisible( LevelTextFrame[index], false )\r\n        call BlzFrameSetTexture(LevelHeroIcon[index], \"war3mapImported\\\\BTNDivineShieldOff-Reforged.blp\", 0, true)\r\n        \r\n        set owner = null\r\n        set hero = null\r\n    endfunction\r\n    \r\n    private function SetHeroColor takes unit hero returns nothing\r\n        if BlzGetUnitIntegerField( hero,UNIT_IF_PRIMARY_ATTRIBUTE) == 1 then\r\n            call SetUnitColor( hero, GetPlayerColor(Player(12)) )\r\n        elseif BlzGetUnitIntegerField( hero,UNIT_IF_PRIMARY_ATTRIBUTE) == 2 then\r\n            call SetUnitColor( hero, GetPlayerColor(Player(13)) )\r\n        elseif BlzGetUnitIntegerField( hero,UNIT_IF_PRIMARY_ATTRIBUTE) == 3 then\r\n            call SetUnitColor( hero, GetPlayerColor(Player(22)) )\r\n        endif\r\n        set hero = null\r\n    endfunction\r\n    \r\n    private function SetAbilitiesInfo takes player owner, unit hero, integer heroIndex, integer alternativeUnique, integer class returns nothing\r\n        local integer unique\r\n        local integer i\r\n     \r\n\r\n        if alternativeUnique == 0 then\r\n            set unique = HeroesTableDatabase_Uniques[class]\r\n        else\r\n            set unique = alternativeUnique\r\n        endif\r\n\r\n        if GetLocalPlayer() == owner then\r\n            call BlzFrameSetVisible( AbilityBackground, true )\r\n            //МОЖЕТ ВЫЗВАТЬ ДЕСИНК?\r\n            set i = 1\r\n            loop\r\n                exitwhen i > 4\r\n                call BlzFrameSetTexture( abilityFrame[i].icon, BlzGetAbilityIcon( Database_Hero_Abilities[i][heroIndex] ),0, true)\r\n                call abilityFrame[i].SetNameAndDescription(BlzGetAbilityResearchTooltip(Database_Hero_Abilities[i][heroIndex], 0), BlzGetAbilityResearchExtendedTooltip(Database_Hero_Abilities[i][heroIndex], 0) )\r\n                set i = i + 1\r\n            endloop\r\n                \r\n            call BlzFrameSetTexture( abilityFrame[5].icon, BlzGetAbilityIcon( unique ),0, true)\r\n            call abilityFrame[5].SetNameAndDescription( GetAbilityName(unique), BlzGetAbilityExtendedTooltip(unique, 0) )\r\n            call BlzFrameSetTexture( MainSkinIcon, BlzGetAbilityIcon(GetUnitTypeId(hero)),0, true)\r\n        endif\r\n        set owner = null\r\n        set hero = null\r\n    endfunction\r\n    \r\n    private function SetAspectButtons takes player localPlayer, integer whichButton, integer aspectAbility returns nothing \r\n        local integer playerIndex = GetPlayerId(localPlayer)\r\n    \r\n        if whichButton < 1 or whichButton > 3 then\r\n            call BJDebugMsg(\"Error! You are trying to access an AspectButton button in Heroes Choose that does not exist. You cannot change its description. Please contact the developer. Current: \" + I2S(whichButton))\r\n            return\r\n        endif\r\n\r\n        set AspectName[playerIndex][whichButton] = BlzGetAbilityTooltip(aspectAbility, 0)\r\n        set AspectDescription[playerIndex][whichButton] = BlzGetAbilityExtendedTooltip(aspectAbility, 0)\r\n\r\n        if GetLocalPlayer() == localPlayer then\r\n            call BlzFrameSetTexture(AspectVision[whichButton-1], BlzGetAbilityIcon(aspectAbility), 0, true)\r\n            call BlzFrameSetVisible( AspectVision[whichButton-1], true )\r\n        endif\r\n        \r\n        set localPlayer = null\r\n    endfunction \r\n    \r\n    private function SetAspectsInfo takes player owner, integer heroIndex returns nothing\r\n        local integer i\r\n    \r\n        if Aspects_IsHeroIndexCanUseAspects(heroIndex) then\r\n            set i = 1\r\n            loop\r\n                exitwhen i > ASPECT_LIMIT\r\n                call SetAspectButtons(owner, i, Aspect[heroIndex][i])\r\n                set i = i + 1\r\n            endloop\r\n            if GetLocalPlayer() == owner then\r\n                call BlzFrameSetVisible( InfoPanelText[TEXT_NUMBERS - 2], false )\r\n            endif\r\n        else\r\n            if GetLocalPlayer() == owner then\r\n                call BlzFrameSetVisible( AspectVision[0], false )\r\n                call BlzFrameSetVisible( AspectVision[1], false )\r\n                call BlzFrameSetVisible( AspectVision[2], false )\r\n                call BlzFrameSetVisible( InfoPanelText[TEXT_NUMBERS - 2], true )\r\n            endif\r\n        endif\r\n        set owner = null\r\n    endfunction\r\n    \r\n    private function SetSkinInfo takes player owner, integer heroIndex, integer index, string mainIconPath returns nothing\r\n        local integer i = 1\r\n\r\n        loop\r\n            exitwhen i > udg_DB_Skin_Limit\r\n            if GetLocalPlayer() == owner then\r\n                if skiniconBTN[heroIndex][i] != null and StringLength(skiniconBTN[heroIndex][i]) > 3 then\r\n                    if BlzFrameIsVisible(Skins_Icon[1]) then\r\n                        call BlzFrameSetVisible( Skins_Button[i], true )\r\n                    endif\r\n                    call BlzFrameSetVisible( MainSkinButton, true )\r\n                    call BlzFrameSetTexture( MainSkinIcon, mainIconPath ,0, true)\r\n                    if udg_LvL[index] < skinlvl[heroIndex][i] and CheatSystem_IsCheatsEnabled() == false then\r\n                        call BlzFrameSetText( Skins_Text[i], I2S(skinlvl[heroIndex][i]) )\r\n                        call BlzFrameSetTexture( Skins_Icon[i], skiniconDIS[heroIndex][i],0, true)\r\n                        call BlzFrameSetVisible( Skins_LockFrame[i], true )\r\n                        call BlzFrameSetVisible( Skins_Text[i], true )\r\n                    else\r\n                        call BlzFrameSetTexture( Skins_Icon[i], skiniconBTN[heroIndex][i],0, true)\r\n                        call BlzFrameSetVisible( Skins_LockFrame[i], false )\r\n                        call BlzFrameSetVisible( Skins_Text[i], false )\r\n                    endif\r\n                else\r\n                    if i == 1 then\r\n                        call BlzFrameSetVisible( MainSkinButton, false )\r\n                    endif\r\n                    call BlzFrameSetVisible( Skins_Button[i], false )\r\n                endif\r\n            endif\r\n            set i = i + 1\r\n        endloop\r\n        \r\n        set owner = null\r\n    endfunction\r\n    \r\n    private function DisableInfoFrames takes player owner returns nothing\r\n        if GetLocalPlayer() == owner then\r\n            call BlzFrameSetVisible( AbilityBackground, false )\r\n            call BlzFrameSetVisible( BanButton, false )\r\n            call BlzFrameSetVisible( InfoButton, false) \r\n            call BlzFrameSetVisible( InfoBackground, false) \r\n        endif\r\n    \r\n        set owner = null\r\n    endfunction\r\n    \r\n    globals\r\n        private string TempRole\r\n        private integer TempRoleNumber\r\n    endglobals\r\n    \r\n    private function AddRole takes string role returns nothing\r\n        if TempRoleNumber > 0 then\r\n            set TempRole = TempRole + \", \"\r\n        endif\r\n        set TempRoleNumber = TempRoleNumber + 1\r\n        set TempRole = TempRole + role\r\n    endfunction\r\n    \r\n    private function GetUnitRoles takes HeroFramehandle heroFrame returns string\r\n        set TempRole = \"\"\r\n        set TempRoleNumber = 0\r\n    \r\n        if heroFrame.role[ROLE_DEFEND] then\r\n            call AddRole(\"|cFFD74D0EDefender|r\")\r\n        endif\r\n        if heroFrame.role[ROLE_SUPPORT] then\r\n            call AddRole(\"|cFF4D94B5Support|r\")\r\n        endif\r\n        if heroFrame.role[ROLE_HEAL] then\r\n            call AddRole(\"|cFF399014Healer|r\")\r\n        endif\r\n        if heroFrame.role[ROLE_MAGIC_DAMAGE] then\r\n            call AddRole(\"|cFF0A5EC6Mage|r\")\r\n        endif\r\n        if heroFrame.role[ROLE_PHYSICAL_DAMAGE] then\r\n            call AddRole(\"|cFFC60303Warrior|r\")\r\n        endif\r\n        if heroFrame.role[ROLE_SUMMONER] then\r\n            call AddRole(\"|cFFC0D001Summoner|r\")\r\n        endif\r\n        if heroFrame.role[ROLE_CONTROL] then\r\n            call AddRole(\"|cFFB95BB0Disabler|r\")\r\n        endif\r\n    \r\n        call heroFrame.destroy()\r\n        return TempRole\r\n    endfunction\r\n    \r\n    private function GetHeroMainStat takes unit hero returns string\r\n        local string stat = \"\"\r\n        if BlzGetUnitIntegerField( hero,UNIT_IF_PRIMARY_ATTRIBUTE) == 1 then\r\n            set stat = \"|cFFC82323Strength|r\"\r\n        elseif BlzGetUnitIntegerField( hero,UNIT_IF_PRIMARY_ATTRIBUTE) == 2 then\r\n            set stat = \"|cFF2323C8Intellect|r\"\r\n        elseif BlzGetUnitIntegerField( hero,UNIT_IF_PRIMARY_ATTRIBUTE) == 3 then\r\n            set stat = \"|cFF23C823Agility|r\"\r\n        endif\r\n        set hero = null\r\n        return stat\r\n    endfunction\r\n    \r\n    private function GetUnitType takes unit hero returns string\r\n        local string unitType = \"\"\r\n        if IsUnitType( hero, UNIT_TYPE_UNDEAD) then\r\n            set unitType = \"|cffff1493Undead|r\"\r\n        else\r\n            set unitType = \"Normal\"\r\n        endif\r\n        \r\n        if IsCanChoosedManyTimes(GetUnitTypeId(hero)) then\r\n            set unitType = unitType + \" |cFFF2AF8DCloneable|r\"\r\n        endif\r\n        set hero = null\r\n        return unitType\r\n    endfunction\r\n    \r\n    private function SetInfoPanel takes player owner, unit hero, HeroFramehandle heroFrame returns nothing\r\n        local string roles = GetUnitRoles(heroFrame)\r\n        local string stat = GetHeroMainStat(hero)\r\n        local string unitType = GetUnitType(hero)\r\n        \r\n        if GetLocalPlayer() == owner then\r\n            call BlzFrameSetText( InfoPanelText[0], GetUnitName(hero) )\r\n            call BlzFrameSetText( InfoPanelText[1], GetDifficulty( heroFrame.difficulty ) )\r\n            call BlzFrameSetText( InfoPanelText[2], heroFrame.author )\r\n            call BlzFrameSetText( InfoPanelText[3], stat )\r\n            call BlzFrameSetText( InfoPanelText[4], unitType )\r\n            call BlzFrameSetText( InfoPanelText[5], roles )\r\n            \r\n            call BlzFrameSetTexture(InfoPanel_Icon, BlzGetAbilityIcon(GetUnitTypeId(hero)), 0, true) \r\n            if heroFrame.story == null then\r\n                call BlzFrameSetText( StoryTextArea, \"None\" ) \r\n            else\r\n                call BlzFrameSetText( StoryTextArea, heroFrame.story ) \r\n            endif\r\n        endif\r\n        \r\n        call heroFrame.destroy()\r\n        set hero = null\r\n        set owner = null\r\n    endfunction\r\n    \r\n    //Hero choosing\r\n    private function HeroChooseButton takes nothing returns nothing\r\n        local integer heroId = 0\r\n        local integer frameId = GetHandleId(BlzGetTriggerFrame())\r\n        local integer class = LoadInteger(udg_hash, frameId, KEY_CLASS )\r\n        local integer position = LoadInteger(udg_hash, frameId, KEY_POSITION )\r\n        local player owner = GetTriggerPlayer()\r\n        local integer index = GetPlayerId( owner ) + 1\r\n        local HeroFramehandle heroFrame = HeroFrame[class][position]\r\n        local integer unitType\r\n        local unit hero\r\n        \r\n        if GetLocalPlayer() == owner then\r\n            call BlzFrameSetVisible( BlzGetTriggerFrame(), false)\r\n            call BlzFrameSetVisible( BlzGetTriggerFrame(), true)\r\n        endif\r\n        \r\n        if heroFrame.hero[index-1] == ChoosedHero[index].hero and ChoosedHero[index].hero != null then\r\n        \tset owner = null\r\n        \treturn\r\n        endif\r\n        \r\n        if Skins_GlowAdd[index] then \r\n        \tcall UnitRemoveAbility(ChoosedHero[index].hero, 'A0D8' )\r\n        endif\r\n        call ShowUnit(ChoosedHero[index].hero, false)\r\n        \r\n        if heroFrame.hero[index-1] == null then\r\n            set heroFrame.hero[index-1] = CreateUnit( Player(PLAYER_NEUTRAL_PASSIVE), heroFrame.heroId, GetLocationX(udg_point[25+index]), GetLocationY(udg_point[25+index]), bj_UNIT_FACING )\r\n            set ChoosedHero[index].hero = heroFrame.hero[index-1]\r\n            //call BlzShowUnitTeamGlow( ChoosedHero[index].hero, false ) \r\n        else\r\n            set ChoosedHero[index].hero = heroFrame.hero[index-1]\r\n            call ShowUnit(ChoosedHero[index].hero, true)\r\n        endif\r\n        \r\n        set hero = ChoosedHero[index].hero\r\n        set unitType = GetUnitTypeId(hero)\r\n        set heroId = GetHeroNumber( unitType )\r\n        set ChoosedHero[index].position = position\r\n        set ChoosedHero[index].class = class\r\n        set ChoosedHero[index].heroKey = heroId\r\n        set udg_SkinUsed[index] = 0\r\n        set Skins_GlowAdd[index] = false\r\n        \r\n        call SetHeroColor(hero)\r\n        call SetUnitSkin( hero, heroFrame.heroId )\r\n        call QueueUnitAnimationBJ( hero, \"stand\" )\r\n        call QueueUnitAnimationBJ( hero, \"attack\" )\r\n        call QueueUnitAnimationBJ( hero, \"stand\" )\r\n        call SetUnitState( hero, UNIT_STATE_MANA, GetUnitState( hero, UNIT_STATE_MAX_MANA) )\r\n        call FogModifierStart( udg_Visible[index] )\r\n\r\n        call CameraSetupApplyForPlayer( true, udg_CameraChoose[index], Player(index-1), 0 )\r\n        call SetCameraTargetControllerNoZForPlayer( Player(index-1), hero, 210.00, -150.00, false )\r\n\r\n        if class == CLASSES then\r\n            call DisableInfoFrames(owner)\r\n        else\r\n            call SetAspectsInfo(owner, heroId)\r\n            call SetSkinInfo(owner, heroId, index, BlzGetAbilityIcon(unitType))\r\n            call SetAbilitiesInfo(owner, hero, heroId, heroFrame.alternativeUnique, class)\r\n            call SetInfoPanel(owner, hero, heroFrame)\r\n\r\n            if GetLocalPlayer() == owner then\r\n                if udg_Host == owner then\r\n                    call BlzFrameSetVisible( BanButton, true )\r\n                endif\r\n                call BlzFrameSetVisible( InfoButton, true) \r\n            endif\r\n        endif\r\n\r\n        if GetLocalPlayer() == owner then\r\n            call BlzFrameSetVisible( ChooseButton, true )\r\n        endif\r\n\r\n        call heroFrame.destroy()\r\n        set hero = null\r\n        set owner = null\r\n    endfunction\r\n    \r\n    private function IsHeroCanBeChosen takes integer heroId, integer heroIndex, integer playerIndex, boolean isRandomPick returns boolean\r\n        /*call BJDebugMsg(\"==================================\" )\r\n        call BJDebugMsg(\"heroIndex: \" + I2S(heroIndex))*/\r\n        if IsBanned[heroIndex] then\r\n            //call BJDebugMsg(\"IsBanned\")\r\n            return false\r\n        elseif RandomHero_IsCanPickByIndex(playerIndex) == false and isRandomPick then//Attempts_Used[playerIndex] < ATTEMPTS_TO_PICK_RANDOM_HERO\r\n            //call BJDebugMsg(\"no attemps\")\r\n            return false\r\n        elseif heroId == 0 then\r\n            //call BJDebugMsg(\"no hero\")\r\n            return false\r\n        elseif not(udg_UnitHeroLogic[heroIndex] == false or IsCanChoosedManyTimes(heroId) ) then\r\n            /*if udg_UnitHeroLogic[heroIndex] then\r\n                call BJDebugMsg(\"true\")\r\n            else\r\n                call BJDebugMsg(\"false\")\r\n            endif\r\n            call BJDebugMsg(\"udg_UnitHeroLogic[index] == false or IsCanChoosedManyTimes(heroId)\")*/\r\n            return false\r\n        endif\r\n    \r\n        return true\r\n    endfunction\r\n    \r\n    private function GetChoosedHero takes nothing returns nothing\r\n        local player owner = GetTriggerPlayer()\r\n        local integer index = GetPlayerId( owner ) + 1\r\n        local unit hero = ChoosedHero[index].hero\r\n        local integer class = ChoosedHero[index].class\r\n        local integer position = ChoosedHero[index].position \r\n        local integer heroKey = ChoosedHero[index].heroKey\r\n        local integer heroRawcode = GetUnitTypeId( hero )\r\n        local boolean isRandomPick = heroRawcode == HeroFrame[9][0].heroId\r\n\r\n        if IsHeroCanBeChosen( heroRawcode, ChoosedHero[index].heroKey, index, isRandomPick ) then\r\n            if isRandomPick then\r\n            \tcall ShowUnit(hero, false)\r\n                set hero = RandomHero_GetRandomHero( owner )\r\n                set heroKey = GetHeroNumber( GetUnitTypeId(hero) )\r\n            endif\r\n            set Event_HeroPicked_Hero = hero\r\n            set Event_HeroPicked_HeroKey = heroKey\r\n            set Event_HeroPicked_Player = owner\r\n            set Event_HeroPicked_Class = class\r\n            set Event_HeroPicked_Real = 0.00\r\n            set Event_HeroPicked_Real = 1.00\r\n            set Event_HeroPicked_Real = 0.00\r\n            \r\n            set ChoosedHero[index].hero = null\r\n            set ChoosedHeroButton[index] = heroIcon[class][position]\r\n            set ChoosedHeroIcon[index] = BlzGetAbilityIcon(GetUnitTypeId(hero))\r\n            \r\n            if IsCanChoosedManyTimes(GetUnitTypeId(hero)) == false then\r\n            \tcall BlzFrameSetTexture( ChoosedHeroButton[index], \"ReplaceableTextures\\\\CommandButtons\\\\BTNCancel.blp\",0, true) \r\n        \tendif\r\n            call BlzFrameSetTexture(LevelHeroIcon[index], ChoosedHeroIcon[index], 0, true)\r\n            \r\n            if GetLocalPlayer() == owner then\r\n                call BlzFrameSetVisible( HeroTable, false )\r\n            endif\r\n        elseif isRandomPick then\r\n            call DisplayTimedTextToPlayer( owner, 0, 0, 5, \"Attempts exhausted.\" )\r\n        else\r\n            call DisplayTimedTextToPlayer( owner, 0, 0, 5, \"This hero is not available. Please choose an another hero.\")\r\n        endif\r\n\r\n        set hero = null\r\n        set owner = null\r\n    endfunction\r\n\r\n    private function SkinButton takes nothing returns nothing\r\n        local player owner = GetTriggerPlayer()\r\n        local integer index = GetPlayerId( owner ) + 1\r\n        local unit hero = ChoosedHero[index].hero\r\n        local integer heroRawcode = GetUnitTypeId( hero )\r\n        local integer heroKey = ChoosedHero[index].heroKey\r\n        local integer i\r\n\r\n        if MainSkinButton == BlzGetTriggerFrame() then\r\n            set udg_SkinUsed[index] = 0\r\n            set Skins_GlowAdd[index] = false\r\n            set i = 1\r\n            loop\r\n                exitwhen i > udg_DB_Skin_Limit\r\n                if BlzFrameIsVisible(Skins_Icon[i]) then\r\n                    call BlzSetUnitSkin( hero, heroRawcode )\r\n                    if GetLocalPlayer() == owner then\r\n                        call BlzFrameSetVisible( Skins_Button[i], false )\r\n                    endif\r\n                else\r\n                    if GetLocalPlayer() == owner then\r\n                        if skiniconBTN[heroKey][i] != null then\r\n                            call BlzFrameSetVisible( Skins_Button[i], true )\r\n                        endif\r\n                    endif\r\n                endif\r\n                set i = i + 1\r\n            endloop\r\n        else\r\n            set i = 1\r\n            loop\r\n                exitwhen i > udg_DB_Skin_Limit\r\n                if Skins_Button[i] == BlzGetTriggerFrame() then\r\n                    if udg_LvL[index] >= skinlvl[heroKey][i] or CheatSystem_IsCheatsEnabled() then\r\n                        set udg_SkinUsed[index] = skinmodel[heroKey][i]\r\n                        set Skins_GlowAdd[index] = skinAddGlow[heroKey][i]\r\n                        call BlzFrameSetTexture( faceframe[index], skiniconBTN[heroKey][i], 0, false)\r\n                        call SetUnitSkin( hero, udg_SkinUsed[index] )\r\n                        if Skins_GlowAdd[index] then \r\n                        \tcall UnitAddAbility(hero, 'A0D8' )\r\n                        endif\r\n                        //call BlzShowUnitTeamGlow( hero, FALSE ) \r\n                    else\r\n                        set udg_SkinUsed[index] = 0\r\n                        set Skins_GlowAdd[index] = false\r\n                    endif\r\n                endif\r\n                set i = i + 1\r\n            endloop\r\n        endif\r\n        \r\n        set hero = null\r\n        set owner = null\r\n    endfunction\r\n\r\n    private function HeroBan takes nothing returns nothing\r\n        local player owner = GetTriggerPlayer()\r\n        local integer index = GetPlayerId( owner ) + 1\r\n        local integer heroKey = ChoosedHero[index].heroKey\r\n        //local integer frameId = GetHandleId(BlzGetTriggerFrame())\r\n        local integer class = ChoosedHero[index].class//LoadInteger(udg_hash, frameId, KEY_CLASS )\r\n        local integer position = ChoosedHero[index].position//LoadInteger(udg_hash, frameId, KEY_POSITION )\r\n        local integer heroRawcode = GetUnitTypeId( ChoosedHero[index].hero )\r\n        local integer i\r\n\r\n        if GetLocalPlayer() == owner then\r\n            call BlzFrameSetVisible( BlzGetTriggerFrame(),false)\r\n            call BlzFrameSetVisible( BlzGetTriggerFrame(),true)\r\n        endif\r\n        \r\n        /*call BJDebugMsg(\"class: \" + I2S(class))\r\n        call BJDebugMsg(\"position: \" + I2S(position))\r\n        call BJDebugMsg(\"heroKey: \" + I2S(heroKey))*/\r\n        //call BJDebugMsg(\"heroRawcode: \" + I2S(heroRawcode))\r\n        \r\n        if heroRawcode != 0 and heroRawcode != HeroFrame[9][0] then\r\n            if IsBanned[heroKey] then\r\n                //call BJDebugMsg(\"isBanned: false\")\r\n                set IsBanned[heroKey] = false\r\n                call BlzFrameSetTexture( heroIcon[class][position], BlzGetAbilityIcon(GetUnitTypeId(ChoosedHero[index].hero)), 0, true)\r\n                set udg_BanLimit = udg_BanLimit + 1\r\n            elseif udg_BanLimit > 0 then\r\n                //call BJDebugMsg(\"isBanned: true\")\r\n                set IsBanned[heroKey] = true\r\n                set udg_BanLimit = udg_BanLimit - 1\r\n                set i = 0\r\n                loop\r\n                    exitwhen i > 3\r\n                    if GetUnitTypeId(udg_hero[i+1]) == heroRawcode then\r\n                        call Repick( Player(i) )\r\n                        call DisplayTimedTextToPlayer(Player(i), 0, 0, 5, \"The host has banned this hero.\")\r\n                    endif\r\n                    set i = i + 1\r\n                endloop\r\n                call BlzFrameSetTexture( heroIcon[class][position], \"war3mapImported\\\\BTNban.blp\", 0, true)\r\n            else\r\n                call DisplayTimedTextToPlayer( owner, 0, 0, 5, \"The limit of banned heroes has been exceeded. Unban the hero to continue.\" )\r\n            endif\r\n        endif\r\n        \r\n        set owner = null\r\n    endfunction\r\n    \r\n    //Tooltip\r\n    private function TooltipEnable takes integer index returns nothing \r\n        local player owner = GetTriggerPlayer()\r\n        local integer playerIndex = GetPlayerId(owner)\r\n    \r\n        if GetLocalPlayer() == owner then\r\n            call BlzFrameSetVisible( TooltipBackdrop, true )\r\n        endif\r\n        call Tooltip_SetLocalTooltipText(owner, AspectName[playerIndex][index], AspectDescription[playerIndex][index])\r\n        \r\n        set owner = null\r\n    endfunction \r\n    \r\n    private function TooltipEnable0 takes nothing returns nothing \r\n        call TooltipEnable(1)\r\n    endfunction\r\n    \r\n    private function TooltipEnable1 takes nothing returns nothing \r\n        call TooltipEnable(2)\r\n    endfunction\r\n    \r\n    private function TooltipEnable2 takes nothing returns nothing \r\n        call TooltipEnable(3)\r\n    endfunction\r\n    \r\n    private function CreatePotionIcon takes framehandle parent returns nothing\r\n        local framehandle newframe\r\n        \r\n        set newframe = BlzCreateFrameByType(\"BACKDROP\", \"\", parent, \"\", 0)\r\n        call BlzFrameSetPoint( newframe, FRAMEPOINT_CENTER, parent, FRAMEPOINT_BOTTOMLEFT, 0.007,0.007) \r\n        call BlzFrameSetSize(newframe, 0.01, 0.01)\r\n        call BlzFrameSetTexture( newframe, \"potionframe.blp\",0, true)\r\n        \r\n        set newframe = null\r\n    endfunction\r\n    \r\n    private function CreateIconNew takes framehandle parent returns nothing\r\n        local framehandle newframe\r\n        \r\n        set newframe = BlzCreateFrameByType(\"BACKDROP\", \"\", parent, \"\", 0)\r\n        call BlzFrameSetPoint( newframe, FRAMEPOINT_CENTER, parent, FRAMEPOINT_BOTTOMRIGHT, -0.006,0.006) \t\r\n        call BlzFrameSetSize(newframe, 0.02, 0.02)\r\n        call BlzFrameSetTexture( newframe, \"framenew.blp\",0, true)\r\n        \r\n        set newframe = null\r\n    endfunction\r\n    \r\n    private function CreateHeroButton takes trigger trigclass, integer class, integer position returns nothing\r\n        local HeroFramehandle heroFrame = HeroFrame[class][position]\r\n        local integer i\r\n        local framehandle buttonFrame\r\n        local framehandle icon\r\n    \r\n        if heroFrame.heroId == 0 then \r\n            //call BJDebugMsg(\"return\")\r\n            call heroFrame.destroy()\r\n            return\r\n        endif\r\n        \r\n        set buttonFrame = BlzCreateFrameByType(\"GLUEBUTTON\", \"\", HeroTable, \"ScoreScreenTabButtonTemplate\", 0)\r\n        call BlzFrameSetAbsPoint(buttonFrame, FRAMEPOINT_CENTER, START_POSITION_X-(BUTTON_SIZE*class),START_POSITION_Y-(BUTTON_SIZE*position))\t\r\n        call BlzFrameSetSize(buttonFrame, BUTTON_SIZE, BUTTON_SIZE)\r\n        call SaveInteger(udg_hash, GetHandleId(buttonFrame), KEY_CLASS, class )\r\n        call SaveInteger(udg_hash, GetHandleId(buttonFrame), KEY_POSITION, position )\r\n\r\n        set icon = BlzCreateFrameByType(\"BACKDROP\", \"\", buttonFrame, \"StandartFrameTemplate\", 0)\r\n        call BlzFrameSetAllPoints(icon, buttonFrame )\r\n    \r\n        call BlzTriggerRegisterFrameEvent(trigclass, buttonFrame, FRAMEEVENT_CONTROL_CLICK)\r\n        call BlzFrameSetTexture( icon, heroFrame.icon, 0, true)\r\n\r\n        set heroIcon[class][position] = icon\r\n        set heroButton[class][position] = buttonFrame\r\n\r\n        if ENABLE_NEW_HERO_ICON and heroFrame.heroId == udg_Database_Hero[udg_Database_InfoNumberHeroes] then\r\n            call CreateIconNew(buttonFrame)\r\n            call BlzFrameSetLevel( buttonFrame, 2 )\r\n        endif\r\n        \r\n        set i = 1\r\n        loop\r\n            exitwhen i > POTION_BONUSES_ADDED_TO_HEROES\r\n            if udg_HeroBonusPotion[i] == position and udg_HeroBonusPotionClass[i] == class then\r\n                call CreatePotionIcon(buttonFrame)\r\n                set udg_HeroBonusPotionHero[i] = heroFrame.heroId\r\n                set i = POTION_BONUSES_ADDED_TO_HEROES\r\n            endif\r\n            set i = i + 1\r\n        endloop\r\n        \r\n        call heroFrame.destroy()\r\n        set trigclass = null\r\n        set buttonFrame = null\r\n        set icon = null\r\n    endfunction\r\n    \r\n    private function CreateHeroButtons takes nothing returns nothing\r\n        local trigger trigclass = CreateTrigger()\r\n        local framehandle buttonFrame\r\n        local framehandle icon\r\n        local integer i = 0\r\n        local integer iEnd = CLASSES - 1\r\n        local integer k\r\n        local integer kEnd\r\n        \r\n        loop\r\n            exitwhen i > iEnd\r\n            set k = 0\r\n            set kEnd = HeroesTableDatabase_HEROES_IN_CLASS[i] - 1\r\n            loop\r\n                exitwhen k > kEnd\r\n                call CreateHeroButton(trigclass, i, k)\r\n                set k = k + 1\r\n            endloop\r\n            set i = i + 1\r\n        endloop\r\n    \r\n        //Random Hero\r\n        set buttonFrame = BlzCreateFrameByType(\"GLUEBUTTON\", \"\", HeroTable, \"ScoreScreenTabButtonTemplate\", 0)\r\n        call BlzFrameSetAbsPoint(buttonFrame, FRAMEPOINT_CENTER, (START_POSITION_X+BUTTON_SIZE)-(BUTTON_SIZE*10),START_POSITION_Y+BUTTON_SIZE)\t\r\n        call BlzFrameSetSize(buttonFrame, BUTTON_SIZE, BUTTON_SIZE)\r\n        call BlzTriggerRegisterFrameEvent(trigclass, buttonFrame, FRAMEEVENT_CONTROL_CLICK)\r\n        call SaveInteger(udg_hash, GetHandleId(buttonFrame), KEY_CLASS, 9 )\r\n        call SaveInteger(udg_hash, GetHandleId(buttonFrame), KEY_POSITION, 0 )\r\n\r\n        set icon = BlzCreateFrameByType(\"BACKDROP\", \"\", buttonFrame, \"StandartFrameTemplate\", 0)\r\n        call BlzFrameSetAllPoints(icon, buttonFrame )\r\n        call BlzFrameSetTexture( icon, \"war3mapImported\\\\PASBTNSelectHeroOn.blp\",0, true)\r\n        \r\n        call TriggerAddAction(trigclass, function HeroChooseButton)\r\n        \r\n        set trigclass = null\r\n        set buttonFrame = null\r\n        set icon = null\r\n    endfunction\r\n    \r\n    private function CreateClassFrames takes nothing returns nothing\r\n        local framehandle class \r\n        local framehandle buttool \r\n        local integer index = 0\r\n        \r\n        loop\r\n            exitwhen index > CLASSES - 1\r\n            set class = BlzCreateFrameByType(\"BACKDROP\", \"\", HeroTable, \"\", 0)\r\n            call BlzFrameSetSize(class, BUTTON_SIZE, BUTTON_SIZE)\r\n            call BlzFrameSetAbsPoint(class, FRAMEPOINT_CENTER, START_POSITION_X-(BUTTON_SIZE*index),START_POSITION_Y+BUTTON_SIZE)//+BUTTON_SIZE\r\n            call BlzFrameSetTexture( class, ClassFrame[index].icon,0, true)\r\n\r\n            set buttool = BlzCreateFrameByType(\"FRAME\", \"\", HeroTable,\"\", 0)\r\n            call BlzFrameSetAllPoints(buttool, class)\r\n            call SetStableTool( buttool, ClassFrame[index].className, ClassFrame[index].description )\r\n            set index = index + 1\r\n        endloop\r\n        \r\n        set class = null\r\n        set buttool = null\r\n    endfunction\r\n    \r\n    private function MainStartFrames takes nothing returns nothing\r\n        local integer i\r\n        local integer rand\r\n        local trigger chooseButtonTrigger\r\n\r\n        set i = 1\r\n        loop\r\n            exitwhen i > POTION_BONUSES_ADDED_TO_HEROES\r\n            set rand = GetRandomInt( 0, CLASSES - 1 )\r\n            set udg_HeroBonusPotion[i] = GetRandomInt( 0, HeroesTableDatabase_HEROES_IN_CLASS[rand] - 1 )\r\n            set udg_HeroBonusPotionClass[i] = rand\r\n            set i = i + 1\r\n        endloop\r\n        \r\n        set HeroTable = BlzCreateFrameByType(\"FRAME\", \"HeroTable\", BlzGetOriginFrame(ORIGIN_FRAME_GAME_UI, 0), \"StandartFrameTemplate\", 0)\r\n        call BlzFrameSetLevel( HeroTable, -1 )\r\n        call BlzFrameSetVisible( HeroTable, false )\r\n\r\n        set ChooseButton = BlzCreateFrame(\"ScriptDialogButton\", HeroTable, 0,0) \r\n        call BlzFrameSetSize( ChooseButton, 0.07,0.04)\r\n        call BlzFrameSetAbsPoint( ChooseButton, FRAMEPOINT_CENTER, 0.18,0.185)\r\n        call BlzFrameSetText( ChooseButton, \"Choose\")\r\n        call BlzFrameSetLevel( ChooseButton, -1 )\r\n        call BlzFrameSetVisible( ChooseButton, false )\r\n        \r\n        set chooseButtonTrigger = CreateTrigger()\r\n        call BlzTriggerRegisterFrameEvent(chooseButtonTrigger, ChooseButton, FRAMEEVENT_CONTROL_CLICK)\r\n        call TriggerAddAction(chooseButtonTrigger, function GetChoosedHero)\r\n        \r\n        set chooseButtonTrigger = null\r\n    endfunction\r\n    \r\n    private function CreateSkinButtons takes nothing returns nothing\r\n        local trigger skinButtonTrigger = CreateTrigger()\r\n        local framehandle background\r\n        local framehandle skinName\r\n        local integer i\r\n        \r\n        set MainSkinButton = BlzCreateFrameByType(\"GLUEBUTTON\", \"\", HeroTable, \"ScoreScreenTabButtonTemplate\", 0)\r\n        call BlzFrameSetAbsPoint(MainSkinButton, FRAMEPOINT_CENTER, 0.02,0.2)\t\r\n        call BlzFrameSetSize(MainSkinButton, 0.035, 0.035)\r\n        call BlzFrameSetVisible( MainSkinButton, false )\r\n        \r\n        call TriggerAddAction(skinButtonTrigger, function SkinButton)\r\n        call BlzTriggerRegisterFrameEvent(skinButtonTrigger, MainSkinButton, FRAMEEVENT_CONTROL_CLICK)\r\n\r\n        set MainSkinIcon = BlzCreateFrameByType(\"BACKDROP\", \"\", MainSkinButton, \"StandartFrameTemplate\", 0)\r\n        call BlzFrameSetAllPoints( MainSkinIcon, MainSkinButton )\r\n        call BlzFrameSetTexture( MainSkinIcon, \"\",0, true)\r\n        \r\n        set background = BlzCreateFrame( \"QuestButtonBaseTemplate\", MainSkinButton, 0, 0 )\r\n        call BlzFrameSetAbsPoint(background, FRAMEPOINT_CENTER, 0.02, 0.17)\r\n        call BlzFrameSetSize( background, 0.04, 0.03 )\r\n\r\n        set skinName = BlzCreateFrameByType(\"TEXT\", \"\", background, \"StandartFrameTemplate\", 0)\r\n        call BlzFrameSetPoint( skinName, FRAMEPOINT_CENTER, background, FRAMEPOINT_CENTER, 0.007, -0.005) \r\n        call BlzFrameSetSize(skinName, 0.04, 0.02)\r\n        call BlzFrameSetText( skinName, \"skins\" )\r\n        \r\n        set i = 1\r\n        loop\r\n            exitwhen i > udg_DB_Skin_Limit\r\n            set Skins_Button[i] = BlzCreateFrameByType(\"GLUEBUTTON\", \"\", MainSkinButton, \"ScoreScreenTabButtonTemplate\", 0)\r\n            call BlzFrameSetAbsPoint(Skins_Button[i], FRAMEPOINT_CENTER, 0.02,0.2+(0.03*i))\t\r\n            call BlzFrameSetSize(Skins_Button[i], 0.03, 0.03)\r\n            call BlzFrameSetVisible( Skins_Button[i], false )\r\n            call BlzTriggerRegisterFrameEvent(skinButtonTrigger, Skins_Button[i], FRAMEEVENT_CONTROL_CLICK)\r\n            call BlzFrameSetLevel( Skins_Button[i], -1 )\r\n\r\n            set Skins_Icon[i] = BlzCreateFrameByType(\"BACKDROP\", \"\", Skins_Button[i], \"StandartFrameTemplate\", 0)\r\n            call BlzFrameSetAllPoints(Skins_Icon[i], Skins_Button[i] )\r\n            call BlzFrameSetTexture( Skins_Icon[i], \"\", 0, true)\r\n            \r\n            set Skins_LockFrame[i] = BlzCreateFrameByType(\"BACKDROP\", \"\", Skins_Button[i], \"StandartFrameTemplate\", 0)\r\n            call BlzFrameSetSize( Skins_LockFrame[i], 0.015, 0.015 )\r\n            call BlzFrameSetPoint( Skins_LockFrame[i], FRAMEPOINT_CENTER, Skins_Button[i], FRAMEPOINT_CENTER, 0,0) \r\n            call BlzFrameSetTexture( Skins_LockFrame[i], \"framelock.blp\",0, true)\r\n            \r\n            set Skins_Text[i] = BlzCreateFrameByType(\"TEXT\", \"\", Skins_Button[i], \"StandartFrameTemplate\", 0)\r\n            //call BlzFrameSetSize( Skins_Text[i], 0.01, 0.01 )\r\n            call BlzFrameSetAllPoints(Skins_Text[i], Skins_Button[i] )\r\n            call BlzFrameSetTextAlignment(Skins_Text[i], TEXT_JUSTIFY_CENTER, TEXT_JUSTIFY_MIDDLE)\r\n            //call BlzFrameSetPoint( Skins_Text[i], FRAMEPOINT_CENTER, Skins_Button[i], FRAMEPOINT_CENTER, 0.002,-0.005) \r\n            \r\n            set i = i + 1\r\n        endloop\r\n        \r\n        set skinButtonTrigger = null\r\n        set background = null\r\n        set skinName = null\r\n    endfunction\r\n    \r\n    struct AbilityFrame\r\n        readonly framehandle icon\r\n        readonly framehandle name\r\n        readonly framehandle description\r\n        private framehandle tooltip\r\n        private static real tooltipSizeY = 0.33\r\n            \r\n        static method create takes framehandle parent returns AbilityFrame\r\n            local AbilityFrame this = AbilityFrame.allocate()\r\n            local framehandle tooltipActivator\r\n            \r\n            set .icon = BlzCreateFrameByType(\"BACKDROP\", \"\", parent, \"\", 0)\r\n            \r\n            set .tooltip = BlzCreateFrame( \"QuestButtonBaseTemplate\", .icon, 0, 0 )\r\n            call BlzFrameSetSize(.tooltip, tooltipSizeY, 0.06)\r\n            call BlzFrameSetAbsPoint(.tooltip, FRAMEPOINT_BOTTOM, 0.7, 0.16)\r\n            \r\n            set .name = BlzCreateFrameByType(\"TEXT\", \"\", .tooltip, \"StandartFrameTemplate\", 0)\r\n            set .description = BlzCreateFrameByType(\"TEXT\", \"\", .tooltip, \"StandartFrameTemplate\", 0)\r\n            call BlzFrameSetPoint( .name, FRAMEPOINT_TOPLEFT, .tooltip, FRAMEPOINT_TOPLEFT, 0.005,-0.01) \r\n            call BlzFrameSetPoint( .description, FRAMEPOINT_TOPLEFT, .tooltip, FRAMEPOINT_TOPLEFT, 0.005,-0.025) \r\n            \r\n            set tooltipActivator = BlzCreateFrameByType(\"FRAME\", \"\", .icon,\"\", 0)\r\n            call BlzFrameSetAllPoints(tooltipActivator, .icon)\r\n            call BlzFrameSetTooltip(tooltipActivator, .tooltip)\r\n            \r\n            set parent = null\r\n            set tooltipActivator = null\r\n            return this\r\n        endmethod\r\n        \r\n        method SetNameAndDescription takes string newName, string newDescription returns nothing\r\n            call BlzFrameSetText( .name, newName )\r\n            call BlzFrameSetText( .description, newDescription )\r\n            call BlzFrameSetSize( .tooltip, tooltipSizeY, StringSizeSmall(newDescription) )\r\n        endmethod\r\n    endstruct\r\n    \r\n    globals\r\n        AbilityFrame array abilityFrame[6]\r\n    endglobals\r\n    \r\n    private function CreateAbilityButtons takes nothing returns nothing\r\n        local integer i\r\n\r\n        set AbilityBackground = BlzCreateFrame(\"EscMenuBackdrop\", HeroTable, 0, 0)\r\n        call BlzFrameSetAbsPoint(AbilityBackground, FRAMEPOINT_CENTER, 0.398, 0.16)\r\n        call BlzFrameSetSize(AbilityBackground, 0.3, 0.075)\r\n        call BlzFrameSetVisible( AbilityBackground, false )\r\n\r\n        set i = 1\r\n        loop\r\n            exitwhen i > 5\r\n            set abilityFrame[i] = AbilityFrame.create(AbilityBackground)\r\n            \r\n            call BlzFrameSetSize(abilityFrame[i].icon, 0.04, 0.04)\r\n            \r\n            if i == 5 then\r\n                call BlzFrameSetPoint( abilityFrame[i].icon, FRAMEPOINT_CENTER, AbilityBackground, FRAMEPOINT_CENTER, 0.04*(i-3)+0.02, 0 )\r\n            else\r\n                call BlzFrameSetPoint( abilityFrame[i].icon, FRAMEPOINT_CENTER, AbilityBackground, FRAMEPOINT_CENTER, 0.04*(i-3), 0 )\r\n            endif\r\n\r\n            call BlzFrameSetLevel( abilityFrame[i].name, 1 )\r\n            call BlzFrameSetSize(abilityFrame[i].name, 0.3, 0.6)\r\n\r\n            call BlzFrameSetLevel( abilityFrame[i].description, 1 )\r\n            call BlzFrameSetSize(abilityFrame[i].description, 0.3, 0.6)\r\n\r\n            call BlzFrameSetTexture( abilityFrame[i].icon, \"war3mapImported\\\\PASfeed-icon-red-1_result.blp\",0, true)\r\n            set i = i + 1\r\n        endloop\r\n        \r\n    endfunction\r\n            \r\n    private function CreatePlayerLevelInfoFrames takes nothing returns nothing\r\n        local integer i\r\n        local framehandle textBackground\r\n    \r\n        set i = 1\r\n        loop\r\n            exitwhen i > PLAYERS_LIMIT\r\n            set LevelHeroIcon[i] = BlzCreateFrameByType(\"BACKDROP\", \"\", HeroTable, \"\", 0)\r\n            call BlzFrameSetAbsPoint(LevelHeroIcon[i], FRAMEPOINT_CENTER, 0.57+(i*0.03), 0.2)\t\r\n            call BlzFrameSetSize(LevelHeroIcon[i], 0.03, 0.03)\r\n            \r\n            if GetPlayerSlotState( Player( i - 1 ) ) == PLAYER_SLOT_STATE_PLAYING then\r\n                call BlzFrameSetTexture(LevelHeroIcon[i], \"ReplaceableTextures\\\\CommandButtons\\\\BTNSelectHeroOn.blp\", 0, true)\r\n            else\r\n                call BlzFrameSetTexture(LevelHeroIcon[i], \"war3mapImported\\\\BTNDivineShieldOff-Reforged.blp\", 0, true)\r\n                call BlzFrameSetVisible( LevelTextFrame[i], false )\r\n            endif\r\n            \r\n            set textBackground = BlzCreateFrameByType(\"BACKDROP\", \"\", HeroTable, \"\", 0)\r\n            call BlzFrameSetPoint( textBackground, FRAMEPOINT_CENTER, LevelHeroIcon[i], FRAMEPOINT_CENTER, 0,-0.025) \t\r\n            call BlzFrameSetSize( textBackground, 0.02, 0.02)\r\n            call BlzFrameSetTexture( textBackground, \"war3mapImported\\\\BTNfeed-icon-red-1_result.blp\",0, true)\r\n            \r\n            set LevelTextFrame[i] = BlzCreateFrameByType(\"TEXT\", \"\", HeroTable, \"StandartFrameTemplate\", 0)\r\n            call BlzFrameSetSize( LevelTextFrame[i], 0.02, 0.01 ) \r\n            call BlzFrameSetPoint( LevelTextFrame[i], FRAMEPOINT_CENTER, textBackground, FRAMEPOINT_CENTER, 0.005, 0) \r\n            set i = i + 1\r\n        endloop\r\n        \r\n        set textBackground = null\r\n    endfunction\r\n    \r\n    private function CreateBanButton takes nothing returns nothing\r\n        local trigger trig = CreateTrigger()\r\n    \r\n        set BanButton = BlzCreateFrame(\"ScriptDialogButton\", HeroTable, 0,0) \r\n        call BlzFrameSetSize(BanButton, 0.04,0.03)\r\n        call BlzFrameSetAbsPoint(BanButton, FRAMEPOINT_BOTTOMLEFT, 0.035,0.195)\r\n        call BlzFrameSetText(BanButton, \"Ban\")\r\n        call BlzFrameSetVisible( BanButton, false )\r\n         \r\n        call BlzTriggerRegisterFrameEvent(trig, BanButton, FRAMEEVENT_CONTROL_CLICK)\r\n        call TriggerAddAction(trig, function HeroBan)\r\n        \r\n        set trig = null\r\n    endfunction\r\n    \r\n    //Info Panel\r\n    function InfoButtonClick takes nothing returns nothing \r\n        if GetLocalPlayer() == GetTriggerPlayer() then\r\n            call BlzFrameSetEnable(InfoButton, false) \r\n            call BlzFrameSetEnable(InfoButton, true)\r\n            if BlzFrameIsVisible(InfoBackground) then\r\n                call BlzFrameSetVisible(InfoBackground, false) \r\n            else\r\n                call BlzFrameSetVisible(InfoBackground, true) \r\n            endif\r\n        endif\r\n    endfunction \r\n    \r\n    private function CreateAspects takes framehandle parent returns nothing\r\n        local framehandle passiveOutline\r\n        local integer i\r\n    \r\n        set i = 0\r\n        loop\r\n            exitwhen i > 2\r\n            set AspectVision[i] = BlzCreateFrameByType(\"BACKDROP\", \"AspectVision0\" + I2S(i), parent, \"\", 1) \r\n            call BlzFrameSetPoint( AspectVision[i], FRAMEPOINT_LEFT, parent, FRAMEPOINT_RIGHT, i*ASPECTS_INDENT, 0)\r\n            call BlzFrameSetSize(AspectVision[i], ASPECTS_SIZE, ASPECTS_SIZE)\r\n            call BlzFrameSetTexture(AspectVision[i], \"\", 0, true) \r\n            \r\n            set AspectButton[i] = BlzCreateFrameByType(\"BUTTON\", \"\", AspectVision[i], \"\", 1) \r\n            call BlzFrameSetAllPoints(AspectButton[i], AspectVision[i] )\r\n            \r\n            set passiveOutline = BlzCreateFrameByType(\"BACKDROP\", \"\", AspectVision[i], \"StandartFrameTemplate\", 0)\r\n            call BlzFrameSetTexture(passiveOutline, \"war3mapImported\\\\PAS_Effect.blp\", 0, true)\r\n            call BlzFrameSetAllPoints(passiveOutline, AspectVision[i])\r\n            set i = i + 1\r\n        endloop\r\n        \r\n        call Tooltip_AddEvent(AspectButton[0], function TooltipEnable0 )\r\n        call Tooltip_AddEvent(AspectButton[1], function TooltipEnable1 )\r\n        call Tooltip_AddEvent(AspectButton[2], function TooltipEnable2 )\r\n        \r\n        set parent = null\r\n        set passiveOutline = null\r\n    endfunction \r\n    \r\n    private function CreateStory takes framehandle parent returns nothing\r\n        set StoryTextArea = BlzCreateFrame(\"MyTextArea\", parent ,0,0)\r\n        call BlzFrameSetSize( StoryTextArea, 0.32, 0.12)\r\n        call BlzFrameSetPoint( StoryTextArea, FRAMEPOINT_TOPLEFT, parent, FRAMEPOINT_BOTTOMLEFT, 0, -0.005)\r\n        call BlzFrameSetText( StoryTextArea, \"None\")  \r\n    \r\n        set parent = null\r\n    endfunction \r\n    \r\n    private function CreateInfoPanel takes nothing returns nothing \r\n        local framehandle firstFrame\r\n        local framehandle secondFrame\r\n        local trigger trig\r\n        local string array names\r\n        local integer i\r\n        local integer iEnd\r\n    \r\n        set InfoButton = BlzCreateFrame(\"ScriptDialogButton\", HeroTable ,0,0) \r\n        call BlzFrameSetSize(InfoButton, 0.04,0.03)\r\n        call BlzFrameSetAbsPoint(InfoButton, FRAMEPOINT_BOTTOMLEFT, 0.035,0.165)\r\n        call BlzFrameSetText(InfoButton, \"|cffFCD20DInfo|r\") \r\n        call BlzFrameSetVisible(InfoButton, false) \r\n\r\n        set trig = CreateTrigger() \r\n        call BlzTriggerRegisterFrameEvent( trig, InfoButton, FRAMEEVENT_CONTROL_CLICK) \r\n        call TriggerAddAction( trig, function InfoButtonClick) \r\n\r\n        set InfoBackground = BlzCreateFrame(\"QuestButtonBaseTemplate\", HeroTable ,0,0) \r\n        call BlzFrameSetAbsPoint(InfoBackground, FRAMEPOINT_TOPLEFT, 0.015, 0.52) \r\n        call BlzFrameSetSize( InfoBackground, 0.34, 0.3)\r\n        call BlzFrameSetVisible(InfoBackground, false) \r\n        call BlzFrameSetLevel( InfoBackground, 2 )\r\n\r\n        set names[0] = \"|cffe1a019Name:|r\"\r\n        set names[1] = \"|cffe1a019Difficulty:|r\"\r\n        set names[2] = \"|cffe1a019Author:|r\"\r\n        set names[3] = \"|cffe1a019Main Stat:|r\"\r\n        set names[4] = \"|cffe1a019Type:|r\"\r\n        set names[5] = \"|cffe1a019Role:|r\"\r\n        set names[6] = \"|cffe1a019Aspects:|r\"\r\n        set names[7] = \"|cffe1a019Story:|r\"\r\n\r\n        set secondFrame = InfoBackground\r\n        set i = 0\r\n        set iEnd = TEXT_NUMBERS - 1\r\n        loop\r\n            exitwhen i > iEnd\r\n            set firstFrame = secondFrame\r\n            set secondFrame = BlzCreateFrameByType(\"TEXT\", \"name\", InfoBackground, \"\", 0) \r\n            \r\n            if i == iEnd then\r\n                call BlzFrameSetPoint( secondFrame, FRAMEPOINT_TOPRIGHT, firstFrame, FRAMEPOINT_BOTTOMRIGHT, 0, -0.01)\r\n                call CreateStory(secondFrame)\r\n                set InfoPanelText[i] = null\r\n            else\r\n                if i == TEXT_NUMBERS - 2 then\r\n                    call BlzFrameSetPoint( secondFrame, FRAMEPOINT_TOPRIGHT, firstFrame, FRAMEPOINT_BOTTOMRIGHT, 0, -0.01)\r\n                    call CreateAspects(secondFrame)\r\n                elseif i == 0 then\r\n                    call BlzFrameSetPoint( secondFrame, FRAMEPOINT_LEFT, firstFrame, FRAMEPOINT_TOPLEFT, 0.01, -0.015) \r\n                else\r\n                    call BlzFrameSetPoint( secondFrame, FRAMEPOINT_TOPRIGHT, firstFrame, FRAMEPOINT_BOTTOMRIGHT, 0, 0) \r\n                endif\r\n                set InfoPanelText[i] = BlzCreateFrameByType(\"TEXT\", \"name\", secondFrame, \"\", 0)  \r\n                call BlzFrameSetPoint( InfoPanelText[i], FRAMEPOINT_LEFT, secondFrame, FRAMEPOINT_RIGHT, 0.005, 0)\r\n                call BlzFrameSetSize( InfoPanelText[i], 0.18, 0.015)\r\n                call BlzFrameSetText( InfoPanelText[i], \"None\")\r\n                call BlzFrameSetTextAlignment( InfoPanelText[i], TEXT_JUSTIFY_CENTER, TEXT_JUSTIFY_LEFT) \r\n            endif\r\n            \r\n            call BlzFrameSetSize( secondFrame, 0.05, 0.015)\r\n            call BlzFrameSetText( secondFrame, names[i] ) \r\n            call BlzFrameSetTextAlignment( secondFrame, TEXT_JUSTIFY_CENTER, TEXT_JUSTIFY_RIGHT) \r\n            \r\n            set names[i] = null\r\n            set i = i + 1\r\n        endloop\r\n        \r\n        set InfoPanel_Icon = BlzCreateFrameByType(\"BACKDROP\", \"InfoPanelIcon\", InfoBackground, \"\", 1) \r\n        call BlzFrameSetPoint( InfoPanel_Icon, FRAMEPOINT_TOPRIGHT, InfoBackground, FRAMEPOINT_TOPRIGHT, -0.01, -0.01)\r\n        call BlzFrameSetSize( InfoPanel_Icon, 0.05, 0.05)\r\n        call BlzFrameSetTexture(InfoPanel_Icon, \"\", 0, true) \r\n         \r\n        set trig = null\r\n        set firstFrame = null\r\n        set secondFrame = null\r\n    endfunction \r\n    \r\n    //Init All Peices\r\n    private function InitTable takes nothing returns nothing\r\n        call MainStartFrames()\r\n        call CreateBanButton()\r\n        call CreateSkinButtons()\r\n        call CreateAbilityButtons()\r\n        call CreateClassFrames()\r\n        call CreateHeroButtons()\r\n        call CreatePlayerLevelInfoFrames()\r\n        call CreateInfoPanel()\r\n        \r\n        call BlzFrameSetVisible( HeroTable, true )        \r\n    endfunction\r\n    \r\n    //===========================================================================\r\n    private function StartInit takes nothing returns nothing\r\n        local integer i \r\n        call CreateEventTrigger( \"Event_HeroRepick_Real\", function HeroRepick, null )\r\n        call CreateEventTrigger( \"Event_PlayerLeave_Real\", function HeroLeave, null )\r\n        //call CreateEventTrigger( \"Event_HeroChoose_Real\", function HeroChoose, null )\r\n        \r\n        call InitTable()\r\n        \r\n        set i = 1\r\n        loop\r\n            exitwhen i > PLAYERS_LIMIT\r\n            set ChoosedHeroButton[i] = null\r\n            set ChoosedHeroIcon[i] = \"\"\r\n            set ChoosedHero[i] = ChoosedHeroTemplate.create()\r\n            set i = i + 1\r\n        endloop\r\n    endfunction\r\n    \r\n    private function init takes nothing returns nothing\r\n        call BlzLoadTOCFile(\"war3mapImported\\\\TextAreaTemplate.toc\")\r\n        call CreateEventTrigger( \"Event_DatabaseLoaded\", function StartInit, null )\r\n    endfunction\r\n\r\nendlibrary",
  "Events": [],
  "LocalVariables": [],
  "Conditions": [],
  "Actions": []
}