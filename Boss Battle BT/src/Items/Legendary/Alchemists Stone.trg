{
  "Id": 50332756,
  "Comment": "",
  "IsScript": true,
  "RunOnMapInit": false,
  "Script": "scope AlchemistsStone initializer init\r\n\r\n    globals\r\n        private constant integer ID_ALCHEMISTS_STONE_ITEM = 'I0GY'\r\n        \r\n        private constant integer ALCHEMISTS_STONE_BONUS_POTION_SPELL_POWER = 50\r\n        private constant integer ALCHEMISTS_STONE_BONUS_CHARGES = 3\r\n        \r\n        private constant integer ALCHEMISTS_STONE_FIRE = 'I0GZ'\r\n        private constant integer ALCHEMISTS_STONE_EARTH = 'I0H0'\r\n        private constant integer ALCHEMISTS_STONE_WATER = 'I0H1'\r\n        \r\n        integer array Alchemists_Stone_Potions[9]\r\n    endglobals\r\n    \r\n    private function SetPotions takes nothing returns nothing\r\n        set Alchemists_Stone_Potions[0] = 0\r\n        set Alchemists_Stone_Potions[1] = 0\r\n        set Alchemists_Stone_Potions[2] = 'I0H4'\r\n        set Alchemists_Stone_Potions[3] = 'I0H2'\r\n        set Alchemists_Stone_Potions[4] = 'I0H7'\r\n        set Alchemists_Stone_Potions[5] = 'I0H3'\r\n        set Alchemists_Stone_Potions[6] = 'I0H5'\r\n        set Alchemists_Stone_Potions[7] = 0\r\n        set Alchemists_Stone_Potions[8] = 'I0H6'\r\n    endfunction\r\n\r\n    private function Conditions takes nothing returns boolean\r\n        return GetItemTypeId(GetManipulatedItem()) == ID_ALCHEMISTS_STONE_ITEM\r\n    endfunction\r\n\r\n    private function GetItem takes unit caster, integer element1, integer element2 returns nothing\r\n        local integer potion = 0\r\n        local item it\r\n        \r\n        if element1 == ALCHEMISTS_STONE_FIRE then\r\n            set potion = potion + 1\r\n        elseif element1 == ALCHEMISTS_STONE_EARTH then\r\n           set potion = potion + 2\r\n        elseif element1 == ALCHEMISTS_STONE_WATER then\r\n            set potion = potion + 4\r\n        endif\r\n        if element2 == ALCHEMISTS_STONE_FIRE then\r\n            set potion = potion + 1\r\n        elseif element2 == ALCHEMISTS_STONE_EARTH then\r\n           set potion = potion + 2\r\n        elseif element2 == ALCHEMISTS_STONE_WATER then\r\n            set potion = potion + 4\r\n        endif\r\n        \r\n        set it = CreateItem( Alchemists_Stone_Potions[potion], GetUnitX(caster), GetUnitY(caster) )\r\n        call UnitAddItem(caster, it )\r\n        call BlzSetItemIntegerFieldBJ( it, ITEM_IF_NUMBER_OF_CHARGES, ALCHEMISTS_STONE_BONUS_CHARGES )\r\n        call UnitRemoveItem(caster, it)\r\n        call UnitAddItem(caster, it)\r\n    \r\n        set caster = null\r\n        set it = null\r\n    endfunction\r\n\r\n    function Trig_Alchemists_Stone_Actions takes nothing returns nothing\r\n        call forge( GetManipulatingUnit(), GetManipulatedItem(), ALCHEMISTS_STONE_FIRE, ALCHEMISTS_STONE_EARTH, ALCHEMISTS_STONE_WATER, false )\r\n    endfunction\r\n    \r\n    private function Add takes nothing returns nothing\r\n        call SpellPotionUnit(GetManipulatingUnit(), ALCHEMISTS_STONE_BONUS_POTION_SPELL_POWER)\r\n    endfunction\r\n    \r\n    private function Remove takes nothing returns nothing\r\n        call SpellPotionUnit(GetManipulatingUnit(), -ALCHEMISTS_STONE_BONUS_POTION_SPELL_POWER)\r\n    endfunction\r\n    \r\n    private function BeforeForge_Conditions takes nothing returns boolean\r\n        local integer forgetItemId = GetItemTypeId(Event_BeforeForge_ForgedItem)\r\n        return forgetItemId == ID_ALCHEMISTS_STONE_ITEM and IsHeroHasItem(Event_BeforeForge_Hero, forgetItemId)\r\n    endfunction\r\n    \r\n    private function Forge takes unit caster, item it returns nothing\r\n        local integer id = GetHandleId(it)\r\n        //local integer count = LoadInteger( udg_hash, id, StringHash( \"alhst\" ) )\r\n        local integer element1 = LoadInteger( udg_hash, id, StringHash( \"alhst1\" ) )\r\n        local integer element2 = LoadInteger( udg_hash, id, StringHash( \"alhst2\" ) )\r\n    \r\n        if element1 != 0 and element2 != 0 then\r\n            //call RemoveItem(it)\r\n            call stazisst( caster, it)\r\n            if UnitInventoryCount(caster) < 6 then\r\n                call GetItem(caster,  element1, element2)\r\n            endif\r\n        endif\r\n        \r\n        set caster = null\r\n        set it = null\r\n    endfunction\r\n    \r\n    private function ChangeTooltip takes unit hero, item it, integer newItem returns nothing\r\n        local string newDiscription = \"\"\r\n        \r\n        if newItem == ALCHEMISTS_STONE_FIRE then\r\n            set newDiscription = \"Fire\"\r\n        elseif newItem == ALCHEMISTS_STONE_EARTH then\r\n            set newDiscription = \"Earth\"\r\n        elseif newItem == ALCHEMISTS_STONE_WATER then\r\n            set newDiscription = \"Water\"\r\n        endif\r\n        \r\n        call BlzSetItemExtendedTooltip( it, words( hero, BlzGetItemDescription(it), \"Current: \", \")|r\", newDiscription ) ) // sadtwig\r\n        //call BlzSetItemIconPath( it, words( hero, BlzGetItemDescription(it), \"Current: \", \")|r\", newDiscription ) )\r\n        \r\n        set hero = null\r\n        set it = null\r\n    endfunction\r\n    \r\n    private function BeforeForge takes nothing returns nothing\r\n        local integer id = GetHandleId(Event_BeforeForge_ForgedItem)\r\n        local integer count = LoadInteger( udg_hash, id, StringHash( \"alhst\" ) ) + 1\r\n        \r\n        if LoadInteger( udg_hash, id, StringHash( \"alhst1\" ) ) == 0 then\r\n            call SaveInteger( udg_hash, id, StringHash( \"alhst1\" ), Event_BeforeForge_NewItem )\r\n        else\r\n            call SaveInteger( udg_hash, id, StringHash( \"alhst2\" ), Event_BeforeForge_NewItem )\r\n        endif\r\n        call SaveInteger( udg_hash, id, StringHash( \"alhst\" ), count )\r\n        call ChangeTooltip( Event_BeforeForge_Hero, Event_BeforeForge_ForgedItem, Event_BeforeForge_NewItem )\r\n        \r\n        call Forge(Event_BeforeForge_Hero, Event_BeforeForge_ForgedItem)\r\n    endfunction\r\n    \r\n    private function AfterForge_Conditions takes nothing returns boolean\r\n        return Event_AfterForge_ForgedItem == ID_ALCHEMISTS_STONE_ITEM and IsHeroHasItem(Event_AfterForge_Hero, Event_AfterForge_ForgedItem)\r\n    endfunction\r\n    \r\n    private function AfterForge takes nothing returns nothing\r\n        call forge( Event_AfterForge_Hero, Event_AfterForge_ForgedItem_Item, ALCHEMISTS_STONE_FIRE, ALCHEMISTS_STONE_EARTH, ALCHEMISTS_STONE_WATER, false )\r\n    endfunction\r\n    \r\n    //===========================================================================\r\n    private function init takes nothing returns nothing\r\n        local trigger trig\r\n    \r\n        set trig = CreateTrigger()\r\n        call TriggerRegisterAnyUnitEventBJ( trig, EVENT_PLAYER_UNIT_USE_ITEM )\r\n        call TriggerAddCondition( trig, Condition( function Conditions ) )\r\n        call TriggerAddAction( trig, function Trig_Alchemists_Stone_Actions )\r\n        \r\n        set trig = CreateTrigger(  )\r\n        call TriggerRegisterAnyUnitEventBJ( trig, EVENT_PLAYER_UNIT_PICKUP_ITEM )\r\n        call TriggerAddCondition( trig, Condition( function Conditions ) )\r\n        call TriggerAddAction( trig, function Add )\r\n        \r\n        set trig = CreateTrigger(  )\r\n        call TriggerRegisterAnyUnitEventBJ( trig, EVENT_PLAYER_UNIT_DROP_ITEM )\r\n        call TriggerAddCondition( trig, Condition( function Conditions ) )\r\n        call TriggerAddAction( trig, function Remove )\r\n        \r\n        call CreateEventTrigger( \"Event_BeforeForge_Real\", function BeforeForge, function BeforeForge_Conditions )\r\n        call CreateEventTrigger( \"Event_AfterForge_Real\", function AfterForge, function AfterForge_Conditions )\r\n\r\n        call SetPotions()\r\n        set trig = null\r\n    endfunction\r\n\r\nendscope",
  "Events": [],
  "LocalVariables": [],
  "Conditions": [],
  "Actions": []
}