{
  "Id": 50332809,
  "Comment": "",
  "IsScript": true,
  "RunOnMapInit": false,
  "Script": "scope OrbRollingPlains initializer init\r\n\r\n    globals\r\n        private constant integer ID_ITEM = 'I0FP'\r\n\r\n        private constant integer COUNT_NEEDED = 100\r\n        private constant integer JUMPS_LIMIT = 4\r\n        private constant integer HEAL = 100\r\n        private constant integer AREA_FIRST_JUMP = 600\r\n        private constant integer AREA_JUMP = 400\r\n        private constant integer LIGHTNING_LIFE_TIME = 1\r\n        \r\n        private boolean IsLoop = false\r\n    endglobals\r\n\r\n    private function AddPotencialTargets takes unit caster, unit target, group potencialTarget, group affected returns nothing\r\n        local group g = CreateGroup()\r\n        local unit u\r\n    \r\n        call GroupClear( potencialTarget )\r\n        call GroupEnumUnitsInRange( g, GetUnitX( target ), GetUnitY( target ), AREA_JUMP, null )\r\n        loop\r\n            set u = FirstOfGroup(g)\r\n            exitwhen u == null\r\n            if unitst( u, caster, TARGET_ALLY ) and u != target and IsUnitInGroup(u , affected) == false and IsUnitHealthIsFull(u) == false then\r\n                call GroupAddUnit(potencialTarget, u)\r\n            endif\r\n            call GroupRemoveUnit(g,u)\r\n        endloop\r\n    \r\n        set caster = null\r\n        set target = null\r\n        set affected = null\r\n        set potencialTarget = null\r\n        set g = null\r\n        set u = null\r\n    endfunction\r\n\r\n    private function ChainHeal takes unit caster returns nothing\r\n        local unit target\r\n        local unit lastunit\r\n        local group potencialTarget = CreateGroup()\r\n        local group affected = CreateGroup()\r\n        local integer i\r\n        \r\n        set target = randomtarget( caster, AREA_FIRST_JUMP, TARGET_ALLY, RANDOM_TARGET_NOT_FULL_HEALTH, \"\", \"\", \"\" )\r\n        \r\n        if target != null then\r\n            set lastunit = caster\r\n            set i = 1\r\n            loop\r\n                call Lightning_CreateLightning( \"HWPB\", GetUnitX(lastunit), GetUnitY(lastunit), GetUnitFlyHeight(lastunit) + 50, GetUnitX(target), GetUnitY(target), GetUnitFlyHeight(target) + 50, LIGHTNING_LIFE_TIME )\r\n                \r\n                call healst(caster, target, HEAL)\r\n                \r\n                call AddPotencialTargets( caster, target, potencialTarget, affected )\r\n                exitwhen i >= JUMPS_LIMIT or IsUnitGroupEmptyBJ(potencialTarget)\r\n                set lastunit = target\r\n                set target = GroupPickRandomUnit(potencialTarget)\r\n                call GroupAddUnit(affected, target)\r\n                set i = i + 1\r\n            endloop\r\n        endif\r\n        \r\n        call GroupClear( potencialTarget )\r\n        call DestroyGroup( potencialTarget )\r\n        call GroupClear( affected )\r\n        call DestroyGroup( affected )\r\n        set affected = null\r\n        set potencialTarget = null\r\n        set caster = null\r\n        set target = null\r\n        set lastunit = null\r\n    endfunction\r\n\r\n\r\n    //Damage Trigger\r\n    private function AfterDamageEvent_Conditions takes nothing returns boolean\r\n        return IsHeroHasItem( udg_DamageEventSource, ID_ITEM) and udg_DamageEventAmount >= COUNT_NEEDED and IsLoop == false\r\n    endfunction\r\n    \r\n    private function AfterDamageEvent takes nothing returns nothing\r\n        set IsLoop = true\r\n        call ChainHeal( udg_DamageEventSource )\r\n        set IsLoop = false\r\n    endfunction\r\n\r\n\r\n    //Heal Trigger\r\n    private function AfterHeal_Conditions takes nothing returns boolean\r\n        return IsHeroHasItem( Event_AfterHeal_Caster, ID_ITEM) and Event_AfterHeal_Heal >= COUNT_NEEDED and IsLoop == false\r\n    endfunction\r\n    \r\n    private function AfterHeal takes nothing returns nothing\r\n        set IsLoop = true\r\n        call ChainHeal( Event_AfterHeal_Caster )\r\n        set IsLoop = false\r\n    endfunction\r\n    \r\n    private function init takes nothing returns nothing\r\n        call CreateEventTrigger( \"Event_AfterHeal_Real\", function AfterHeal, function AfterHeal_Conditions )\r\n        call CreateEventTrigger( \"udg_AfterDamageEvent\", function AfterDamageEvent, function AfterDamageEvent_Conditions )\r\n    endfunction\r\n\r\nendscope",
  "Events": [],
  "LocalVariables": [],
  "Conditions": [],
  "Actions": []
}