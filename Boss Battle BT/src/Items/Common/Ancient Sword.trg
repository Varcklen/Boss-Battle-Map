{
  "Id": 50332386,
  "Comment": "",
  "IsScript": true,
  "RunOnMapInit": false,
  "Script": "scope AncientSword initializer init\r\n\r\n    globals\r\n        private constant integer ID_ITEM = 'I02P'\r\n        private constant integer ID_ULTIMATE_WEAPON = 'I030'\r\n        private constant integer ULTIMATE_WEAPON_NUMBER = 8 \r\n        \r\n        private constant integer CHANCE = 5\r\n        private constant integer DAMAGE = 60\r\n        private constant real TICK = 0.04\r\n        private constant integer FLIGHT_LENGTH = 32\r\n        private constant integer AREA = 128\r\n        private constant integer SPEED = 44\r\n        \r\n        private constant string WAVE_ANIMATION = \"Abilities\\\\Spells\\\\Orc\\\\Shockwave\\\\ShockwaveMissile.mdl\"\r\n        \r\n        private trigger Wave_Use = null\r\n    endglobals\r\n    \r\n    function Trig_Ancient_Sword_Conditions takes nothing returns boolean\r\n        if udg_IsDamageSpell == true then\r\n            return false\r\n        elseif not( IsHeroHasItem( udg_DamageEventSource, ID_ITEM ) or ( IsHeroHasItem( udg_DamageEventSource, ID_ULTIMATE_WEAPON ) and udg_Set_Weapon_Logic[GetUnitUserData(udg_DamageEventSource) + ULTIMATE_WEAPON_NUMBER] ) ) then\r\n            return false\r\n        elseif LuckChance( udg_DamageEventSource, CHANCE + GetUnitLevel(udg_DamageEventSource) ) == false then\r\n            return false\r\n        endif\r\n        return true\r\n    endfunction\r\n    \r\n    /*private function DealDamage takes effect wave, group nodmg, unit caster, real damage returns nothing\r\n        local group g = CreateGroup()\r\n        local unit u\r\n        \r\n        call GroupEnumUnitsInRange( g, BlzGetLocalSpecialEffectX( wave ), BlzGetLocalSpecialEffectY( wave ), AREA, null )\r\n        loop\r\n            set u = FirstOfGroup(g)\r\n            exitwhen u == null\r\n            if unitst( u, caster, \"enemy\" ) and not( IsUnitInGroup( u, nodmg ) ) then\r\n                set IsDisableSpellPower = true\r\n                call UnitTakeDamage(caster, u, damage, DAMAGE_TYPE_MAGIC)\r\n                call GroupAddUnit( nodmg, u )\r\n            endif\r\n            call GroupRemoveUnit(g,u)\r\n        endloop\r\n        \r\n        call GroupClear( g )\r\n        call DestroyGroup( g )\r\n        set u = null\r\n        set g = null\r\n        set wave = null\r\n        set nodmg = null\r\n        set caster = null\r\n    endfunction\r\n\r\n    function Ancient_SwordCast takes nothing returns nothing\r\n        local integer id = GetHandleId( GetExpiredTimer() )\r\n        local integer counter = LoadInteger( udg_hash, id, StringHash( \"anss\" ) ) + 1\r\n        local effect wave = LoadEffectHandle( udg_hash, id, StringHash( \"anss\" ) )\r\n        local unit caster = LoadUnitHandle( udg_hash, id, StringHash( \"anssc\" ) )\r\n        local real damage = LoadReal( udg_hash, id, StringHash( \"anss\" ) )\r\n        local group nodmg = LoadGroupHandle( udg_hash, id, StringHash( \"anssg\" ) )\r\n        local real yaw = LoadReal( udg_hash, id, StringHash( \"anssy\" ) )\r\n        local point newPoint = 0\r\n        \r\n        if counter >= FLIGHT_LENGTH or wave == null then\r\n            call DestroyEffect( wave )\r\n            call GroupClear( nodmg )\r\n            call DestroyGroup( nodmg )\r\n            call FlushChildHashtable( udg_hash, id )\r\n            call DestroyTimer( GetExpiredTimer() )\r\n        else\r\n            set newPoint = GetMovedPoint( wave, yaw, SPEED )\r\n            call BlzSetSpecialEffectPosition( wave, newPoint.x, newPoint.y, BlzGetLocalSpecialEffectZ(wave) )\r\n            call DealDamage( wave, nodmg, caster, damage )\r\n            call SaveInteger( udg_hash, id, StringHash( \"anss\" ), counter )\r\n        endif\r\n\r\n        call newPoint.destroy()\r\n        set wave = null\r\n        set caster = null\r\n        set nodmg = null\r\n    endfunction*/\r\n    \r\n    private function Use takes nothing returns nothing\r\n        local unit caster = Event_WaveHit_Caster\r\n        local unit target = Event_WaveHit_Target\r\n        local real damage = LoadReal( udg_hash, GetHandleId(Event_WaveHit_Wave), StringHash( \"anss\" ) )\r\n        \r\n        set IsDisableSpellPower = true\r\n        call UnitTakeDamage(caster, target, damage, DAMAGE_TYPE_MAGIC)\r\n                \r\n        set caster = null\r\n        set target = null\r\n    endfunction\r\n    \r\n    function Trig_Ancient_Sword_Actions takes nothing returns nothing\r\n        local unit caster = udg_DamageEventSource\r\n        local unit target = udg_DamageEventTarget\r\n        local effect wave\r\n        //local real yaw\r\n        local real damage = DAMAGE * GetUnitSpellPower(caster)\r\n        //local integer id\r\n\r\n        /*set wave = AddSpecialEffect( WAVE_ANIMATION, GetUnitX(caster), GetUnitY(caster))\r\n        set yaw = Deg2Rad(AngleBetweenUnits(target, caster))\r\n        call BlzSetSpecialEffectYaw( wave, yaw )\r\n        \r\n        set id = InvokeTimerWithEffect( wave, \"anss\", TICK, true, function Ancient_SwordCast )\r\n        call SaveUnitHandle( udg_hash, id, StringHash( \"anssc\" ), caster )\r\n        call SaveReal( udg_hash, id, StringHash( \"anss\" ), damage )\r\n        call SaveReal( udg_hash, id, StringHash( \"anssy\" ), yaw )\r\n        call SaveGroupHandle( udg_hash, id, StringHash( \"anssg\" ), CreateGroup() )*/\r\n        \r\n        set wave = Wave_CreateWave( caster, GetUnitX(caster), GetUnitY(caster), GetUnitFacing(caster), TICK, AREA, FLIGHT_LENGTH, SPEED, TARGET_ENEMY, WAVE_BASE_ANIMATION, Wave_Use, null )\r\n        call SaveReal( udg_hash, GetHandleId(wave), StringHash( \"anss\" ), damage)\r\n        \r\n        set wave = null\r\n        set caster = null\r\n        set target = null\r\n    endfunction\r\n\r\n    //===========================================================================\r\n    private function init takes nothing returns nothing\r\n        call CreateEventTrigger( \"udg_AfterDamageEvent\", function Trig_Ancient_Sword_Actions, function Trig_Ancient_Sword_Conditions )\r\n        \r\n        set Wave_Use = CreateTrigger()\r\n        call TriggerAddAction( Wave_Use, function Use )\r\n    endfunction\r\nendscope\r\n\r\n",
  "Events": [],
  "LocalVariables": [],
  "Conditions": [],
  "Actions": []
}