{
  "Id": 50332531,
  "Comment": "",
  "IsScript": true,
  "RunOnMapInit": false,
  "Script": "function Serrated_blade_Condition takes unit hero returns boolean\r\n    local boolean work = true\r\n    local integer i = 0\r\n    local integer index = GetUnitUserData(hero)\r\n    \r\n    if inv( hero, 'I0DX') == 0 then\r\n        set i = i + 1\r\n    endif\r\n    if inv( hero, 'I030') == 0 or udg_Set_Weapon_Logic[index + 36] == false then\r\n        set i = i + 1\r\n    endif\r\n    \r\n    if i > 1 then\r\n        set work = false\r\n    elseif IsUnitEnemy( hero, GetOwningPlayer( hero ) ) then\r\n        set work = false\r\n    elseif udg_IsDamageSpell then\r\n        set work = false\r\n    elseif GetUnitTypeId(hero) == 'u000' then\r\n        set work = false\r\n    endif\r\n    \r\n    set hero = null\r\n    return work\r\nendfunction\r\n\r\nfunction Trig_Serrated_blade_Conditions takes nothing returns boolean\r\n    return Serrated_blade_Condition(udg_DamageEventSource)\r\nendfunction\r\n\r\nglobals\r\n    constant real SERRATED_BLADE_DURATION = 5\r\n    constant real SERRATED_BLADE_DAMAGE_TICK = 1\r\n    constant real SERRATED_BLADE_PERCENT_HEALTH_TO_DAMAGE = 0.016\r\nendglobals\r\n\r\nfunction Serrated_bladeCast takes nothing returns nothing\r\n    local integer id = GetHandleId( GetExpiredTimer( ) )\r\n    local real dmg = LoadReal( udg_hash, id, StringHash( \"srbl\" ) )\r\n    local unit target = LoadUnitHandle( udg_hash, id, StringHash( \"srbl\" ) )\r\n    local unit dummy = LoadUnitHandle( udg_hash, id, StringHash( \"srbld\" ) )\r\n    \r\n    if GetUnitState( target, UNIT_STATE_LIFE) > 0.405 and GetUnitState( dummy, UNIT_STATE_LIFE) > 0.405 and GetUnitAbilityLevel( target, 'A0O4') > 0 then\r\n        call UnitDamageTarget( dummy, target, dmg, true, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_MAGIC, WEAPON_TYPE_WHOKNOWS )\r\n    else\r\n        call RemoveUnit( dummy )\r\n        call FlushChildHashtable( udg_hash, id )\r\n        call DestroyTimer( GetExpiredTimer() )\r\n    endif\r\n    \r\n    set dummy = null\r\n    set target = null\r\nendfunction\r\n\r\nfunction Trig_Serrated_blade_Actions takes nothing returns nothing\r\n    local integer id \r\n    local unit target\r\n    local unit caster\r\n    local real t\r\n    local real dmg\r\n    \r\n    if CastLogic() then\r\n        set caster = udg_Caster\r\n        set target = udg_Target\r\n        set t = udg_Time\r\n    else\r\n        set caster = udg_DamageEventSource\r\n        set target = udg_DamageEventTarget\r\n        set t = SERRATED_BLADE_DURATION\r\n    endif\r\n    set t = timebonus( caster, t )\r\n    set id = GetHandleId( target )\r\n\r\n    set dmg = GetUnitState( caster, UNIT_STATE_MAX_LIFE) * SERRATED_BLADE_PERCENT_HEALTH_TO_DAMAGE * GetUnitSpellPower(caster)\r\n\r\n    if GetUnitAbilityLevel( target, 'A0O4') == 0 then \r\n        call dummyspawn( caster, 0, 'A0N5', 0, 0 )\r\n       \r\n        if LoadTimerHandle( udg_hash, id, StringHash( \"srbl\" ) ) == null then\r\n            call SaveTimerHandle( udg_hash, id, StringHash( \"srbl\" ), CreateTimer() )\r\n        endif\r\n        set id = GetHandleId( LoadTimerHandle( udg_hash, id, StringHash( \"srbl\" ) ) ) \r\n        call SaveUnitHandle( udg_hash, id, StringHash( \"srbl\" ), target )\r\n        call SaveUnitHandle( udg_hash, id, StringHash( \"srbld\" ), bj_lastCreatedUnit )\r\n        call SaveReal( udg_hash, id, StringHash( \"srbl\" ), dmg )\r\n        call TimerStart( LoadTimerHandle( udg_hash, GetHandleId( target ), StringHash( \"srbl\" ) ), SERRATED_BLADE_DAMAGE_TICK, true, function Serrated_bladeCast )\r\n    endif\r\n\r\n    call bufst( caster, target, 'A0O4', 'B07V', \"srbl1\", t ) \r\n    \r\n    set caster = null\r\n    set target = null\r\nendfunction\r\n\r\n//===========================================================================\r\nfunction InitTrig_Serrated_blade takes nothing returns nothing\r\n    set gg_trg_Serrated_blade = CreateTrigger(  )\r\n    call TriggerRegisterVariableEvent( gg_trg_Serrated_blade, \"udg_AfterDamageEvent\", EQUAL, 1.00 )\r\n    call TriggerAddCondition( gg_trg_Serrated_blade, Condition( function Trig_Serrated_blade_Conditions ) )\r\n    call TriggerAddAction( gg_trg_Serrated_blade, function Trig_Serrated_blade_Actions )\r\nendfunction",
  "Events": [],
  "LocalVariables": [],
  "Conditions": [],
  "Actions": []
}