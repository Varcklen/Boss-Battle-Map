{
  "Id": 50332629,
  "Comment": "",
  "IsScript": true,
  "RunOnMapInit": false,
  "Script": "function Trig_Magician_Boots_Conditions takes nothing returns boolean\r\n    return GetSpellAbilityId() == 'A18A' and combat( GetSpellAbilityUnit(), true, GetSpellAbilityId() ) and not(udg_fightmod[3])\r\nendfunction\r\n\r\nfunction Magician_BootsCast takes nothing returns nothing\r\n    local integer id = GetHandleId( GetExpiredTimer( ) )\r\n    local unit u = LoadUnitHandle( udg_hash, id, StringHash( \"mgbtc\" ) )\r\n    local unit t = LoadUnitHandle( udg_hash, id, StringHash( \"mgbtt\" ) )\r\n    local real xc = LoadReal( udg_hash, id, StringHash( \"mgbtcx\" ) )\r\n    local real yc = LoadReal( udg_hash, id, StringHash( \"mgbtcy\" ) )\r\n    local real xt = LoadReal( udg_hash, id, StringHash( \"mgbttx\" ) )\r\n    local real yt = LoadReal( udg_hash, id, StringHash( \"mgbtty\" ) )\r\n    \r\n    call SetUnitPosition( u, xt, yt )\r\n    call DestroyEffect( AddSpecialEffectTarget(\"Void Teleport Caster.mdx\", u, \"origin\" ) )\r\n    call PanCameraToTimedForPlayer( GetOwningPlayer( u ), xt, yt, 0.25 )\r\n    call SetUnitPosition( t, xc, yc )\r\n    call DestroyEffect( AddSpecialEffectTarget(\"Void Teleport Caster.mdx\", t, \"origin\" ) )\r\n    call PanCameraToTimedForPlayer( GetOwningPlayer( t ), xc, yc, 0.25 )\r\n    call FlushChildHashtable( udg_hash, id )\r\n    \r\n    set u = null\r\nendfunction\r\n\r\nfunction Trig_Magician_Boots_Actions takes nothing returns nothing\r\n    local integer id\r\n    local unit caster\r\n    local real x\r\n    local real y\r\n    local integer cyclA\r\n    local group g = CreateGroup()\r\n    local unit n\r\n\r\n    if CastLogic() then\r\n        set caster = udg_Target\r\n    elseif RandomLogic() then\r\n        set caster = udg_Caster\r\n        call textst( udg_string[0] + GetObjectName('A18A'), caster, 64, 90, 10, 1.5 )\r\n    else\r\n        set caster = GetSpellAbilityUnit()\r\n    endif\r\n    \r\n    set cyclA = 1\r\n    loop\r\n        exitwhen cyclA > 4\r\n        if GetUnitState(udg_hero[cyclA], UNIT_STATE_LIFE) > 0.405 and IsUnitAlly(udg_hero[cyclA], GetOwningPlayer(caster)) and udg_hero[cyclA] != caster then \r\n            call GroupAddUnit(g, udg_hero[cyclA])\r\n        endif\r\n        set cyclA = cyclA + 1\r\n    endloop\r\n    \r\n    if not(IsUnitGroupEmptyBJ(g)) then\r\n        set n = GroupPickRandomUnit(g)\r\n\r\n        set id = GetHandleId( caster )\r\n        if LoadTimerHandle( udg_hash, id, StringHash( \"mgbt\" ) ) == null then\r\n            call SaveTimerHandle( udg_hash, id, StringHash( \"mgbt\" ), CreateTimer() )\r\n        endif\r\n        set id = GetHandleId( LoadTimerHandle( udg_hash, id, StringHash( \"mgbt\" ) ) ) \r\n        call SaveUnitHandle( udg_hash, id, StringHash( \"mgbtc\" ), caster )\r\n        call SaveUnitHandle( udg_hash, id, StringHash( \"mgbtt\" ), n )\r\n        call SaveReal( udg_hash, id, StringHash( \"mgbtcx\" ), GetUnitX(caster) )\r\n        call SaveReal( udg_hash, id, StringHash( \"mgbtcy\" ), GetUnitY(caster) )\r\n        call SaveReal( udg_hash, id, StringHash( \"mgbttx\" ), GetUnitX(n) )\r\n        call SaveReal( udg_hash, id, StringHash( \"mgbtty\" ), GetUnitY(n) )\r\n        call TimerStart( LoadTimerHandle( udg_hash, GetHandleId( caster ), StringHash( \"mgbt\" ) ), 0.01, false, function Magician_BootsCast )\r\n    endif\r\n\r\n    call GroupClear( g )\r\n    call DestroyGroup( g )\r\n    set g = null\r\n    set n = null\r\n    set caster = null\r\nendfunction\r\n\r\n//===========================================================================\r\nfunction InitTrig_Magician_Boots takes nothing returns nothing\r\n    set gg_trg_Magician_Boots = CreateTrigger(  )\r\n    call TriggerRegisterAnyUnitEventBJ( gg_trg_Magician_Boots, EVENT_PLAYER_UNIT_SPELL_EFFECT )\r\n    call TriggerAddCondition( gg_trg_Magician_Boots, Condition( function Trig_Magician_Boots_Conditions ) )\r\n    call TriggerAddAction( gg_trg_Magician_Boots, function Trig_Magician_Boots_Actions )\r\nendfunction\r\n\r\n",
  "Events": [],
  "LocalVariables": [],
  "Conditions": [],
  "Actions": []
}