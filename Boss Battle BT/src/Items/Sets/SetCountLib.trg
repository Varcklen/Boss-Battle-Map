{
  "Id": 50332852,
  "Comment": "",
  "IsScript": true,
  "RunOnMapInit": false,
  "Script": "library SetCount initializer init requires TagSystem, Multiboard\r\n\r\n    globals\r\n        constant integer SET_MECH = 1\r\n        constant integer SET_WEAPON = 2\r\n        constant integer SET_RING = 3\r\n        constant integer SET_BLOOD = 4\r\n        constant integer SET_RUNE = 5\r\n        constant integer SET_MOON = 6\r\n        constant integer SET_NATURE = 7\r\n        constant integer SET_ALCHEMY = 8\r\n        constant integer SET_CRYSTAL = 9\r\n           \r\n        constant string SET_NAME_MECH = \"|cffb18904Mech|r\"\r\n        constant string SET_NAME_WEAPON = \"|cff2d9995Weapon|r\"\r\n        constant string SET_NAME_RING = \"|cff9001fdRing|r\"\r\n        constant string SET_NAME_BLOOD = \"|cffb40431Blood|r\"\r\n        constant string SET_NAME_RUNE = \"|cff848484Rune|r\"\r\n        constant string SET_NAME_MOON = \"|cff5858faMoon|r\"\r\n        constant string SET_NAME_NATURE = \"|cff7cfc00Nature|r\"\r\n        constant string SET_NAME_ALCHEMY = \"|cfffe9a2eAlchemy|r\"\r\n        constant string SET_NAME_CRYSTAL = \"|cff00cceeCrystal|r\"\r\n        \r\n        private constant integer KEY_MECH = StringHash( \"mech\" )\r\n        private constant integer KEY_WEAPON = StringHash( \"weap\" )\r\n        private constant integer KEY_RING = StringHash( \"ring\" )\r\n        private constant integer KEY_BLOOD = StringHash( \"blood\" )\r\n        private constant integer KEY_RUNE = StringHash( \"rune\" )\r\n        private constant integer KEY_MOON = StringHash( \"moon\" )\r\n        private constant integer KEY_NATURE = StringHash( \"natu\" )\r\n        private constant integer KEY_ALCHEMY = StringHash( \"alch\" )\r\n        private constant integer KEY_CRYSTAL = StringHash( \"crys\" )\r\n        \r\n        real Event_MechAdded_Real\r\n        integer Event_MechAdded_AddedMechs\r\n        integer Event_MechAdded_NewCount\r\n        integer Event_MechAdded_OldCount\r\n        unit Event_MechAdded_Hero\r\n        \r\n        private hashtable SetHash = InitHashtable()\r\n        private constant integer IS_FROM_SET = StringHash( \"from_set\" )\r\n    endglobals\r\n\r\n    private function SetMech takes unit u, integer addedMechs, integer index returns integer\r\n        local integer unitIndex = GetHandleId(u)\r\n        local integer currentMech = LoadInteger(udg_hash, unitIndex, KEY_MECH )\r\n        local integer oldMech = currentMech\r\n        \r\n        set currentMech = addedMechs\r\n        \r\n        call SaveInteger(udg_hash, unitIndex, KEY_MECH, currentMech )\r\n        call MultiSetValue( udg_multi, ( 3 * udg_Multiboard_Position[index] ) + 1, 15, I2S( currentMech ) )\r\n        \r\n        set Event_MechAdded_Hero = u\r\n        set Event_MechAdded_OldCount = oldMech\r\n        set Event_MechAdded_AddedMechs = currentMech - oldMech\r\n        set Event_MechAdded_NewCount = currentMech\r\n        set Event_MechAdded_Real = 0.00\r\n        set Event_MechAdded_Real = 1.00\r\n        set Event_MechAdded_Real = 0.00\r\n        \r\n        set u = null\r\n        return currentMech\r\n    endfunction\r\n    \r\n    public function AddPiece takes unit hero, integer setCount, integer numberToAdd returns nothing\r\n        local integer unitId = GetUnitUserData(hero)\r\n    \r\n        if setCount == SET_ALCHEMY then\r\n            set udg_Set_Alchemy_Number[unitId] = udg_Set_Alchemy_Number[unitId] + numberToAdd\r\n        elseif setCount == SET_BLOOD then\r\n            set udg_Set_Blood_Number[unitId] = udg_Set_Blood_Number[unitId] + numberToAdd\r\n        elseif setCount == SET_CRYSTAL then\r\n            set udg_Set_Cristall_Number[unitId] = udg_Set_Cristall_Number[unitId] + numberToAdd\r\n        elseif setCount == SET_MECH then\r\n            call SetMech(hero, LoadInteger(udg_hash, GetHandleId(hero), KEY_MECH ) + numberToAdd, unitId)\r\n        elseif setCount == SET_MOON then\r\n            set udg_Set_Moon_Number[unitId] = udg_Set_Moon_Number[unitId] + numberToAdd\r\n        elseif setCount == SET_NATURE then\r\n            set udg_Set_Nature_Number[unitId] = udg_Set_Nature_Number[unitId] + numberToAdd\r\n        elseif setCount == SET_RING then\r\n            set udg_Set_Ring_Number[unitId] = udg_Set_Ring_Number[unitId] + numberToAdd\r\n        elseif setCount == SET_RUNE then\r\n            set udg_Set_Rune_Number[unitId] = udg_Set_Rune_Number[unitId] + numberToAdd\r\n        elseif setCount == SET_WEAPON then\r\n            set udg_Set_Weapon_Number[unitId] = udg_Set_Weapon_Number[unitId] + numberToAdd\r\n        endif\r\n        \r\n        set hero = null\r\n    endfunction\r\n    \r\n    public function SetPiece takes unit hero, integer setCount, integer numberToSet returns nothing\r\n        local integer unitId = GetUnitUserData(hero)\r\n    \r\n        if setCount == SET_ALCHEMY then\r\n            set udg_Set_Alchemy_Number[unitId] = numberToSet\r\n        elseif setCount == SET_BLOOD then\r\n            set udg_Set_Blood_Number[unitId] = numberToSet\r\n        elseif setCount == SET_CRYSTAL then\r\n            set udg_Set_Cristall_Number[unitId] = numberToSet\r\n        elseif setCount == SET_MECH then\r\n            call SetMech(hero, numberToSet, unitId)\r\n        elseif setCount == SET_MOON then\r\n            set udg_Set_Moon_Number[unitId] = numberToSet\r\n        elseif setCount == SET_NATURE then\r\n            set udg_Set_Nature_Number[unitId] = numberToSet\r\n        elseif setCount == SET_RING then\r\n            set udg_Set_Ring_Number[unitId] = numberToSet\r\n        elseif setCount == SET_RUNE then\r\n            set udg_Set_Rune_Number[unitId] = numberToSet\r\n        elseif setCount == SET_WEAPON then\r\n            set udg_Set_Weapon_Number[unitId] = numberToSet\r\n        endif\r\n        \r\n        set hero = null\r\n    endfunction\r\n    \r\n    public function GetPieces takes unit hero, integer setCount returns integer\r\n        local integer unitId = GetUnitUserData(hero)\r\n    \r\n        if setCount == SET_ALCHEMY then\r\n            return udg_Set_Alchemy_Number[unitId]\r\n        elseif setCount == SET_BLOOD then\r\n            return udg_Set_Blood_Number[unitId]\r\n        elseif setCount == SET_CRYSTAL then\r\n            return udg_Set_Cristall_Number[unitId]\r\n        elseif setCount == SET_MECH then\r\n            return LoadInteger(udg_hash, GetHandleId(hero), KEY_MECH )\r\n        elseif setCount == SET_MOON then\r\n            return udg_Set_Moon_Number[unitId]\r\n        elseif setCount == SET_NATURE then\r\n            return udg_Set_Nature_Number[unitId]\r\n        elseif setCount == SET_RING then\r\n            return udg_Set_Ring_Number[unitId]\r\n        elseif setCount == SET_RUNE then\r\n            return udg_Set_Rune_Number[unitId]\r\n        elseif setCount == SET_WEAPON then\r\n            return udg_Set_Weapon_Number[unitId]\r\n        endif\r\n        return 0\r\n    endfunction\r\n    \r\n    public function GetSetName takes integer setCount returns string\r\n        if setCount == SET_ALCHEMY then\r\n            return SET_NAME_ALCHEMY\r\n        elseif setCount == SET_BLOOD then\r\n            return SET_NAME_BLOOD\r\n        elseif setCount == SET_CRYSTAL then\r\n            return SET_NAME_CRYSTAL\r\n        elseif setCount == SET_MECH then\r\n            return SET_NAME_MECH\r\n        elseif setCount == SET_MOON then\r\n            return SET_NAME_MOON\r\n        elseif setCount == SET_NATURE then\r\n            return SET_NAME_NATURE\r\n        elseif setCount == SET_RING then\r\n            return SET_NAME_RING\r\n        elseif setCount == SET_RUNE then\r\n            return SET_NAME_RUNE\r\n        elseif setCount == SET_WEAPON then\r\n            return SET_NAME_WEAPON\r\n        endif\r\n        return \"\"\r\n    endfunction\r\n    \r\n    private function CheckItemType takes integer itemType, integer setType returns boolean\r\n        local integer i = 1\r\n        local integer iEnd = udg_DB_SetItems_Num[setType]\r\n        \r\n        loop\r\n            exitwhen i > iEnd\r\n            if itemType == DB_SetItems[setType][i] then\r\n                return true\r\n            endif\r\n            set i = i + 1\r\n        endloop\r\n        return false\r\n    endfunction\r\n    \r\n    private function CheckItem takes item t, integer setType returns boolean\r\n        /*local integer i = 1\r\n        local integer iEnd = udg_DB_SetItems_Num[setType]\r\n        local integer itemType = GetItemTypeId(t)\r\n        \r\n        loop\r\n            exitwhen i > iEnd\r\n            if itemType == DB_SetItems[setType][i] then\r\n                return true\r\n            endif\r\n            set i = i + 1\r\n        endloop*/\r\n        return CheckItemType(GetItemTypeId(t), setType)//false\r\n    endfunction\r\n    \r\n    function Mech_Logic takes item t returns boolean\r\n    \treturn CheckItem(t, 1)\r\n    endfunction\r\n    \r\n    function Weapon_Logic takes item t returns boolean\r\n        return CheckItem(t, 2)\r\n    endfunction\r\n    \r\n    function WeaponType_Logic takes integer itemType returns boolean\r\n        return CheckItemType(itemType, 2)\r\n    endfunction\r\n\r\n    function Ring_Logic takes item t returns boolean\r\n        return CheckItem(t, 3)\r\n    endfunction\r\n\r\n    function BloodLogic takes item t returns boolean\r\n        return CheckItem(t, 4)\r\n    endfunction\r\n\r\n    function RuneLogic takes item t returns boolean\r\n        return CheckItem(t, 5)\r\n    endfunction\r\n\r\n    function MoonLogic takes item t returns boolean\r\n        return CheckItem(t, 6)\r\n    endfunction\r\n\r\n    function NatureLogic takes item t returns boolean\r\n        return CheckItem(t, 7)\r\n    endfunction\r\n\r\n    function AlchemyLogic takes item t returns boolean\r\n        return CheckItem(t, 8)\r\n    endfunction\r\n    \r\n    function CristallLogic takes item t returns boolean\r\n        return CheckItem(t, 9)\r\n    endfunction\r\n\r\n    function Corrupted_Logic takes item t returns boolean\r\n        /*local integer i = 1\r\n        local integer iEnd = udg_Database_NumberItems[29]\r\n        local integer itemType = GetItemTypeId(t)\r\n        \r\n        loop\r\n            exitwhen i > iEnd\r\n            if itemType == udg_DB_Item_Destroyed[i] then\r\n                return true\r\n            endif\r\n            set i = i + 1\r\n        endloop*/\r\n        return TagSystem_CheckTag( GetItemTypeId(t), TAG_CORRUPTED )//false\r\n    endfunction\r\n    \r\n    public function CheckItemSet takes item checkedItem, integer setCount returns boolean\r\n        if setCount == SET_ALCHEMY then\r\n            return AlchemyLogic(checkedItem)\r\n        elseif setCount == SET_BLOOD then\r\n            return BloodLogic(checkedItem)\r\n        elseif setCount == SET_CRYSTAL then\r\n            return CristallLogic(checkedItem)\r\n        elseif setCount == SET_MECH then\r\n            return Mech_Logic(checkedItem)\r\n        elseif setCount == SET_MOON then\r\n            return MoonLogic(checkedItem)\r\n        elseif setCount == SET_NATURE then\r\n            return NatureLogic(checkedItem)\r\n        elseif setCount == SET_RING then\r\n            return Ring_Logic(checkedItem)\r\n        elseif setCount == SET_RUNE then\r\n            return RuneLogic(checkedItem)\r\n        elseif setCount == SET_WEAPON then\r\n            return Weapon_Logic(checkedItem)\r\n        endif\r\n\r\n        return false\r\n    endfunction\r\n    \r\n    public function IsActive takes unit hero, integer setCount returns boolean\r\n    \tlocal integer unitId = GetUnitUserData(hero)\r\n    \r\n        if setCount == SET_ALCHEMY then\r\n            return udg_logic[unitId + 10]\r\n        elseif setCount == SET_BLOOD then\r\n            return udg_logic[unitId + 14]\r\n        elseif setCount == SET_CRYSTAL then\r\n            return udg_logic[unitId + 80]\r\n        elseif setCount == SET_MECH then\r\n            return LoadInteger(udg_hash, GetHandleId(hero), KEY_MECH ) > 0\r\n        elseif setCount == SET_MOON then\r\n            return udg_logic[unitId + 18]\r\n        elseif setCount == SET_NATURE then\r\n            return udg_logic[unitId + 22]\r\n        elseif setCount == SET_RING then\r\n            return udg_logic[unitId + 62]\r\n        elseif setCount == SET_RUNE then\r\n            return udg_logic[unitId + 26]\r\n        elseif setCount == SET_WEAPON then\r\n            return udg_logic[unitId + 54]\r\n        endif\r\n\r\n        return false\r\n    endfunction\r\n    \r\n    //=================================================================\r\n    public function IsItemTypeFromSet takes integer itemType returns boolean\r\n    \treturn LoadBoolean( SetHash, itemType, IS_FROM_SET )\r\n    endfunction\r\n    \r\n    private function Set takes integer itemType returns nothing\r\n    \tcall SaveBoolean( SetHash, itemType, IS_FROM_SET, true )\r\n    endfunction\r\n    \r\n    private function SetIfItemTypeFromSet takes nothing returns nothing\r\n\t\tlocal integer i\r\n\t\tlocal integer iMax\r\n\t\tlocal integer k\r\n\t\tlocal integer kMax\r\n\t\t\r\n\t\tset i = 1\r\n\t\tset iMax = SETS_COUNT\r\n\t\tloop\r\n\t\t\texitwhen i > iMax\r\n\t\t\tset k = 1\r\n\t\t\tset kMax = udg_DB_SetItems_Num[i]\r\n\t\t\tloop\r\n\t\t\t\texitwhen k > kMax\r\n\t\t\t\tcall Set(DB_SetItems[i][k])\r\n\t\t\t\tset k = k + 1\r\n\t\t\tendloop\r\n\t\t\tset i = i + 1\r\n\t\tendloop\r\n\t\t\r\n\t\tcall Set('I030')\r\n\t\tcall Set('I03I')\r\n\tendfunction\r\n\t\r\n\tprivate function delay takes nothing returns nothing\r\n\t\tcall SetIfItemTypeFromSet()\r\n\tendfunction\r\n    \r\n    private function init takes nothing returns nothing\r\n\t\tcall TimerStart( CreateTimer(), 2, false, function delay )\r\n\tendfunction\r\n    \r\nendlibrary",
  "Events": [],
  "LocalVariables": [],
  "Conditions": [],
  "Actions": []
}