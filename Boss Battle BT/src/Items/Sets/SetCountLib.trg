{
  "Id": 50332852,
  "Comment": "",
  "IsScript": true,
  "RunOnMapInit": false,
  "Script": "library SetCount\r\n\r\n    globals\r\n        constant integer SET_MECH = 1\r\n        constant integer SET_WEAPON = 2\r\n        constant integer SET_RING = 3\r\n        constant integer SET_BLOOD = 4\r\n        constant integer SET_RUNE = 5\r\n        constant integer SET_MOON = 6\r\n        constant integer SET_NATURE = 7\r\n        constant integer SET_ALCHEMY = 8\r\n        constant integer SET_CRYSTAL = 9\r\n           \r\n        constant string SET_NAME_MECH = \"|cffb18904Mech|r\"\r\n        constant string SET_NAME_WEAPON = \"|cff2d9995Weapon|r\"\r\n        constant string SET_NAME_RING = \"|cff9001fdRing|r\"\r\n        constant string SET_NAME_BLOOD = \"|cffb40431Blood|r\"\r\n        constant string SET_NAME_RUNE = \"|cff848484Rune|r\"\r\n        constant string SET_NAME_MOON = \"|cff5858faMoon|r\"\r\n        constant string SET_NAME_NATURE = \"|cff7cfc00Nature|r\"\r\n        constant string SET_NAME_ALCHEMY = \"|cfffe9a2eAlchemy|r\"\r\n        constant string SET_NAME_CRYSTAL = \"|cff00cceeCrystal|r\"\r\n        \r\n        private constant integer KEY_MECH = StringHash( \"mech\" )\r\n        private constant integer KEY_WEAPON = StringHash( \"weap\" )\r\n        private constant integer KEY_RING = StringHash( \"ring\" )\r\n        private constant integer KEY_BLOOD = StringHash( \"blood\" )\r\n        private constant integer KEY_RUNE = StringHash( \"rune\" )\r\n        private constant integer KEY_MOON = StringHash( \"moon\" )\r\n        private constant integer KEY_NATURE = StringHash( \"natu\" )\r\n        private constant integer KEY_ALCHEMY = StringHash( \"alch\" )\r\n        private constant integer KEY_CRYSTAL = StringHash( \"crys\" )\r\n        \r\n        real Event_MechAdded_Real\r\n        integer Event_MechAdded_AddedMechs\r\n        integer Event_MechAdded_NewCount\r\n        integer Event_MechAdded_OldCount\r\n        unit Event_MechAdded_Hero\r\n    endglobals\r\n\r\n    private function SetMech takes unit u, integer addedMechs, integer index returns integer\r\n        local integer unitIndex = GetHandleId(u)\r\n        local integer currentMech = LoadInteger(udg_hash, unitIndex, KEY_MECH )\r\n        local integer oldMech = currentMech\r\n        \r\n        set currentMech = addedMechs\r\n        \r\n        call SaveInteger(udg_hash, unitIndex, KEY_MECH, currentMech )\r\n        call MultiSetValue( udg_multi, ( 3 * udg_Multiboard_Position[index] ) + 1, 15, I2S( currentMech ) )\r\n        \r\n        set Event_MechAdded_Hero = u\r\n        set Event_MechAdded_OldCount = oldMech\r\n        set Event_MechAdded_AddedMechs = currentMech - oldMech\r\n        set Event_MechAdded_NewCount = currentMech\r\n        set Event_MechAdded_Real = 0.00\r\n        set Event_MechAdded_Real = 1.00\r\n        set Event_MechAdded_Real = 0.00\r\n        \r\n        set u = null\r\n        return currentMech\r\n    endfunction\r\n    \r\n    public function AddPiece takes unit hero, integer setCount, integer numberToAdd returns nothing\r\n        local integer unitId = GetUnitUserData(hero)\r\n    \r\n        if setCount == SET_ALCHEMY then\r\n            set udg_Set_Alchemy_Number[unitId] = udg_Set_Alchemy_Number[unitId] + numberToAdd\r\n        elseif setCount == SET_BLOOD then\r\n            set udg_Set_Blood_Number[unitId] = udg_Set_Blood_Number[unitId] + numberToAdd\r\n        elseif setCount == SET_CRYSTAL then\r\n            set udg_Set_Cristall_Number[unitId] = udg_Set_Cristall_Number[unitId] + numberToAdd\r\n        elseif setCount == SET_MECH then\r\n            call SetMech(hero, LoadInteger(udg_hash, GetHandleId(hero), KEY_MECH ) + numberToAdd, unitId)\r\n        elseif setCount == SET_MOON then\r\n            set udg_Set_Moon_Number[unitId] = udg_Set_Moon_Number[unitId] + numberToAdd\r\n        elseif setCount == SET_NATURE then\r\n            set udg_Set_Nature_Number[unitId] = udg_Set_Nature_Number[unitId] + numberToAdd\r\n        elseif setCount == SET_RING then\r\n            set udg_Set_Ring_Number[unitId] = udg_Set_Ring_Number[unitId] + numberToAdd\r\n        elseif setCount == SET_RUNE then\r\n            set udg_Set_Rune_Number[unitId] = udg_Set_Rune_Number[unitId] + numberToAdd\r\n        elseif setCount == SET_WEAPON then\r\n            set udg_Set_Weapon_Number[unitId] = udg_Set_Weapon_Number[unitId] + numberToAdd\r\n        endif\r\n        \r\n        set hero = null\r\n    endfunction\r\n    \r\n    public function SetPiece takes unit hero, integer setCount, integer numberToSet returns nothing\r\n        local integer unitId = GetUnitUserData(hero)\r\n    \r\n        if setCount == SET_ALCHEMY then\r\n            set udg_Set_Alchemy_Number[unitId] = numberToSet\r\n        elseif setCount == SET_BLOOD then\r\n            set udg_Set_Blood_Number[unitId] = numberToSet\r\n        elseif setCount == SET_CRYSTAL then\r\n            set udg_Set_Cristall_Number[unitId] = numberToSet\r\n        elseif setCount == SET_MECH then\r\n            call SetMech(hero, numberToSet, unitId)\r\n        elseif setCount == SET_MOON then\r\n            set udg_Set_Moon_Number[unitId] = numberToSet\r\n        elseif setCount == SET_NATURE then\r\n            set udg_Set_Nature_Number[unitId] = numberToSet\r\n        elseif setCount == SET_RING then\r\n            set udg_Set_Ring_Number[unitId] = numberToSet\r\n        elseif setCount == SET_RUNE then\r\n            set udg_Set_Rune_Number[unitId] = numberToSet\r\n        elseif setCount == SET_WEAPON then\r\n            set udg_Set_Weapon_Number[unitId] = numberToSet\r\n        endif\r\n        \r\n        set hero = null\r\n    endfunction\r\n    \r\n    public function GetPieces takes unit hero, integer setCount returns integer\r\n        local integer count = 0\r\n        local integer unitId = GetUnitUserData(hero)\r\n    \r\n        if setCount == SET_ALCHEMY then\r\n            set count = udg_Set_Alchemy_Number[unitId]\r\n        elseif setCount == SET_BLOOD then\r\n            set count = udg_Set_Blood_Number[unitId]\r\n        elseif setCount == SET_CRYSTAL then\r\n            set count = udg_Set_Cristall_Number[unitId]\r\n        elseif setCount == SET_MECH then\r\n            set count = LoadInteger(udg_hash, GetHandleId(hero), KEY_MECH )\r\n        elseif setCount == SET_MOON then\r\n            set count = udg_Set_Moon_Number[unitId]\r\n        elseif setCount == SET_NATURE then\r\n            set count = udg_Set_Nature_Number[unitId]\r\n        elseif setCount == SET_RING then\r\n            set count = udg_Set_Ring_Number[unitId]\r\n        elseif setCount == SET_RUNE then\r\n            set count = udg_Set_Rune_Number[unitId]\r\n        elseif setCount == SET_WEAPON then\r\n            set count = udg_Set_Weapon_Number[unitId]\r\n        endif\r\n        \r\n        set hero = null\r\n        return count\r\n    endfunction\r\n    \r\n    public function GetSetName takes integer setCount returns string\r\n        if setCount == SET_ALCHEMY then\r\n            return SET_NAME_ALCHEMY\r\n        elseif setCount == SET_BLOOD then\r\n            return SET_NAME_BLOOD\r\n        elseif setCount == SET_CRYSTAL then\r\n            return SET_NAME_CRYSTAL\r\n        elseif setCount == SET_MECH then\r\n            return SET_NAME_MECH\r\n        elseif setCount == SET_MOON then\r\n            return SET_NAME_MOON\r\n        elseif setCount == SET_NATURE then\r\n            return SET_NAME_NATURE\r\n        elseif setCount == SET_RING then\r\n            return SET_NAME_RING\r\n        elseif setCount == SET_RUNE then\r\n            return SET_NAME_RUNE\r\n        elseif setCount == SET_WEAPON then\r\n            return SET_NAME_WEAPON\r\n        endif\r\n        return \"\"\r\n    endfunction\r\n    \r\n    function Mech_Logic takes item t returns boolean\r\n        local integer cyclA = 1\r\n        local integer cyclAEnd = udg_DB_SetItems_Num[1]\r\n        local boolean l = false\r\n        \r\n        loop\r\n            exitwhen cyclA > cyclAEnd\r\n            if GetItemTypeId(t) == DB_SetItems[1][cyclA] then\r\n                set l = true\r\n                set cyclA = cyclAEnd\r\n            endif\r\n            set cyclA = cyclA + 1\r\n        endloop\r\n        set t = null\r\n        return l\r\n    endfunction\r\n\r\n    function CristallLogic takes item t returns boolean\r\n        local integer cyclA = 1\r\n        local integer cyclAEnd = udg_DB_SetItems_Num[9]\r\n        local boolean l = false\r\n        \r\n        loop\r\n            exitwhen cyclA > cyclAEnd\r\n            if GetItemTypeId(t) == DB_SetItems[9][cyclA] then\r\n                set l = true\r\n                set cyclA = cyclAEnd\r\n            endif\r\n            set cyclA = cyclA + 1\r\n        endloop\r\n        set t = null\r\n        return l\r\n    endfunction\r\n\r\n    function BloodLogic takes item t returns boolean\r\n        local integer cyclA = 1\r\n        local integer cyclAEnd = udg_DB_SetItems_Num[4]\r\n        local boolean l = false\r\n        \r\n        loop\r\n            exitwhen cyclA > cyclAEnd\r\n            if GetItemTypeId(t) == DB_SetItems[4][cyclA] then\r\n                set l = true\r\n                set cyclA = cyclAEnd\r\n            endif\r\n            set cyclA = cyclA + 1\r\n        endloop\r\n        set t = null\r\n        return l\r\n    endfunction\r\n\r\n    function RuneLogic takes item t returns boolean\r\n        local integer cyclA = 1\r\n        local integer cyclAEnd = udg_DB_SetItems_Num[5]\r\n        local boolean l = false\r\n        \r\n        loop\r\n            exitwhen cyclA > cyclAEnd\r\n            if GetItemTypeId(t) == DB_SetItems[5][cyclA] then\r\n                set l = true\r\n                set cyclA = cyclAEnd\r\n            endif\r\n            set cyclA = cyclA + 1\r\n        endloop\r\n        set t = null\r\n        return l\r\n    endfunction\r\n\r\n    function MoonLogic takes item t returns boolean\r\n        local integer cyclA = 1\r\n        local integer cyclAEnd = udg_DB_SetItems_Num[6]\r\n        local boolean l = false\r\n        \r\n        loop\r\n            exitwhen cyclA > cyclAEnd\r\n            if GetItemTypeId(t) == DB_SetItems[6][cyclA] then\r\n                set l = true\r\n                set cyclA = cyclAEnd\r\n            endif\r\n            set cyclA = cyclA + 1\r\n        endloop\r\n        set t = null\r\n        return l\r\n    endfunction\r\n\r\n    function NatureLogic takes item t returns boolean\r\n        local integer cyclA = 1\r\n        local integer cyclAEnd = udg_DB_SetItems_Num[7]\r\n        local boolean l = false\r\n        \r\n        loop\r\n            exitwhen cyclA > cyclAEnd\r\n            if GetItemTypeId(t) == DB_SetItems[7][cyclA] then\r\n                set l = true\r\n                set cyclA = cyclAEnd\r\n            endif\r\n            set cyclA = cyclA + 1\r\n        endloop\r\n        set t = null\r\n        return l\r\n    endfunction\r\n\r\n    function AlchemyLogic takes item t returns boolean\r\n        local integer cyclA = 1\r\n        local integer cyclAEnd = udg_DB_SetItems_Num[8]\r\n        local boolean l = false\r\n        \r\n        loop\r\n            exitwhen cyclA > cyclAEnd\r\n            if GetItemTypeId(t) == DB_SetItems[8][cyclA] then\r\n                set l = true\r\n                set cyclA = cyclAEnd\r\n            endif\r\n            set cyclA = cyclA + 1\r\n        endloop\r\n        set t = null\r\n        return l\r\n    endfunction\r\n\r\n    function Weapon_Logic takes item t returns boolean\r\n        local integer cyclA = 1\r\n        local integer cyclAEnd = udg_DB_SetItems_Num[2]\r\n        local boolean l = false\r\n        \r\n        loop\r\n            exitwhen cyclA > cyclAEnd\r\n            if GetItemTypeId(t) == DB_SetItems[2][cyclA] then\r\n                set l = true\r\n                set cyclA = cyclAEnd\r\n            endif\r\n            set cyclA = cyclA + 1\r\n        endloop\r\n        set t = null\r\n        return l\r\n    endfunction\r\n\r\n    function Ring_Logic takes item t returns boolean\r\n        local integer cyclA = 1\r\n        local integer cyclAEnd = udg_DB_SetItems_Num[3]\r\n        local boolean l = false\r\n        \r\n        loop\r\n            exitwhen cyclA > cyclAEnd\r\n            if GetItemTypeId(t) == DB_SetItems[3][cyclA] then\r\n                set l = true\r\n                set cyclA = cyclAEnd\r\n            endif\r\n            set cyclA = cyclA + 1\r\n        endloop\r\n        set t = null\r\n        return l\r\n    endfunction\r\n    \r\n    public function CheckItemSet takes item checkedItem, integer setCount returns boolean\r\n        local boolean isCheckTrue = false\r\n        if setCount == SET_ALCHEMY then\r\n            set isCheckTrue = AlchemyLogic(checkedItem)\r\n        elseif setCount == SET_BLOOD then\r\n            set isCheckTrue = BloodLogic(checkedItem)\r\n        elseif setCount == SET_CRYSTAL then\r\n            set isCheckTrue = CristallLogic(checkedItem)\r\n        elseif setCount == SET_MECH then\r\n            set isCheckTrue = Mech_Logic(checkedItem)\r\n        elseif setCount == SET_MOON then\r\n            set isCheckTrue = MoonLogic(checkedItem)\r\n        elseif setCount == SET_NATURE then\r\n            set isCheckTrue = NatureLogic(checkedItem)\r\n        elseif setCount == SET_RING then\r\n            set isCheckTrue = Ring_Logic(checkedItem)\r\n        elseif setCount == SET_RUNE then\r\n            set isCheckTrue = RuneLogic(checkedItem)\r\n        elseif setCount == SET_WEAPON then\r\n            set isCheckTrue = Weapon_Logic(checkedItem)\r\n        endif\r\n        set checkedItem = null\r\n        return isCheckTrue\r\n    endfunction\r\nendlibrary\r\n\r\n\r\n",
  "Events": [],
  "LocalVariables": [],
  "Conditions": [],
  "Actions": []
}