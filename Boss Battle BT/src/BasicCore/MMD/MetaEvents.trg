{
  "Id": 50332188,
  "Comment": "/// Interface:\r\n///   void FlagPlayer(player, flag_constant)\r\n///   void DefineValue(name, type_constant, goal_constant, suggest_constant)\r\n///   void UpdateValueInt(name, player, operation_constant, value)\r\n///   void UpdateValueReal(name, player, operation_constant, value)\r\n///   void UpdateValueString(name, player, value)\r\n///   void DefineEvent0(name, format)\r\n///   void DefineEvent1(name, format, argName1)\r\n///   void DefineEvent2(name, format, argName1, argName2)\r\n///   void DefineEvent3(name, format, argName1, argName2, argName3)\r\n///   void LogEvent0(name)\r\n///   void LogEvent1(name, arg0)\r\n///   void LogEvent2(name, arg0, arg1)\r\n///   void LogEvent3(name, arg0, arg1, arg2)\r\n///   void LogCustom(unique_identifier, data)\r\n///   void RaiseGuard(reason)",
  "IsScript": true,
  "RunOnMapInit": false,
  "Script": "library MetaEvents initializer init requires MMD\r\n\tglobals\r\n\t\tprivate integer execution_count\r\n\t\tprivate integer elapsed_seconds\r\n\tendglobals\r\n\r\n\tprivate function action_onHeroSkilled takes nothing returns nothing\r\n\t\tlocal unit u = GetTriggerUnit()\r\n        local integer i = GetUnitUserData(u)\r\n\t\r\n        if IsUnitInGroup(u, udg_heroinfo) and i > 0 and i < 5 then\r\n            call MMD_LogEvent2(\"hero_skill_\" + I2S(i),GetUnitName(u),GetAbilityName(GetLearnedSkill()))\r\n        endif\r\n\t\t\r\n\t\tset u = null\r\n\tendfunction\r\n    \r\n    private function action_onHeroLevelUp takes nothing returns nothing\r\n\t\tlocal unit u = GetLevelingUnit()\r\n        local integer i = GetUnitUserData(u)\r\n\t\r\n        if IsUnitInGroup(u, udg_heroinfo) and i > 0 and i < 5 then\r\n            call MMD_LogEvent2(\"hero_level_\" + I2S(i),GetUnitName(u),I2S(GetUnitLevel(u)) )\r\n        endif\r\n\t\t\r\n\t\tset u = null\r\n\tendfunction\r\n\r\n\tprivate function action_increaseElapsedSeconds takes nothing returns nothing\r\n\t\tset elapsed_seconds = elapsed_seconds + 1\r\n\tendfunction\r\n\t\r\n\t//DefineEvent2(name, format, argName1, argName2)\r\n\tprivate function init2 takes nothing returns nothing\r\n        local trigger onHeroAbilityLearned = CreateTrigger()\r\n        local trigger secondsPeriodic = CreateTrigger()\r\n        local trigger OnLevelUp = CreateTrigger()\r\n    \r\n\t\tlocal integer i\r\n        \r\n        call MMD_DefineEvent0(\"boss_kill\",\"{0}\")\r\n        \r\n        call MMD_DefineValue(\"hero\",MMD_TYPE_STRING,MMD_GOAL_NONE,MMD_SUGGEST_NONE)\r\n        call MMD_DefineValue(\"bosses_killed\",  MMD_TYPE_INT, MMD_GOAL_NONE, MMD_SUGGEST_NONE)\r\n        call MMD_DefineValue(\"difficulty\", MMD_TYPE_STRING, MMD_GOAL_NONE, MMD_SUGGEST_NONE)\r\n        set i = 0\r\n        loop\r\n            exitwhen i > 3\r\n            call MMD_UpdateValueString(\"hero\",Player(i),\"none\")\r\n            call MMD_DefineEvent1(\"used_tome_of_oblivion_\" + I2S(i+1),\"{0}\",\"Hero\")\r\n            call MMD_DefineEvent2(\"hero_skill_\"+ I2S(i+1),\"{0} {1}\",\"Hero\",\"Learned Skill\")\r\n            call MMD_DefineEvent2(\"hero_level_\"+ I2S(i+1),\"{0} {1}\",\"Hero\",\"Hero's level\")\r\n            call MMD_DefineEvent2(\"aspect_\"+ I2S(i+1),\"{0} {1}\",\"Hero\",\"Aspect\")\r\n            set i = i + 1\r\n        endloop\r\n        \r\n        call TriggerRegisterAnyUnitEventBJ(onHeroAbilityLearned,EVENT_PLAYER_HERO_SKILL)\r\n\t\tcall TriggerAddAction(onHeroAbilityLearned,function action_onHeroSkilled)\t\r\n        \r\n        call TriggerRegisterTimerEvent(secondsPeriodic,1,true)\r\n\t\tcall TriggerAddAction(secondsPeriodic,function action_increaseElapsedSeconds)\t\r\n\t\t\r\n        call TriggerRegisterAnyUnitEventBJ(OnLevelUp,EVENT_PLAYER_HERO_LEVEL)\r\n\t\tcall TriggerAddAction(OnLevelUp,function action_onHeroLevelUp)\r\n        \r\n        set onHeroAbilityLearned = null\r\n        set secondsPeriodic = null\r\n        set OnLevelUp = null\r\n\tendfunction\r\n\t\r\n\tprivate function init takes nothing returns nothing\r\n\t\tlocal trigger delay = CreateTrigger()\r\n\r\n\t\tset execution_count = 1\r\n\t\tset elapsed_seconds = 0\r\n\r\n\t\tcall TriggerRegisterTimerEvent(delay,1.,false)\r\n\t\tcall TriggerAddAction(delay,function init2)\r\n\r\n        set delay = null\r\n\tendfunction\r\n\r\nendlibrary",
  "Events": [],
  "LocalVariables": [],
  "Conditions": [],
  "Actions": []
}