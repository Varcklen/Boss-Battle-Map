{
  "Id": 50333511,
  "Comment": "",
  "IsScript": true,
  "RunOnMapInit": false,
  "Script": "scope Banshee2 initializer init\r\n\r\n    globals\r\n        private constant integer ID_BOSS = 'n03M'\r\n    \r\n        private constant integer HEALTH_CHECK_FIRST = 75\r\n        private constant integer HEALTH_CHECK_SECOND = 50\r\n        private constant integer HEALTH_CHECK_THIRD = 25\r\n        private constant integer HEALTH_LOCUST = 30\r\n        private constant integer FIND_AREA = 1200\r\n        private constant integer TIME_LIMIT = 60\r\n        private constant real CONSUME_HEALTH = 0.015\r\n        private constant real HEALTH_TO_LEAVE = 0.4\r\n        \r\n        private constant real TICK = 0.5\r\n        private constant real TICK_CHECK = 1\r\n        \r\n        private constant string ANIMATION = \"Abilities\\\\Spells\\\\Items\\\\TomeOfRetraining\\\\TomeOfRetrainingCaster.mdl\"\r\n        private constant string APPEAR = \"Abilities\\\\Spells\\\\Orc\\\\FeralSpirit\\\\feralspirittarget.mdl\"\r\n        \r\n        trigger Banshi2Second = null\r\n        trigger Banshi2Third = null\r\n\t\tprivate unit temp_Unit = null\r\n    endglobals\r\n    \r\n    private function IsCount takes integer healthCheck returns boolean\r\n        if GetUnitTypeId(udg_DamageEventTarget) != ID_BOSS then\r\n            return false\r\n        elseif GetUnitLifePercent(udg_DamageEventTarget) > healthCheck then\r\n            return false\r\n        elseif IsUnitVisible( udg_DamageEventTarget, Player(PLAYER_NEUTRAL_AGGRESSIVE)) == false then\r\n            return false\r\n        endif\r\n        return true\r\n    endfunction\r\n\r\n    private function FirstCount takes nothing returns boolean\r\n        return IsCount(HEALTH_CHECK_FIRST)\r\n    endfunction\r\n    \r\n    private function SecondCount takes nothing returns boolean\r\n        return IsCount(HEALTH_CHECK_SECOND)\r\n    endfunction\r\n    \r\n    private function ThirdCount takes nothing returns boolean\r\n        return IsCount(HEALTH_CHECK_THIRD)\r\n    endfunction\r\n\r\n    private function Banshi2Cast takes nothing returns nothing\r\n        local integer id = GetHandleId( GetExpiredTimer() )\r\n        local unit boss = LoadUnitHandle( udg_hash, id, StringHash( \"bswf\" ) )\r\n        local unit target = LoadUnitHandle( udg_hash, id, StringHash( \"bswft\" ) )\r\n        local integer time = LoadInteger( udg_hash, id, StringHash( \"bswf\" ) ) - 1\r\n        \r\n        if IsUnitDead(boss) or not( udg_fightmod[0] ) then\r\n            call berserk( target, -1 )\r\n            call DestroyTimer( GetExpiredTimer() )\r\n        else\r\n            call SaveInteger( udg_hash, id, StringHash( \"bswf\" ), time )\r\n            call SetUnitState( target, UNIT_STATE_LIFE, RMaxBJ(0,GetUnitState( target, UNIT_STATE_LIFE) - ( GetUnitState( target, UNIT_STATE_MAX_LIFE) * CONSUME_HEALTH ) ) )\r\n            if time <= 0 or GetUnitState( target, UNIT_STATE_LIFE) < GetUnitState( target, UNIT_STATE_MAX_LIFE) * HEALTH_TO_LEAVE then\r\n                call SetUnitPosition( boss, GetRectCenterX(udg_Boss_Rect), GetRectCenterY(udg_Boss_Rect) ) \r\n                call ShowUnit( boss, true )\r\n                call PlaySpecialEffect(APPEAR, boss)\r\n                call aggro( boss ) \r\n                call berserk( target, -1 )\r\n                call SaveBoolean(udg_hash, GetHandleId(boss), StringHash(\"banshee_in_posses\"), false )\r\n                if GetUnitLifePercent(boss) <= HEALTH_LOCUST then\r\n                    call UnitAddAbility( boss, 'A13R' )\r\n                    call IssueImmediateOrder( boss, \"locustswarm\" )\r\n                endif\r\n                call PlaySpecialEffect(ANIMATION, boss)\r\n                call PlaySpecialEffect(ANIMATION, target)\r\n                call DestroyTimer( GetExpiredTimer() )\r\n            endif\r\n        endif\r\n        \r\n        set boss = null\r\n    endfunction\r\n\r\n\tprivate function GetTarget takes unit boss returns unit\r\n\t\tlocal group aliveHeroes = DeathSystem_GetAliveHeroGroupCopy()\r\n\t\tlocal group possesedHeroes = LoadGroupHandle(udg_hash, GetHandleId(boss), StringHash(\"banshee_possessed_heroes\") )\r\n\t\tlocal group possibleHeroes = CreateGroup()\r\n\t\tlocal unit u\r\n\t\tlocal real maxDamage\r\n\t\tlocal location bossLoc = GetUnitLoc(boss)\r\n\t\tlocal location unitLoc\r\n\t\tlocal integer index\r\n\t\tlocal real damageFight\r\n\t\t\r\n\t\tif possesedHeroes == null then\r\n\t\t\tset possesedHeroes = CreateGroup()\r\n\t\t\tcall SaveGroupHandle(udg_hash, GetHandleId(boss), StringHash(\"banshee_possessed_heroes\"), possesedHeroes )\r\n\t\tendif\r\n\t\t\r\n\t\tloop\r\n            set u = FirstOfGroup(aliveHeroes)\r\n            exitwhen u == null\r\n            if IsUnitInGroup( u, possesedHeroes) == false then\r\n                call GroupAddUnit(possibleHeroes, u)\r\n            endif\r\n            call GroupRemoveUnit(aliveHeroes,u)\r\n        endloop\r\n        \r\n        if IsUnitGroupEmptyBJ(possibleHeroes) then\r\n        \tcall GroupClear(possesedHeroes)\r\n        \tcall DestroyGroup(possibleHeroes)\r\n        \tset possibleHeroes = DeathSystem_GetAliveHeroGroupCopy()\r\n        endif\r\n        \r\n        set temp_Unit = null\r\n        set maxDamage = 0\r\n        loop\r\n            set u = FirstOfGroup(possibleHeroes)\r\n            exitwhen u == null\r\n            set unitLoc = GetUnitLoc(u)\r\n            set index = CorrectPlayer(u)\r\n            set damageFight = udg_DamageFight[index]\r\n            if DistanceBetweenPoints(unitLoc, bossLoc) <= FIND_AREA and maxDamage <= damageFight then\r\n            \tset maxDamage = damageFight\r\n                set temp_Unit = u\r\n            endif\r\n            call RemoveLocation(unitLoc)\r\n            call GroupRemoveUnit(possibleHeroes,u)\r\n        endloop\r\n        \r\n        if temp_Unit != null then\r\n        \tcall GroupAddUnit(possesedHeroes, temp_Unit)\r\n        endif\r\n\t\t\r\n\t\tcall DestroyGroup(aliveHeroes)\r\n\t\tcall DestroyGroup(possibleHeroes)\r\n\t\tcall RemoveLocation(bossLoc)\r\n\t\tset possibleHeroes = null\r\n\t\tset aliveHeroes = null\r\n\t\tset possesedHeroes = null\r\n\t\tset u = null\r\n\t\tset bossLoc = null\r\n\t\tset unitLoc = null\r\n\t\treturn temp_Unit\r\n\tendfunction\r\n\t\r\n\tprivate function CheckTarget takes unit boss returns boolean\r\n        local unit target = GetTarget(boss)//randomtarget( boss, FIND_AREA, \"enemy\", \"hero\", \"\", \"\", \"\" )\r\n        local integer timeLimit\r\n        local integer id\r\n        local boolean inPosses = LoadBoolean(udg_hash, GetHandleId(boss), StringHash(\"banshee_in_posses\") )\r\n               \r\n        if target != null and inPosses == false then\r\n            call DisableTrigger( GetTriggeringTrigger() )\r\n            call PlaySpecialEffect(ANIMATION, boss)\r\n            call PlaySpecialEffect(ANIMATION, target)\r\n\r\n            call ShowUnit( boss, false )\r\n            call SetUnitPosition( boss, GetRectCenterX( gg_rct_HeroesTp ), GetRectCenterY( gg_rct_HeroesTp ) ) \r\n            call IssueImmediateOrder( boss, \"stop\" )\r\n\r\n\t\t\tset timeLimit = R2I(TIME_LIMIT / TICK)\r\n\r\n\t\t\tcall SaveBoolean(udg_hash, GetHandleId(boss), StringHash(\"banshee_in_posses\"), true )\r\n\r\n            set id = InvokeTimerWithUnit(boss, \"bswf\", TICK, true, function Banshi2Cast)\r\n            call SaveUnitHandle( udg_hash, id, StringHash( \"bswft\" ), target )\r\n            call SaveInteger( udg_hash, id, StringHash( \"bswf\" ), timeLimit )\r\n            \r\n            call berserk( target, 1 )\r\n            \r\n            set target = null\r\n        \treturn true\r\n        endif\r\n        \r\n        set target = null\r\n        return false\r\n\tendfunction\r\n\r\n\tprivate function TickCheck takes nothing returns nothing\r\n\t\tlocal integer id = GetHandleId( GetExpiredTimer() )\r\n\t\tlocal unit boss = LoadUnitHandle( udg_hash, id, StringHash( \"banshee_check\" ) )\r\n\t\tlocal boolean isFound\r\n\r\n\t\tif IsUnitDead(boss) or udg_fightmod[0] == false then\r\n            call DestroyTimer( GetExpiredTimer() )\r\n        else\r\n        \tset isFound = CheckTarget(boss)\r\n        \tif isFound then\r\n        \t\tcall DestroyTimer( GetExpiredTimer() )\r\n        \tendif\r\n        endif\r\n\r\n\t\tset boss = null\r\n\tendfunction\r\n\t\r\n    private function action takes nothing returns nothing\r\n        local unit boss = udg_DamageEventTarget\r\n        local boolean isFound\r\n\r\n\t\tset isFound = CheckTarget(boss)\r\n\t\t\r\n\t\tif isFound == false then\r\n\t\t\tcall InvokeTimerWithUnit( boss, \"banshee_check\", TICK_CHECK, true, function TickCheck )\r\n\t\tendif\r\n\r\n        set boss = null\r\n    endfunction\r\n\r\n    //===========================================================================\r\n    private function init takes nothing returns nothing\r\n        set gg_trg_Banshi2 = CreateEventTrigger( \"udg_AfterDamageEvent\", function action, function FirstCount )\r\n        call DisableTrigger( gg_trg_Banshi2 )\r\n        \r\n        set Banshi2Second = CreateEventTrigger( \"udg_AfterDamageEvent\", function action, function SecondCount )\r\n        call DisableTrigger( Banshi2Second )\r\n    \r\n        set Banshi2Third = CreateEventTrigger( \"udg_AfterDamageEvent\", function action, function ThirdCount )\r\n        call DisableTrigger( Banshi2Third )\r\n    endfunction\r\n\r\nendscope\r\n\r\n",
  "Events": [],
  "LocalVariables": [],
  "Conditions": [],
  "Actions": []
}