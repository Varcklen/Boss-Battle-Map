{
  "Id": 50333534,
  "Comment": "",
  "IsScript": true,
  "RunOnMapInit": false,
  "Script": "function Trig_Crab1_Conditions takes nothing returns boolean\r\n    return GetUnitTypeId( udg_DamageEventTarget ) == 'n009'\r\nendfunction\r\n\r\nfunction Crab1Buff takes nothing returns nothing\r\n    local integer id = GetHandleId( GetExpiredTimer( ) )\r\n    \r\n    call UnitRemoveAbility( LoadUnitHandle( udg_hash, id, StringHash( \"bscr2\" ) ), 'A0KJ' )\r\n    call FlushChildHashtable( udg_hash, id )\r\nendfunction\r\n\r\nfunction Crab1End takes nothing returns nothing\r\n    local integer id = GetHandleId( GetExpiredTimer() )\r\n    local unit boss = LoadUnitHandle( udg_hash, id, StringHash( \"bscr1u\" ) )\r\n    local unit dummy = LoadUnitHandle( udg_hash, id, StringHash( \"bscr1d\" ) )\r\n    local group g = CreateGroup()\r\n    local unit u\r\n    local integer id1\r\n    \r\n    call DestroyEffect( AddSpecialEffect( \"Objects\\\\Spawnmodels\\\\Naga\\\\NagaDeath\\\\NagaDeath.mdl\", GetUnitX( dummy ), GetUnitY( dummy ) + 100 ) )\r\n    call DestroyEffect( AddSpecialEffect( \"Objects\\\\Spawnmodels\\\\Naga\\\\NagaDeath\\\\NagaDeath.mdl\", GetUnitX( dummy ) + 140, GetUnitY( dummy ) - 140 ) )\r\n    call DestroyEffect( AddSpecialEffect( \"Objects\\\\Spawnmodels\\\\Naga\\\\NagaDeath\\\\NagaDeath.mdl\", GetUnitX( dummy ) - 140, GetUnitY( dummy ) - 140 ) )\r\n    \r\n    call GroupEnumUnitsInRange( g, GetUnitX( dummy ), GetUnitY( dummy ), 300, null )\r\n    loop\r\n        set u = FirstOfGroup(g)\r\n        exitwhen u == null\r\n        if unitst( u, boss, \"all\" ) then\r\n            call UnitStun(boss, u, 3 )\r\n            call UnitDamageTarget( boss, u, 500, true, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_MAGIC, WEAPON_TYPE_WHOKNOWS)\r\n            \r\n            call UnitAddAbility( u, 'A0KJ' )\r\n            \r\n            set id1 = GetHandleId( u )\r\n            if LoadTimerHandle( udg_hash, id1, StringHash( \"bscr2\" ) ) == null  then\r\n                call SaveTimerHandle( udg_hash, id1, StringHash( \"bscr2\" ), CreateTimer() )\r\n            endif\r\n            set id1 = GetHandleId( LoadTimerHandle( udg_hash, id1, StringHash( \"bscr2\" ) ) ) \r\n            call SaveUnitHandle( udg_hash, id1, StringHash( \"bscr2\" ), u )\r\n            call TimerStart( LoadTimerHandle( udg_hash, GetHandleId( u ), StringHash( \"bscr2\" ) ), 10, true, function Crab1Buff )\r\n        endif\r\n        call GroupRemoveUnit(g,u)\r\n    endloop\r\n    \r\n    call RemoveUnit( dummy )\r\n    \r\n    call FlushChildHashtable( udg_hash, id )\r\n    call DestroyGroup( g )\r\n    set u = null\r\n    set g = null\r\n    set boss = null\r\n    set dummy = null\r\nendfunction \r\n\r\nfunction Crab1Cast takes nothing returns nothing\r\n    local integer id = GetHandleId( GetExpiredTimer() )\r\n    local integer id1\r\n    local unit boss = LoadUnitHandle( udg_hash, id, StringHash( \"bscr1\" ) )\r\n    local integer cyclA\r\n    local integer rand\r\n    local integer cyclB\r\n    local integer cyclBEnd = LoadInteger( udg_hash, id, StringHash( \"bscr1\" ) )\r\n    \r\n    if GetUnitState( boss, UNIT_STATE_LIFE) <= 0.405 or not( udg_fightmod[0] ) then\r\n        call DestroyTimer( GetExpiredTimer() )\r\n        call FlushChildHashtable( udg_hash, id )\r\n    else\r\n        set rand = GetRandomInt( -1, 3 )\r\n        set cyclB = 1\r\n        loop\r\n            exitwhen cyclB > cyclBEnd\r\n            set cyclA = 0\r\n            loop\r\n                exitwhen cyclA > 7\r\n                set bj_lastCreatedUnit = CreateUnit( GetOwningPlayer( boss ), 'u000', GetRectCenterX(udg_Boss_Rect)-1860+(500*(rand+cyclB)), GetRectCenterY(udg_Boss_Rect)-1860+(500*cyclA), 270 )\r\n                call SetUnitScale(bj_lastCreatedUnit, 3, 3, 3 )\r\n                call UnitAddAbility( bj_lastCreatedUnit, 'A136')\r\n                \r\n                set id1 = GetHandleId( bj_lastCreatedUnit )\r\n                if LoadTimerHandle( udg_hash, id1, StringHash( \"bscr1d\" ) ) == null  then\r\n                    call SaveTimerHandle( udg_hash, id1, StringHash( \"bscr1d\" ), CreateTimer() )\r\n                endif\r\n                set id1 = GetHandleId( LoadTimerHandle( udg_hash, id1, StringHash( \"bscr1d\" ) ) ) \r\n                call SaveUnitHandle( udg_hash, id1, StringHash( \"bscr1d\" ), bj_lastCreatedUnit )\r\n                call SaveUnitHandle( udg_hash, id1, StringHash( \"bscr1u\" ), boss )\r\n                call TimerStart( LoadTimerHandle( udg_hash, GetHandleId( bj_lastCreatedUnit ), StringHash( \"bscr1d\" ) ), bosscast(3), false, function Crab1End )\r\n                set cyclA = cyclA + 1\r\n            endloop\r\n            set cyclB = cyclB + 1\r\n        endloop\r\n    endif\r\n    \r\n    set boss = null\r\nendfunction\r\n\r\nfunction Trig_Crab1_Actions takes nothing returns nothing\r\n    local integer id = GetHandleId( udg_DamageEventTarget )\r\n\r\n    call DisableTrigger( GetTriggeringTrigger() )\r\n\r\n    if LoadTimerHandle( udg_hash, id, StringHash( \"bscr1\" ) ) == null  then\r\n        call SaveTimerHandle( udg_hash, id, StringHash( \"bscr1\" ), CreateTimer() )\r\n    endif\r\n\tset id = GetHandleId( LoadTimerHandle( udg_hash, id, StringHash( \"bscr1\" ) ) ) \r\n    call SaveUnitHandle( udg_hash, id, StringHash( \"bscr1\" ), udg_DamageEventTarget )\r\n    call SaveInteger( udg_hash, id, StringHash( \"bscr1\" ), 1 )\r\n\tcall TimerStart( LoadTimerHandle( udg_hash, GetHandleId( udg_DamageEventTarget ), StringHash( \"bscr1\" ) ), bosscast(8), true, function Crab1Cast )\r\nendfunction\r\n\r\n//===========================================================================\r\nfunction InitTrig_Crab1 takes nothing returns nothing\r\n    set gg_trg_Crab1 = CreateTrigger(  )\r\n    call DisableTrigger( gg_trg_Crab1 )\r\n    call TriggerRegisterVariableEvent( gg_trg_Crab1, \"udg_AfterDamageEvent\", EQUAL, 1.00 )\r\n    call TriggerAddCondition( gg_trg_Crab1, Condition( function Trig_Crab1_Conditions ) )\r\n    call TriggerAddAction( gg_trg_Crab1, function Trig_Crab1_Actions )\r\nendfunction\r\n\r\n",
  "Events": [],
  "LocalVariables": [],
  "Conditions": [],
  "Actions": []
}