{
  "Id": 50333557,
  "Comment": "",
  "IsScript": true,
  "RunOnMapInit": false,
  "Script": "function Trig_Turtle3_Conditions takes nothing returns boolean\r\n    return GetUnitTypeId( udg_DamageEventTarget ) == 'h01R' and GetUnitLifePercent(udg_DamageEventTarget) <= 70\r\nendfunction\r\n\r\nglobals\r\n    constant real TURTLE3_AOE_DAMAGE = 250\r\n    constant real TURTLE3_AOE_RANGE = 300\r\nendglobals\r\n\r\nfunction Turtle3End takes nothing returns nothing\r\n    local integer id = GetHandleId( GetExpiredTimer() )\r\n    local unit boss = LoadUnitHandle( udg_hash, id, StringHash( \"bstt3u\" ) )\r\n    local unit dummy = LoadUnitHandle( udg_hash, id, StringHash( \"bstt3d\" ) )\r\n    \r\n    call DestroyEffect( AddSpecialEffect( \"Objects\\\\Spawnmodels\\\\Naga\\\\NagaDeath\\\\NagaDeath.mdl\", GetUnitX( dummy ), GetUnitY( dummy ) + 100 ) )\r\n    call DestroyEffect( AddSpecialEffect( \"Objects\\\\Spawnmodels\\\\Naga\\\\NagaDeath\\\\NagaDeath.mdl\", GetUnitX( dummy ) + 140, GetUnitY( dummy ) - 140 ) )\r\n    call DestroyEffect( AddSpecialEffect( \"Objects\\\\Spawnmodels\\\\Naga\\\\NagaDeath\\\\NagaDeath.mdl\", GetUnitX( dummy ) - 140, GetUnitY( dummy ) - 140 ) )\r\n    \r\n    call GroupAoE(boss, dummy, GetUnitX( dummy ), GetUnitY( dummy ), TURTLE3_AOE_DAMAGE, TURTLE3_AOE_RANGE, TARGET_ENEMY, null, null)\r\n    \r\n    call RemoveUnit( dummy )\r\n    \r\n    call FlushChildHashtable( udg_hash, id )\r\n\r\n    set boss = null\r\n    set dummy = null\r\nendfunction \r\n\r\nfunction Turtle3Cast takes nothing returns nothing\r\n    local integer id = GetHandleId( GetExpiredTimer() )\r\n    local integer id1\r\n    local unit boss = LoadUnitHandle( udg_hash, id, StringHash( \"bstt3\" ) )\r\n\r\n    if GetUnitState( boss, UNIT_STATE_LIFE) <= 0.405 or not( udg_fightmod[0] ) then\r\n        call DestroyTimer( GetExpiredTimer() )\r\n        call FlushChildHashtable( udg_hash, id )\r\n    else\r\n        set bj_lastCreatedUnit = CreateUnit( GetOwningPlayer( boss ), 'u000', GetUnitX( boss ) + GetRandomReal(-500, 500), GetUnitY( boss ) + GetRandomReal(-500, 500), 270 )\r\n        call SetUnitScale(bj_lastCreatedUnit, 3, 3, 3 )\r\n        call UnitAddAbility( bj_lastCreatedUnit, 'A136')\r\n        \r\n        set id1 = GetHandleId( bj_lastCreatedUnit )\r\n        if LoadTimerHandle( udg_hash, id1, StringHash( \"bstt3d\" ) ) == null  then\r\n            call SaveTimerHandle( udg_hash, id1, StringHash( \"bstt3d\" ), CreateTimer() )\r\n        endif\r\n        set id1 = GetHandleId( LoadTimerHandle( udg_hash, id1, StringHash( \"bstt3d\" ) ) ) \r\n        call SaveUnitHandle( udg_hash, id1, StringHash( \"bstt3d\" ), bj_lastCreatedUnit )\r\n        call SaveUnitHandle( udg_hash, id1, StringHash( \"bstt3u\" ), boss )\r\n        call TimerStart( LoadTimerHandle( udg_hash, GetHandleId( bj_lastCreatedUnit ), StringHash( \"bstt3d\" ) ), bosscast(3), false, function Turtle3End )\r\n    endif\r\n    \r\n    set boss = null\r\nendfunction\r\n\r\nfunction Trig_Turtle3_Actions takes nothing returns nothing\r\n    local integer id = GetHandleId( udg_DamageEventTarget )\r\n\r\n    call DisableTrigger( GetTriggeringTrigger() )\r\n\r\n    if LoadTimerHandle( udg_hash, id, StringHash( \"bstt3\" ) ) == null then \r\n        call SaveTimerHandle( udg_hash, id, StringHash( \"bstt3\" ), CreateTimer() )\r\n    endif\r\n\tset id = GetHandleId( LoadTimerHandle( udg_hash, id, StringHash( \"bstt3\" ) ) ) \r\n    call SaveUnitHandle( udg_hash, id, StringHash( \"bstt3\" ), udg_DamageEventTarget )\r\n\tcall TimerStart( LoadTimerHandle( udg_hash, GetHandleId( udg_DamageEventTarget ), StringHash( \"bstt3\" ) ), bosscast(3), true, function Turtle3Cast )\r\nendfunction\r\n\r\n//===========================================================================\r\nfunction InitTrig_Turtle3 takes nothing returns nothing\r\n    set gg_trg_Turtle3 = CreateTrigger(  )\r\n    call DisableTrigger( gg_trg_Turtle3 )\r\n    call TriggerRegisterVariableEvent( gg_trg_Turtle3, \"udg_AfterDamageEvent\", EQUAL, 1.00 )\r\n    call TriggerAddCondition( gg_trg_Turtle3, Condition( function Trig_Turtle3_Conditions ) )\r\n    call TriggerAddAction( gg_trg_Turtle3, function Trig_Turtle3_Actions )\r\nendfunction\r\n\r\n",
  "Events": [],
  "LocalVariables": [],
  "Conditions": [],
  "Actions": []
}