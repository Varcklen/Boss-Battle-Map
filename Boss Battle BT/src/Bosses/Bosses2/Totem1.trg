{
  "Id": 50333432,
  "Comment": "",
  "IsScript": true,
  "RunOnMapInit": false,
  "Script": "scope Totem1 initializer init\r\n\r\n    globals\r\n        public constant integer ID_BOSS = 'o007'\r\n        \r\n        private constant integer DAMAGE = 45\r\n        private constant integer SCATTER = 400\r\n        private constant integer AREA = 200\r\n        private constant integer EXPLODE_DELAY = 1\r\n        private constant integer EXPLODE_COOLDOWN = 5\r\n        private constant real FIRE_DURATION = 5\r\n        private constant real DAMAGE_TICK = 0.5\r\n        private constant integer TICKS = R2I(FIRE_DURATION / DAMAGE_TICK)\r\n        \r\n        private constant string FIRE_ANIMATION = \"Abilities\\\\Spells\\\\Human\\\\FlameStrike\\\\FlameStrike1.mdl\"\r\n    endglobals\r\n\r\n    private function Trig_Totem1_Conditions takes nothing returns boolean\r\n        return GetUnitTypeId(udg_DamageEventTarget) == ID_BOSS\r\n    endfunction\r\n    \r\n    private function DealDamage takes effect area, integer id returns nothing\r\n        local unit boss = LoadUnitHandle( udg_hash, id, StringHash( \"bstmeb\" ) )\r\n        local real damage = LoadReal( udg_hash, id, StringHash( \"bstme\" ) )\r\n        local group g = CreateGroup()\r\n        local unit u\r\n    \r\n        call GroupEnumUnitsInRange( g, BlzGetLocalSpecialEffectX( area ), BlzGetLocalSpecialEffectY( area ), AREA, null )\r\n        loop\r\n            set u = FirstOfGroup(g)\r\n            exitwhen u == null\r\n            if unitst( u, boss, TARGET_ENEMY ) then\r\n                call UnitTakeDamage(boss, u, damage, DAMAGE_TYPE_MAGIC)\r\n            endif\r\n            call GroupRemoveUnit(g,u)\r\n        endloop\r\n    \r\n        call DestroyGroup( g )\r\n        set u = null\r\n        set g = null\r\n        set area = null\r\n    endfunction\r\n\r\n    private function CastFire takes nothing returns nothing\r\n        local integer id = GetHandleId( GetExpiredTimer( ) )\r\n        local effect area = LoadEffectHandle(udg_hash, id, StringHash( \"bstme\" ) )\r\n        local integer counter = LoadInteger( udg_hash, id, StringHash( \"bstme\" ) ) + 1\r\n        \r\n        if counter > TICKS or area == null then\r\n            call DestroyEffect(area)\r\n            call DestroyTimer( GetExpiredTimer() )\r\n        else\r\n            call DealDamage(area, id)\r\n            call SaveInteger( udg_hash, id, StringHash( \"bstme\" ), counter )\r\n        endif\r\n        \r\n        set area = null\r\n    endfunction\r\n\r\n    private function DelayEnd takes nothing returns nothing\r\n        local integer id = GetHandleId( GetExpiredTimer( ) )\r\n        local effect area = LoadEffectHandle(udg_hash, id, StringHash( \"bstmf\" ) )\r\n        local unit caster = LoadUnitHandle(udg_hash, id, StringHash( \"bstmfb\" ) )\r\n        local real damage = LoadReal( udg_hash, id, StringHash( \"bstmf\" ) )\r\n        local effect fire\r\n        local integer id1\r\n        \r\n        if IsUnitAlive(caster) then\r\n        \tcall IndicatorSystem_Create( INDICATOR_AIM, BlzGetLocalSpecialEffectX( area ), BlzGetLocalSpecialEffectY( area ), AREA, FIRE_DURATION )\r\n            set fire = AddSpecialEffect(FIRE_ANIMATION, BlzGetLocalSpecialEffectX( area ), BlzGetLocalSpecialEffectY( area ) )\r\n            call BlzSetSpecialEffectScale( fire, 1.2 )\r\n            call BlzSetSpecialEffectTimeScale( fire, 0.8 )\r\n            \r\n            \r\n            set id1 = InvokeTimerWithEffect(fire, \"bstme\", DAMAGE_TICK, true, function CastFire )\r\n            call SaveUnitHandle( udg_hash, id1, StringHash( \"bstmeb\" ), caster )\r\n            call SaveReal( udg_hash, id1, StringHash( \"bstme\" ), damage )\r\n        endif\r\n        call DestroyEffect(area)\r\n        call FlushChildHashtable( udg_hash, id )\r\n        \r\n        set caster = null\r\n        set area = null\r\n        set fire = null\r\n    endfunction\r\n\r\n    public function SpawnFireArea takes unit caster, real x, real y, real damage returns nothing\r\n        local integer id\r\n        local effect area = AddSpecialEffect(DEATH_AREA, x, y)\r\n        \r\n        call BlzSetSpecialEffectScale( area, AREA/100 )\r\n        \r\n        set id = InvokeTimerWithEffect(area, \"bstmf\", EXPLODE_DELAY, false, function DelayEnd )\r\n        call SaveUnitHandle( udg_hash, id, StringHash( \"bstmfb\" ), caster )\r\n        call SaveReal( udg_hash, id, StringHash( \"bstmf\" ), damage )\r\n        \r\n        set caster = null\r\n        set area = null\r\n    endfunction\r\n        \r\n    public function TotemCast takes nothing returns nothing\r\n        local integer id = GetHandleId( GetExpiredTimer( ) )\r\n        local unit boss = LoadUnitHandle( udg_hash, id, StringHash( \"bstm1\" ))\r\n        local unit target \r\n        \r\n        if IsUnitDead(boss) or not( udg_fightmod[0] ) then\r\n            call DestroyTimer( GetExpiredTimer() )\r\n        else\r\n            set target = DeathSystem_GetRandomAliveHero()\r\n            if (GetUnitAbilityLevel( boss, 'A1G7') > 0 or GetRandomInt(1, 3) == 1) and target != null then\r\n                call SpawnFireArea(boss, GetUnitX( target ), GetUnitY( target ), DAMAGE )\r\n            else\r\n                call SpawnFireArea(boss, Math_GetUnitRandomX(boss, SCATTER), Math_GetUnitRandomY(boss, SCATTER), DAMAGE )\r\n            endif\r\n        endif\r\n        \r\n        set target = null\r\n        set boss = null\r\n    endfunction\r\n\r\n    private function Trig_Totem1_Actions takes nothing returns nothing\r\n        call DisableTrigger( GetTriggeringTrigger() )\r\n        call InvokeTimerWithUnit(udg_DamageEventTarget, \"bstm1\", bosscast(EXPLODE_COOLDOWN), true, function TotemCast )\r\n    endfunction\r\n\r\n    //===========================================================================\r\n    private function init takes nothing returns nothing\r\n        set gg_trg_Totem1 = CreateEventTrigger( \"udg_AfterDamageEvent\", function Trig_Totem1_Actions, function Trig_Totem1_Conditions )\r\n        call DisableTrigger( gg_trg_Totem1 )\r\n    endfunction\r\n\r\nendscope",
  "Events": [],
  "LocalVariables": [],
  "Conditions": [],
  "Actions": []
}