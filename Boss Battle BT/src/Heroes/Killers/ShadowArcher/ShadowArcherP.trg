{
  "Id": 50333100,
  "Comment": "",
  "IsScript": true,
  "RunOnMapInit": false,
  "Script": "function Trig_ShadowArcherP_Conditions takes nothing returns boolean\r\n    return GetLearnedSkill() == 'A0ID'\r\nendfunction\r\n\r\nfunction ShadowArcherPCast takes nothing returns nothing\r\n    local integer id = GetHandleId( GetExpiredTimer( ) )\r\n    local unit u = LoadUnitHandle( udg_hash, id, StringHash( \"sdap\" ) )\r\n    local integer attackExtra = LoadInteger( udg_hash, id, StringHash( \"sdap\" ))\r\n    local integer attackBonus = LoadInteger( udg_hash, GetHandleId( u ), StringHash( \"sdapb\" ))\r\n    \r\n    if GetUnitAbilityLevel(u, 'A0ID') == 0 then\r\n        call BlzSetUnitBaseDamage( u, BlzGetUnitBaseDamage(u, 0) - attackBonus, 0 )\r\n        call FlushChildHashtable( udg_hash, id )\r\n        call DestroyTimer( GetExpiredTimer() )\r\n    elseif GetUnitState( u, UNIT_STATE_LIFE) > 0.405 and udg_combatlogic[GetPlayerId( GetOwningPlayer( u ) ) + 1] and not(udg_fightmod[3]) and not( IsUnitLoaded( u ) ) then\r\n    \tif InvisibilitySystem_IsActive(u) then\r\n    \t\tset attackExtra = attackExtra * 2\r\n    \tendif\r\n        set attackBonus = attackBonus + attackExtra\r\n        call BlzSetUnitBaseDamage( u, BlzGetUnitBaseDamage(u, 0) + attackExtra, 0 )\r\n        call SaveInteger( udg_hash, GetHandleId( u ), StringHash( \"sdapb\" ), attackBonus)\r\n    endif\r\n    \r\n    set u = null\r\nendfunction\r\n\r\nfunction Trig_ShadowArcherP_Actions takes nothing returns nothing\r\n    local integer id = GetHandleId( GetLearningUnit() )\r\n    \r\n    if LoadTimerHandle( udg_hash, id, StringHash( \"sdap\" ) ) == null  then\r\n        call SaveTimerHandle( udg_hash, id, StringHash( \"sdap\" ), CreateTimer() )\r\n    endif\r\n    set id = GetHandleId( LoadTimerHandle( udg_hash, id, StringHash( \"sdap\" ) ) )\r\n    call SaveUnitHandle ( udg_hash, id, StringHash( \"sdap\" ), GetLearningUnit() )\r\n    call SaveInteger( udg_hash, id, StringHash( \"sdap\" ), GetUnitAbilityLevel(GetLearningUnit(), GetLearnedSkill() ) + 1 )\r\n    call TimerStart( LoadTimerHandle( udg_hash, GetHandleId( GetLearningUnit() ), StringHash( \"sdap\" ) ), 1, true, function ShadowArcherPCast )\r\nendfunction\r\n\r\n//===========================================================================\r\nfunction InitTrig_ShadowArcherP takes nothing returns nothing\r\n    set gg_trg_ShadowArcherP = CreateTrigger(  )\r\n    call TriggerRegisterAnyUnitEventBJ( gg_trg_ShadowArcherP, EVENT_PLAYER_HERO_SKILL )\r\n    call TriggerAddCondition( gg_trg_ShadowArcherP, Condition( function Trig_ShadowArcherP_Conditions ) )\r\n    call TriggerAddAction( gg_trg_ShadowArcherP, function Trig_ShadowArcherP_Actions )\r\nendfunction\r\n\r\nscope ShadowArcherE initializer Triggs\r\n    private function DeleteBonusDamage takes unit hero returns nothing\r\n        local integer attackBonus = LoadInteger( udg_hash, GetHandleId( hero ), StringHash( \"sdapb\" ))\r\n        \r\n        if attackBonus <= 0 then\r\n            return\r\n        endif\r\n        \r\n        call BlzSetUnitBaseDamage( hero, BlzGetUnitBaseDamage(hero, 0) - attackBonus, 0 )\r\n        call SaveInteger( udg_hash, GetHandleId( hero ), StringHash( \"sdapb\" ), 0)\r\n        \r\n        set hero = null\r\n    endfunction\r\n    \r\n    private function Cast takes nothing returns nothing\r\n        if GetUnitAbilityLevel(udg_DamageEventSource, 'A0ID') > 0 and GetUnitState( udg_DamageEventSource, UNIT_STATE_LIFE) > 0.405 and udg_IsDamageSpell == false then\r\n            call DeleteBonusDamage(udg_DamageEventSource)\r\n        endif\r\n    endfunction\r\n    \r\n    private function FightEnd takes nothing returns nothing\r\n        if GetUnitAbilityLevel(udg_FightEnd_Unit, 'A0ID') > 0 then\r\n            call DeleteBonusDamage(udg_FightEnd_Unit)\r\n        endif\r\n    endfunction\r\n\r\n    private function Triggs takes nothing returns nothing\r\n        local trigger trig = CreateTrigger(  )\r\n        \r\n        call TriggerRegisterVariableEvent( trig, \"udg_DamageEvent\", EQUAL, 1.00 )\r\n        call TriggerAddAction( trig, function Cast )\r\n        \r\n        set trig = CreateTrigger()\r\n        call TriggerRegisterVariableEvent( trig, \"udg_FightEnd_Real\", EQUAL, 1.00 )\r\n        call TriggerAddAction( trig, function FightEnd )\r\n        \r\n        set trig = null\r\n    endfunction\r\nendscope\r\n\r\n",
  "Events": [],
  "LocalVariables": [],
  "Conditions": [],
  "Actions": []
}