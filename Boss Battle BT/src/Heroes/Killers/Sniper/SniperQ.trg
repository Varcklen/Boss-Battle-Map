{
  "Id": 50333086,
  "Comment": "",
  "IsScript": true,
  "RunOnMapInit": false,
  "Script": "function Trig_SniperQ_Conditions takes nothing returns boolean\r\n    return GetSpellAbilityId( ) == 'A07K'\r\nendfunction\r\n\r\nfunction SniperQMotion takes nothing returns nothing\r\n    local integer id = GetHandleId( GetExpiredTimer() )\r\n    local unit target = LoadUnitHandle( udg_hash, id, StringHash( \"snpqt\" ) )\r\n    local unit dummy = LoadUnitHandle( udg_hash, id, StringHash( \"snpq\" ) )\r\n    local real dmg = LoadReal( udg_hash, id, StringHash( \"snpq\" ) )\r\n    local real x = GetUnitX( target )\r\n    local real y = GetUnitY( target )\r\n    local real angle = Atan2( y - GetUnitY( dummy ), x - GetUnitX( dummy ) )\r\n    local real NewX = GetUnitX( dummy ) + 120 * Cos( angle )\r\n    local real NewY = GetUnitY( dummy ) + 120 * Sin( angle )\r\n    local real IfX = ( ( x - GetUnitX( dummy ) ) * ( x - GetUnitX( dummy ) ) )\r\n    local real IfY = ( ( y - GetUnitY( dummy ) ) * ( y - GetUnitY( dummy ) ) )\r\n    local unit caster = LoadUnitHandle( udg_hash, id, StringHash( \"snpqc\" ) )\r\n    \r\n    if SquareRoot( IfX + IfY ) > 100 and GetUnitState( target, UNIT_STATE_LIFE) > 0.405 then\r\n        call SetUnitPosition( dummy, NewX, NewY )\r\n        call GetUnitLoc( target )\r\n    else\r\n        call spectimeunit( target, \"Objects\\\\Spawnmodels\\\\Human\\\\FragmentationShards\\\\FragBoomSpawn.mdl\", \"origin\", 2 )\r\n        call UnitDamageTarget( caster, target, dmg, true, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_MAGIC, WEAPON_TYPE_WHOKNOWS )\r\n        call RemoveUnit( dummy )\r\n        call DestroyTimer( GetExpiredTimer() )\r\n        call FlushChildHashtable( udg_hash, id )\r\n    endif\r\n\r\n\tset caster = null\r\n    set dummy = null\r\n    set target = null\r\nendfunction   \r\n\r\nfunction Trig_SniperQ_Actions takes nothing returns nothing\r\n    local integer id \r\n    local real dmg \r\n    local unit caster\r\n    local unit target\r\n    local integer lvl\r\n\r\n    if CastLogic() then\r\n        set caster = udg_Caster\r\n        set target = udg_Target\r\n        set lvl = udg_Level\r\n    elseif RandomLogic() then\r\n        set caster = udg_Caster\r\n        set target = randomtarget( caster, 900, \"enemy\", \"\", \"\", \"\", \"\" )\r\n        set lvl = udg_Level\r\n        call textst( udg_string[0] + GetObjectName('A07K'), caster, 64, 90, 10, 1.5 )\r\n        if target == null then\r\n            set caster = null\r\n            return\r\n        endif\r\n    else\r\n        set caster = GetSpellAbilityUnit()\r\n        set target = GetSpellTargetUnit()\r\n        set lvl = GetUnitAbilityLevel(GetSpellAbilityUnit(), GetSpellAbilityId())\r\n    endif\r\n    \r\n    set dmg = ( ( 0.012 + ( 0.012 * lvl ) ) * GetUnitState( target, UNIT_STATE_MAX_LIFE ) ) * GetUnitSpellPower(caster)\r\n    \r\n    call dummyspawn( caster, 0, 'A10A', 'A0N5', 0 )\r\n    call SetUnitFacing( bj_lastCreatedUnit, AngleBetweenUnits( caster, target ) )\r\n\r\n    set id = GetHandleId( bj_lastCreatedUnit )\r\n    \r\n    call SaveTimerHandle( udg_hash, id, StringHash( \"snpq\" ), CreateTimer() )\r\n\tset id = GetHandleId( LoadTimerHandle( udg_hash, id, StringHash( \"snpq\" ) ) ) \r\n\tcall SaveUnitHandle( udg_hash, id, StringHash( \"snpq\" ), bj_lastCreatedUnit )\r\n    call SaveUnitHandle( udg_hash, id, StringHash( \"snpqt\" ), target )\r\n    call SaveUnitHandle( udg_hash, id, StringHash( \"snpqc\" ), caster )\r\n    call SaveReal( udg_hash, id, StringHash( \"snpq\" ), dmg )\r\n\tcall TimerStart( LoadTimerHandle( udg_hash, GetHandleId( bj_lastCreatedUnit ), StringHash( \"snpq\" ) ), 0.04, true, function SniperQMotion )\r\n    \r\n    set caster = null\r\n    set target = null\r\nendfunction\r\n\r\n//===========================================================================\r\nfunction InitTrig_SniperQ takes nothing returns nothing\r\n    set gg_trg_SniperQ = CreateTrigger(  )\r\n    call TriggerRegisterAnyUnitEventBJ( gg_trg_SniperQ, EVENT_PLAYER_UNIT_SPELL_EFFECT )\r\n    call TriggerAddCondition( gg_trg_SniperQ, Condition( function Trig_SniperQ_Conditions ) )\r\n    call TriggerAddAction( gg_trg_SniperQ, function Trig_SniperQ_Actions )\r\nendfunction\r\n\r\n\r\n\r\n\r\n",
  "Events": [],
  "LocalVariables": [],
  "Conditions": [],
  "Actions": []
}