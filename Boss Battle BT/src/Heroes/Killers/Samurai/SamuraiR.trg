{
  "Id": 50333105,
  "Comment": "",
  "IsScript": true,
  "RunOnMapInit": false,
  "Script": "globals\r\n    constant real SAMURAI_R_HEAL_BONUS_LEVEL_BONUS = 0.1\r\n    constant integer SAMURAI_R_DURATION_FIRST_LEVEL = 2\r\n    constant integer SAMURAI_R_DURATION_LEVEL_BONUS = 2\r\n    \r\n    constant integer SAMURAI_R_DURATION_BONUS_ALTERNATIVE = 2\r\nendglobals\r\n\r\nfunction Trig_SamuraiR_Conditions takes nothing returns boolean\r\n    local integer playerIndex = GetPlayerId(GetOwningPlayer(GetKillingUnit())) + 1\r\n    local unit hero = udg_hero[playerIndex]\r\n    local unit target = GetDyingUnit()\r\n    local boolean isWork = true\r\n    \r\n    if GetUnitTypeId(target) == 'u000' then\r\n        set isWork = false\r\n    elseif IsUnitAlly(target, GetOwningPlayer(hero)) then\r\n        set isWork = false\r\n    elseif GetUnitAbilityLevel( hero, 'A0VT') == 0 then\r\n        set isWork = false\r\n    elseif not( GetUnitTypeId(GetKillingUnit()) == 'u000' or GetKillingUnit() == hero ) then\r\n        set isWork = false\r\n    endif\r\n    \r\n    set target = null\r\n    set hero = null\r\n    return isWork\r\nendfunction\r\n\r\nfunction SamuraiR_Alternative takes unit caster, real duration returns nothing\r\n    set duration = duration * SAMURAI_R_DURATION_BONUS_ALTERNATIVE\r\n\r\n    call bufallst( caster, null, 'A0VV', 0, 0, 0, 0, 'B04B', \"smrw\", duration )\r\n\r\n    set caster = null\r\nendfunction\r\n\r\nfunction SamuraiR takes unit caster, real duration returns nothing\r\n    call bufallst( caster, null, 'A0VV', 0, 0, 0, 0, 'B04B', \"smrw\", duration )\r\n\r\n    set caster = null\r\nendfunction\r\n\r\nfunction Trig_SamuraiR_Actions takes nothing returns nothing\r\n    local unit caster = udg_hero[GetPlayerId(GetOwningPlayer(GetKillingUnit())) + 1]\r\n    local real duration\r\n    \r\n    set duration = SAMURAI_R_DURATION_FIRST_LEVEL + ( SAMURAI_R_DURATION_LEVEL_BONUS * GetUnitAbilityLevel( caster, 'A0VT') )\r\n\r\n    if Aspects_IsHeroAspectActive(caster, ASPECT_03 ) then\r\n        call SamuraiR_Alternative( caster, duration)\r\n    else\r\n        call SamuraiR( caster, duration )\r\n    endif\r\n\r\n    set caster = null\r\nendfunction\r\n\r\n//===========================================================================\r\nfunction InitTrig_SamuraiR takes nothing returns nothing\r\n    set gg_trg_SamuraiR = CreateTrigger(  )\r\n    call TriggerRegisterAnyUnitEventBJ( gg_trg_SamuraiR, EVENT_PLAYER_UNIT_DEATH )\r\n    call TriggerAddCondition( gg_trg_SamuraiR, Condition( function Trig_SamuraiR_Conditions ) )\r\n    call TriggerAddAction( gg_trg_SamuraiR, function Trig_SamuraiR_Actions )\r\nendfunction\r\n\r\nscope SamuraiR initializer init\r\n    //OnHealChange\r\n    private function Conditions takes nothing returns boolean\r\n        return GetUnitAbilityLevel( Event_OnHealChange_Caster, 'A0VT') > 0 and Aspects_IsHeroAspectActive(Event_OnHealChange_Caster, ASPECT_03 ) == false\r\n    endfunction\r\n    \r\n    private function Action takes nothing returns nothing\r\n        set Event_OnHealChange_Heal = Event_OnHealChange_Heal + ( Event_OnHealChange_StaticHeal * ( SAMURAI_R_HEAL_BONUS_LEVEL_BONUS * GetUnitAbilityLevel( Event_OnHealChange_Caster, 'A0VT') ) )\r\n    endfunction\r\n\r\n    //DeleteBuff\r\n    private function DeleteBuff_Conditions takes nothing returns boolean\r\n        return GetUnitAbilityLevel( Event_DeleteBuff_Unit, 'A0VV') > 0\r\n    endfunction\r\n    \r\n    private function DeleteBuff takes nothing returns nothing\r\n        local unit hero = Event_DeleteBuff_Unit\r\n\r\n        call UnitRemoveAbility( hero, 'A0VV' )\r\n        call UnitRemoveAbility( hero, 'B04B' )\r\n        \r\n        set hero = null\r\n    endfunction\r\n\r\n    //Init\r\n    private function init takes nothing returns nothing\r\n        call CreateEventTrigger( \"Event_OnHealChange_Real\", function Action, function Conditions )\r\n        call CreateEventTrigger( \"Event_DeleteBuff_Real\", function DeleteBuff, function DeleteBuff_Conditions )\r\n    endfunction\r\nendscope\r\n\r\n",
  "Events": [],
  "LocalVariables": [],
  "Conditions": [],
  "Actions": []
}