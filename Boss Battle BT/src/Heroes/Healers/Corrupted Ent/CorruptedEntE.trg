{
  "Id": 50333329,
  "Comment": "",
  "IsScript": true,
  "RunOnMapInit": false,
  "Script": "scope CorruptedEntE initializer init\r\n\r\n    globals\r\n        private constant integer ID_HERO = 'N017'\r\n        private constant integer ID_ABILITY = 'A0OI'\r\n        private constant integer BUFF = 'B09Z'\r\n    \r\n        private constant integer HEAL_FIRST_LEVEL_BONUS = 150\r\n        private constant integer HEAL_LEVEL_BONUS = 100\r\n        private constant integer DAMAGE = 5\r\n        private constant integer AREA = 600\r\n        private constant integer INTERVAL = 1\r\n        private constant integer LIMIT_TO_HEAL = 200\r\n        \r\n        private constant integer ALT_LIMIT_TO_HEAL = 600\r\n        \r\n        private boolean DamageCount = false\r\n        private boolean IsHealFromIt = false\r\n        private real Limit_to_Heal = LIMIT_TO_HEAL\r\n    endglobals\r\n\r\n    function Trig_CorruptedEntE_Conditions takes nothing returns boolean\r\n        return GetLearnedSkill() == ID_ABILITY\r\n    endfunction\r\n\r\n    function CorruptedEntECast takes nothing returns nothing\r\n        local integer id = GetHandleId( GetExpiredTimer( ) )\r\n        local unit caster = LoadUnitHandle( udg_hash, id, StringHash( \"ente\" ) )\r\n        local group g = CreateGroup()\r\n        local unit u\r\n\r\n        if IsUnitAlive( caster) and IsUnitLoaded( caster ) == false and combat(caster, false, 0) then\r\n            call GroupEnumUnitsInRange( g, GetUnitX( caster ), GetUnitY( caster ), AREA, null )\r\n            loop\r\n                set u = FirstOfGroup(g)\r\n                exitwhen u == null\r\n                if unitst( u, caster, \"ally\" ) and IsUnitType( u, UNIT_TYPE_HERO) then\r\n                    call DestroyEffect( AddSpecialEffectTarget(\"Abilities\\\\Spells\\\\Undead\\\\CarrionSwarm\\\\CarrionSwarmDamage.mdl\", u, \"origin\" ) )\r\n                    set DamageCount = true\r\n                    call UnitTakeDamage(caster, u, DAMAGE, DAMAGE_TYPE_MAGIC)\r\n                    set DamageCount = false\r\n                endif\r\n                call GroupRemoveUnit(g,u)\r\n            endloop\r\n        endif\r\n        \r\n        call GroupClear( g )\r\n        call DestroyGroup( g )\r\n        set g = null\r\n        set u = null\r\n        set caster = null \r\n    endfunction\r\n\r\n    function Trig_CorruptedEntE_Actions takes nothing returns nothing\r\n        local unit hero = GetLearningUnit()\r\n        local integer lvl = GetUnitAbilityLevel( hero, ID_ABILITY )\r\n        local integer heal\r\n        local integer id\r\n        \r\n        set heal = HEAL_FIRST_LEVEL_BONUS + (lvl*HEAL_LEVEL_BONUS)\r\n        \r\n        set id = InvokeTimerWithUnit( hero, \"ente\", INTERVAL, true, function CorruptedEntECast )\r\n        call SaveInteger( udg_hash, GetHandleId(hero), StringHash( \"entehl\" ), heal )\r\n        \r\n        set hero = null\r\n    endfunction\r\n\r\n    private function NullingAbility takes nothing returns nothing\r\n        if GetUnitAbilityLevel( udg_Event_NullingAbility_Unit, ID_ABILITY) > 0 then\r\n            call DestroyTimer( LoadTimerHandle( udg_hash, GetHandleId( udg_Event_NullingAbility_Unit ), StringHash( \"ente\" )))\r\n        endif\r\n    endfunction\r\n    \r\n    private function AddToHeal takes unit caster, real toAdd returns nothing\r\n        local integer casterId = GetHandleId(caster)\r\n        local integer heal = LoadInteger( udg_hash, casterId, StringHash( \"entehl\" ) )\r\n        local real damageCount = LoadReal( udg_hash, casterId, StringHash( \"ente\" ) )\r\n        local unit target\r\n    \r\n        set damageCount = damageCount + toAdd\r\n    \r\n        if damageCount >= Limit_to_Heal then\r\n            set damageCount = damageCount - Limit_to_Heal\r\n            set target = HeroLessHP(caster)\r\n            if target != null then\r\n                set IsHealFromIt = true\r\n                call healst( caster, target, heal )\r\n                set IsHealFromIt = false\r\n                call DestroyEffect( AddSpecialEffectTarget(\"Objects\\\\Spawnmodels\\\\NightElf\\\\EntBirthTarget\\\\EntBirthTarget.mdl\", target, \"origin\" ) )\r\n            endif\r\n        endif\r\n        call SaveReal( udg_hash, casterId, StringHash( \"ente\" ), damageCount )\r\n    \r\n        set caster = null\r\n        set target = null\r\n    endfunction\r\n    \r\n    //After ability deal damage\r\n    private function AfterDamageEvent_Conditions takes nothing returns boolean\r\n        return DamageCount == true\r\n    endfunction\r\n    \r\n    private function AfterDamageEvent takes nothing returns nothing\r\n        call AddToHeal(udg_DamageEventSource, udg_DamageEventAmount)\r\n    endfunction\r\n    \r\n    //Aspect Added\r\n    private function AspectAdded_Conditions takes nothing returns boolean\r\n        return GetUnitTypeId(Event_AspectAdded_Hero) == ID_HERO and Event_AspectAdded_Key02 == 2\r\n    endfunction\r\n    \r\n    private function AspectAdded takes nothing returns nothing\r\n        set Limit_to_Heal = ALT_LIMIT_TO_HEAL\r\n    endfunction\r\n    \r\n    //Aspect Removed\r\n    private function AspectRemoved_Conditions takes nothing returns boolean\r\n        return GetUnitTypeId(Event_AspectRemoved_Hero) == ID_HERO and Event_AspectAdded_Key02 == 2\r\n    endfunction\r\n    \r\n    private function AspectRemoved takes nothing returns nothing\r\n        set Limit_to_Heal = LIMIT_TO_HEAL\r\n    endfunction\r\n\r\n    //After heal to add\r\n    private function AfterHeal_Conditions takes nothing returns boolean\r\n        if IsUnitHasAbility(Event_AfterHeal_Target, BUFF) == false then\r\n            return false\r\n        elseif IsUnitHasAbility(Event_AfterHeal_Caster, ID_ABILITY) == false then\r\n            return false\r\n        elseif Aspects_IsHeroAspectActive(Event_AfterHeal_Caster, ASPECT_02 ) == false then\r\n            return false\r\n        elseif Event_AfterHeal_Heal <= 0 then\r\n            return false\r\n        elseif IsHealFromIt then\r\n            return false\r\n        endif\r\n    \r\n        return true\r\n    endfunction\r\n    \r\n    private function AfterHeal takes nothing returns nothing\r\n        call AddToHeal(Event_AfterHeal_Caster, Event_AfterHeal_Heal)\r\n    endfunction\r\n    \r\n    //===========================================================================\r\n    private function init takes nothing returns nothing\r\n        set gg_trg_CorruptedEntE = CreateTrigger(  )\r\n        call TriggerRegisterAnyUnitEventBJ( gg_trg_CorruptedEntE, EVENT_PLAYER_HERO_SKILL )\r\n        call TriggerAddCondition( gg_trg_CorruptedEntE, Condition( function Trig_CorruptedEntE_Conditions ) )\r\n        call TriggerAddAction( gg_trg_CorruptedEntE, function Trig_CorruptedEntE_Actions )\r\n        \r\n        call CreateEventTrigger( \"udg_AfterDamageEvent\", function AfterDamageEvent, function AfterDamageEvent_Conditions )\r\n        call CreateEventTrigger( \"udg_Event_NullingAbility_Real\", function NullingAbility, null )\r\n        \r\n        call CreateEventTrigger( \"Event_AspectAdded_Real\", function AspectAdded, function AspectAdded_Conditions )\r\n        call CreateEventTrigger( \"Event_AspectRemoved_Real\", function AspectRemoved, function AspectRemoved_Conditions )\r\n        \r\n        call CreateEventTrigger( \"Event_AfterHeal_Real\", function AfterHeal, function AfterHeal_Conditions )\r\n    endfunction\r\n\r\nendscope\r\n\r\n",
  "Events": [],
  "LocalVariables": [],
  "Conditions": [],
  "Actions": []
}