{
  "Id": 50333283,
  "Comment": "",
  "IsScript": true,
  "RunOnMapInit": false,
  "Script": "function Trig_ShamanR_Conditions takes nothing returns boolean\r\n    return GetSpellAbilityId() == 'A0XH'\r\nendfunction\r\n\r\nfunction ShamanREnd takes nothing returns nothing\r\n    local integer id = GetHandleId( GetExpiredTimer( ) )\r\n    local real dmg = LoadReal( udg_hash, id, StringHash( \"shmr1\" ) )\r\n    local unit target = LoadUnitHandle( udg_hash, id, StringHash( \"shmr1\" ) )\r\n    local unit dummy = LoadUnitHandle( udg_hash, id, StringHash( \"shmr1d\" ) )\r\n    local unit caster = LoadUnitHandle( udg_hash, id, StringHash( \"shmrc\" ) )\r\n    \r\n    if GetUnitState( target, UNIT_STATE_LIFE) > 0.405 and GetUnitAbilityLevel( target, 'A0N4') > 0 then\r\n        call UnitDamageTarget( caster, target, dmg, true, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_MAGIC, WEAPON_TYPE_WHOKNOWS )\r\n    else\r\n        call UnitRemoveAbility( target, 'A0N4' )\r\n        call UnitRemoveAbility( target, 'B06P' )\r\n        call RemoveUnit( dummy )\r\n        call FlushChildHashtable( udg_hash, id )\r\n        call DestroyTimer( GetExpiredTimer() )\r\n    endif\r\n    \r\n    set caster = null\r\n    set target = null\r\n    set dummy = null\r\nendfunction\r\n\r\nfunction ShamanRSpell takes nothing returns nothing\r\n    local integer id = GetHandleId( GetExpiredTimer( ) )\r\n    local integer t = LoadInteger( udg_hash, id, StringHash( \"shmr\" ) ) - 1\r\n    local real dmg = LoadReal( udg_hash, id, StringHash( \"shmr\" ) )\r\n\tlocal unit caster = LoadUnitHandle( udg_hash, id, StringHash( \"shmrc\" ) )\r\n    local unit u = LoadUnitHandle( udg_hash, id, StringHash( \"shmr\" ) )\r\n    local unit target = randomtarget( u, 500, \"enemy\", \"\", \"\", \"\", \"\" )\r\n\tlocal integer id1\r\n\r\n    if GetUnitState( target, UNIT_STATE_LIFE) > 0.405 and target != null then\r\n        if GetUnitAbilityLevel( target, 'A0N4') == 0 then\r\n            call bufst( caster, target, 'A0N4', 'B06P', \"shmr2\", 5 )\r\n            call dummyspawn( caster, 0, 'A0N5', 0, 0 )\r\n            set id1 = GetHandleId( target )\r\n            if LoadTimerHandle( udg_hash, id1, StringHash( \"shmr1\" ) ) == null  then\r\n                call SaveTimerHandle( udg_hash, id1, StringHash( \"shmr1\" ), CreateTimer() )\r\n            endif\r\n            set id1 = GetHandleId( LoadTimerHandle( udg_hash, id1, StringHash( \"shmr1\" ) ) ) \r\n            call SaveUnitHandle( udg_hash, id1, StringHash( \"shmr1\" ), target )\r\n            call SaveUnitHandle( udg_hash, id1, StringHash( \"shmr1d\" ), bj_lastCreatedUnit )\r\n            call SaveUnitHandle( udg_hash, id1, StringHash( \"shmrc\" ), caster )\r\n            call SaveReal( udg_hash, id1, StringHash( \"shmr1\" ), dmg )\r\n            call TimerStart( LoadTimerHandle( udg_hash, GetHandleId( target ), StringHash( \"shmr1\" ) ), 0.5, true, function ShamanREnd )\r\n        endif\r\n    endif\r\n    \r\n    if t > 0 and GetUnitState( u, UNIT_STATE_LIFE) > 0.405 and GetUnitAbilityLevel( u, 'A05C') > 0 then\r\n        call SaveInteger( udg_hash, id, StringHash( \"shmr\" ), t )\r\n    else\r\n        call UnitRemoveAbility( u, 'A05C' )\r\n        call UnitRemoveAbility( u, 'B06O' )\r\n        call FlushChildHashtable( udg_hash, id )\r\n        call DestroyTimer( GetExpiredTimer() )\r\n    endif\r\n    \r\n\tset caster = null\r\n    set target = null\r\n    set u = null\r\nendfunction\r\n\r\nfunction Trig_ShamanR_Actions takes nothing returns nothing\r\n    local integer id \r\n    local unit caster\r\n    local unit target\r\n    local integer lvl\r\n    local real t\r\n    local real mdmg\r\n    local real dmg\r\n    \r\n    if CastLogic() then\r\n        set caster = udg_Caster\r\n        set target = udg_Target\r\n        set lvl = udg_Level\r\n        set t = udg_Time\r\n    elseif RandomLogic() then\r\n        set caster = udg_Caster\r\n        set target = randomtarget( caster, 900, \"ally\", \"\", \"\", \"\", \"\" )\r\n        set lvl = udg_Level\r\n        call textst( udg_string[0] + GetObjectName('A0XH'), caster, 64, 90, 10, 1.5 )\r\n        set t = 15\r\n        if target == null then\r\n            set caster = null\r\n            return\r\n        endif\r\n    else\r\n        set caster = GetSpellAbilityUnit()\r\n        set target = GetSpellTargetUnit()\r\n        set lvl = GetUnitAbilityLevel(GetSpellAbilityUnit(), GetSpellAbilityId())\r\n        set t = 15 \r\n    endif\r\n    set t = timebonus(caster, t)\r\n    \r\n    set mdmg = 1 - ( 0.05 + ( 0.05*lvl) )\r\n    set dmg = (25 + (lvl*50)) * GetUnitSpellPower(caster) /10\r\n    set id = GetHandleId( target )\r\n    \r\n    call UnitAddAbility( target, 'A05C' )\r\n\r\n    set id = GetHandleId( target )\r\n    if LoadTimerHandle( udg_hash, id, StringHash( \"shmr\" ) ) == null  then\r\n        call SaveTimerHandle( udg_hash, id, StringHash( \"shmr\" ), CreateTimer() )\r\n    endif\r\n    set id = GetHandleId( LoadTimerHandle( udg_hash, id, StringHash( \"shmr\" ) ) ) \r\n    call SaveUnitHandle( udg_hash, id, StringHash( \"shmr\" ), target )\r\n\tcall SaveUnitHandle( udg_hash, id, StringHash( \"shmrc\" ), caster )\r\n    call SaveReal( udg_hash, GetHandleId( target ), StringHash( \"shmrd\" ), mdmg )\r\n    call SaveInteger( udg_hash, id, StringHash( \"shmr\" ), R2I(t/0.5) )\r\n\tcall SaveReal( udg_hash, id, StringHash( \"shmr\" ), dmg )\r\n    call TimerStart( LoadTimerHandle( udg_hash, GetHandleId( target ), StringHash( \"shmr\" ) ), 0.5, true, function ShamanRSpell )\r\n\r\n    set caster = null\r\n    set target = null\r\nendfunction\r\n\r\n//===========================================================================\r\nfunction InitTrig_ShamanR takes nothing returns nothing\r\n    set gg_trg_ShamanR = CreateTrigger(  )\r\n    call TriggerRegisterAnyUnitEventBJ( gg_trg_ShamanR, EVENT_PLAYER_UNIT_SPELL_EFFECT )\r\n    call TriggerAddCondition( gg_trg_ShamanR, Condition( function Trig_ShamanR_Conditions ) )\r\n    call TriggerAddAction( gg_trg_ShamanR, function Trig_ShamanR_Actions )\r\nendfunction\r\n\r\n",
  "Events": [],
  "LocalVariables": [],
  "Conditions": [],
  "Actions": []
}