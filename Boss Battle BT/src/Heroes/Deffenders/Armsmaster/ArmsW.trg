{
  "Id": 50333027,
  "Comment": "",
  "IsScript": true,
  "RunOnMapInit": false,
  "Script": "scope ArmsmasterW initializer init\r\n\r\n    globals\r\n        private constant integer ID_ABILITY = 'A07R'\r\n        \r\n        private constant integer EFFECT = 'A097'\r\n        private constant integer BUFF = 'B08Y'\r\n        \r\n        private constant integer TAUNT_TRIGGERING = 1\r\n        private constant real DURATION = 4\r\n        private constant real REDUCTION_FIRST_LEVEL = 0.05\r\n        private constant real REDUCTION_LEVEL_BONUS = 0.03\r\n        \r\n        private constant integer ALTERNATIVE_AREA = 500\r\n        \r\n        private constant string ANIMATION = \"Abilities\\\\Spells\\\\NightElf\\\\Taunt\\\\TauntCaster.mdl\"\r\n    endglobals\r\n\r\n    function Trig_ArmsW_Conditions takes nothing returns boolean\r\n        return GetSpellAbilityId() == ID_ABILITY\r\n    endfunction\r\n\r\n    function ArmsWCast takes nothing returns nothing\r\n        local integer id = GetHandleId( GetExpiredTimer( ) )\r\n        local unit target = LoadUnitHandle( udg_hash, id, StringHash( \"armw\" ) )\r\n        local unit caster = LoadUnitHandle( udg_hash, id, StringHash( \"armwc\" ) )\r\n        \r\n        if IsUnitAlive(caster) and IsUnitAlive(target) and GetUnitAbilityLevel( target, EFFECT) > 0 then\r\n            call IssueTargetOrder( target, \"attack\", caster )\r\n        else\r\n            call IssueImmediateOrder( target, \"stop\" )\r\n            call UnitRemoveAbility( target, EFFECT )\r\n            call UnitRemoveAbility( target, BUFF )\r\n            call UnitRemoveAbility( caster, EFFECT )\r\n            call UnitRemoveAbility( caster, BUFF )\r\n            call FlushChildHashtable( udg_hash, id )\r\n            call DestroyTimer( GetExpiredTimer() )\r\n        endif\r\n        \r\n        set target = null\r\n        set caster = null\r\n    endfunction\r\n    \r\n    private function Main takes unit caster, unit target, real reduction, real duration returns nothing\r\n        local integer id\r\n        local integer casterId = GetHandleId( caster )\r\n        local integer targetId = GetHandleId( target )\r\n    \r\n        call UnitAddAbility( target, EFFECT )\r\n        call UnitAddAbility( caster, EFFECT )\r\n        call bufallst(caster, target, EFFECT, 0, 0, 0, 0, BUFF, \"armwe\", duration)\r\n        \r\n        call SaveUnitHandle( udg_hash, targetId, StringHash( \"armwt\" ), caster )\r\n        call SaveReal( udg_hash, targetId, StringHash( \"armwr\" ), reduction )\r\n        call SaveReal( udg_hash, casterId, StringHash( \"armwr\" ), reduction )\r\n        \r\n        call IssueTargetOrder( target, \"attack\", caster )\r\n        \r\n        set id = InvokeTimerWithUnit( target, \"armw\", TAUNT_TRIGGERING, true, function ArmsWCast )\r\n        call SaveUnitHandle( udg_hash, id, StringHash( \"armw\" ), target )\r\n        call SaveUnitHandle( udg_hash, id, StringHash( \"armwc\" ), caster )\r\n        \r\n        set target = null\r\n        set caster = null\r\n    endfunction\r\n    \r\n    private function Alternative takes unit caster, real reduction, real duration returns nothing \r\n        local group g = CreateGroup()\r\n        local unit u\r\n    \r\n        call GroupEnumUnitsInRange( g, GetUnitX( caster ), GetUnitY( caster ), ALTERNATIVE_AREA, null )\r\n        loop\r\n            set u = FirstOfGroup(g)\r\n            exitwhen u == null\r\n            if unitst( u, caster, TARGET_ENEMY ) then \r\n                call Main( caster, u, reduction, duration )\r\n            endif\r\n            call GroupRemoveUnit(g,u)\r\n        endloop\r\n        \r\n        call GroupClear( g )\r\n        call DestroyGroup( g )\r\n        set u = null\r\n        set g = null\r\n        set caster = null\r\n    endfunction\r\n    \r\n    function Trig_ArmsW_Actions takes nothing returns nothing \r\n        local unit caster\r\n        local unit target\r\n        local integer lvl\r\n        local real reduction\r\n        local real t\r\n        \r\n        if CastLogic() then\r\n            set caster = udg_Caster\r\n            set target = udg_Target\r\n            set lvl = udg_Level\r\n            set t = udg_Time\r\n        elseif RandomLogic() then\r\n            set caster = udg_Caster\r\n            set target = randomtarget( caster, 600, \"enemy\", \"\", \"\", \"\", \"\" )\r\n            set lvl = udg_Level\r\n            set t = DURATION\r\n            call textst( udg_string[0] + GetObjectName(ID_ABILITY), caster, 64, 90, 10, 1.5 )\r\n            if target == null then\r\n                set caster = null\r\n                return\r\n            endif\r\n        else\r\n            set caster = GetSpellAbilityUnit()\r\n            set target = GetSpellTargetUnit()\r\n            set lvl = GetUnitAbilityLevel(GetSpellAbilityUnit(), GetSpellAbilityId())\r\n            set t = DURATION\r\n        endif\r\n        \r\n        set reduction = REDUCTION_FIRST_LEVEL+(REDUCTION_LEVEL_BONUS*lvl)\r\n        \r\n        if Aspects_IsHeroAspectActive( caster, ASPECT_02 ) then\r\n            call Alternative( caster, reduction, t )\r\n        else\r\n            call Main( caster, target, reduction, t )\r\n        endif\r\n        call DestroyEffect( AddSpecialEffectTarget( ANIMATION, caster, \"origin\" ) )\r\n        \r\n         set caster = null\r\n         set target = null\r\n    endfunction\r\n    \r\n    private function OnDamageChange_Condition takes nothing returns boolean\r\n        return udg_IsDamageSpell == false and GetUnitAbilityLevel(udg_DamageEventSource, 'B08Y') > 0\r\n    endfunction\r\n    \r\n    private function Damage_Alternative takes unit dealer, unit target returns nothing\r\n        local real damageReduction = LoadReal( udg_hash, GetHandleId( dealer ), StringHash( \"armwr\" ))\r\n        local integer targetId = GetHandleId( target )\r\n        \r\n        set udg_DamageEventAmount = udg_DamageEventAmount - (Event_OnDamageChange_StaticDamage*damageReduction)\r\n        if LoadUnitHandle( udg_hash, targetId, StringHash( \"armwt\" ) ) == dealer then\r\n            set udg_DamageEventAmount = udg_DamageEventAmount - (Event_OnDamageChange_StaticDamage*damageReduction)\r\n            call bufallst(dealer, target, EFFECT, 0, 0, 0, 0, BUFF, \"armwe\", DURATION)\r\n        endif\r\n        \r\n        set dealer = null\r\n        set target = null\r\n    endfunction\r\n    \r\n    private function Damage_Main takes unit dealer, unit target returns nothing\r\n        local real damageReduction = LoadReal( udg_hash, GetHandleId( dealer ), StringHash( \"armwr\" ))\r\n        local integer targetId = GetHandleId( target )\r\n        \r\n        set udg_DamageEventAmount = udg_DamageEventAmount - (Event_OnDamageChange_StaticDamage*damageReduction)\r\n        if LoadUnitHandle( udg_hash, targetId, StringHash( \"armwt\" ) ) == dealer then\r\n            call bufallst(dealer, target, EFFECT, 0, 0, 0, 0, BUFF, \"armwe\", DURATION)\r\n        endif\r\n        \r\n        set dealer = null\r\n        set target = null\r\n    endfunction\r\n    \r\n    private function OnDamageChange takes nothing returns nothing\r\n        if Aspects_IsHeroAspectActive(udg_DamageEventSource, ASPECT_02) then\r\n            call Damage_Alternative(udg_DamageEventSource, udg_DamageEventTarget)\r\n        else\r\n            call Damage_Main( udg_DamageEventSource, udg_DamageEventTarget )\r\n        endif\r\n    endfunction\r\n    \r\n    private function DeleteBuff_Conditions takes nothing returns boolean\r\n        return GetUnitAbilityLevel( Event_DeleteBuff_Unit, EFFECT) > 0\r\n    endfunction\r\n    \r\n    private function DeleteBuff takes nothing returns nothing\r\n        local unit hero = Event_DeleteBuff_Unit\r\n\r\n        call UnitRemoveAbility( hero, EFFECT )\r\n        call UnitRemoveAbility( hero, BUFF )\r\n        \r\n        set hero = null\r\n    endfunction\r\n\r\n    //===========================================================================\r\n    private function init takes nothing returns nothing\r\n        set gg_trg_ArmsW = CreateTrigger(  )\r\n        call TriggerRegisterAnyUnitEventBJ( gg_trg_ArmsW, EVENT_PLAYER_UNIT_SPELL_EFFECT )\r\n        call TriggerAddCondition( gg_trg_ArmsW, Condition( function Trig_ArmsW_Conditions ) )\r\n        call TriggerAddAction( gg_trg_ArmsW, function Trig_ArmsW_Actions )\r\n        \r\n        call CreateEventTrigger( \"Event_OnDamageChange_Real\", function OnDamageChange, function OnDamageChange_Condition )\r\n        \r\n        call CreateEventTrigger( \"Event_DeleteBuff_Real\", function DeleteBuff, function DeleteBuff_Conditions )\r\n    endfunction\r\n\r\nendscope",
  "Events": [],
  "LocalVariables": [],
  "Conditions": [],
  "Actions": []
}