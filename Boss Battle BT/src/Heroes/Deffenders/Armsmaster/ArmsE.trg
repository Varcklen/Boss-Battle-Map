{
  "Id": 50333028,
  "Comment": "",
  "IsScript": true,
  "RunOnMapInit": false,
  "Script": "scope ArmsmasterE initializer init\r\n\r\n    globals\r\n        private constant integer ID_HERO = 'N055'\r\n        private constant integer ID_ABILITY = 'A09I'\r\n        private constant integer ID_ARMOR_BONUS_ABILITY = 'A09J'\r\n        private constant integer ID_ITEM_REWARD = 'I03X'\r\n    \r\n        private constant integer ATTACK_BONUS = 4\r\n        \r\n        private constant integer POSITION_TO_CREATE_ITEM_REWARD = 1\r\n        private constant integer CHANCE_FIRST_LEVEL = 4\r\n        private constant integer CHANCE_LEVEL_BONUS = 2\r\n        \r\n        private constant integer ALTERNATIVE_CHANCE_BONUS = 2\r\n        \r\n        private integer WeaponSum = 0\r\n    endglobals\r\n\r\n    function Trig_ArmsE_Conditions takes nothing returns boolean\r\n        return GetLearnedSkill() == ID_ABILITY\r\n    endfunction\r\n    \r\n    private function AddAttack takes unit hero, integer attackBonus returns nothing\r\n        if Aspects_IsHeroAspectActive( hero, ASPECT_03 ) == false then\r\n            call BlzSetUnitBaseDamage( hero, BlzGetUnitBaseDamage(hero, 0) + attackBonus, 0 )\r\n        endif\r\n        set hero = null\r\n    endfunction\r\n\r\n    function Trig_ArmsE_Actions takes nothing returns nothing\r\n        local unit hero = GetLearningUnit()\r\n        local integer index = GetUnitUserData(hero)\r\n        local integer bonus = ATTACK_BONUS*udg_Set_Weapon_Number[index]\r\n        local integer level = GetUnitAbilityLevel( hero, ID_ABILITY)\r\n\r\n        call UnitAddAbility( hero, ID_ARMOR_BONUS_ABILITY)\r\n        call SetUnitAbilityLevel(hero, ID_ARMOR_BONUS_ABILITY, level )\r\n        if level == 1 then\r\n            //call BlzSetUnitBaseDamage( hero, BlzGetUnitBaseDamage(hero, 0) + bonus, 0 )\r\n            call AddAttack(hero, bonus)\r\n            set WeaponSum = bonus\r\n        endif\r\n        \r\n        set hero = null\r\n    endfunction\r\n    \r\n    //Ability Removed\r\n    private function NullingAbility_Conditions takes nothing returns boolean\r\n        return GetUnitAbilityLevel( udg_Event_NullingAbility_Unit, ID_ABILITY) > 0\r\n    endfunction\r\n    \r\n    private function NullingAbility takes nothing returns nothing\r\n        call UnitRemoveAbility( udg_Event_NullingAbility_Unit, ID_ARMOR_BONUS_ABILITY)\r\n        //call BlzSetUnitBaseDamage( udg_Event_NullingAbility_Unit, BlzGetUnitBaseDamage(udg_Event_NullingAbility_Unit, 0) - WeaponSum, 0 )\r\n        call AddAttack(udg_Event_NullingAbility_Unit, -WeaponSum)\r\n        set WeaponSum = 0\r\n    endfunction\r\n    \r\n    //Add Weapon\r\n    private function UnitAddWeapon_Conditions takes nothing returns boolean\r\n        return GetUnitAbilityLevel( Event_UnitAddWeapon_Hero, ID_ABILITY) > 0\r\n    endfunction\r\n    \r\n    private function UnitAddWeapon takes nothing returns nothing\r\n        //call BlzSetUnitBaseDamage( Event_UnitAddWeapon_Hero, BlzGetUnitBaseDamage(Event_UnitAddWeapon_Hero, 0) + ATTACK_BONUS, 0 )\r\n        call AddAttack(Event_UnitAddWeapon_Hero, ATTACK_BONUS)\r\n        set WeaponSum = WeaponSum + ATTACK_BONUS\r\n    endfunction\r\n\r\n    //Lose Weapon\r\n    private function UnitLoseWeapon_Conditions takes nothing returns boolean\r\n        return GetUnitAbilityLevel( Event_UnitLoseWeapon_Hero, ID_ABILITY) > 0\r\n    endfunction\r\n    \r\n    private function UnitLoseWeapon takes nothing returns nothing\r\n        set WeaponSum = WeaponSum - ATTACK_BONUS\r\n        //call BlzSetUnitBaseDamage( Event_UnitLoseWeapon_Hero, BlzGetUnitBaseDamage(Event_UnitLoseWeapon_Hero, 0) - ATTACK_BONUS, 0 )\r\n        call AddAttack(Event_UnitLoseWeapon_Hero, -ATTACK_BONUS)\r\n    endfunction\r\n\r\n    //Add Ultimate Weapon\r\n    private function UnitAddUltimateWeapon_Conditions takes nothing returns boolean\r\n        return GetUnitAbilityLevel( Event_UnitAddUltimateWeapon_Hero, ID_ABILITY) > 0\r\n    endfunction\r\n    \r\n    private function UnitAddUltimateWeapon takes nothing returns nothing\r\n        //call BlzSetUnitBaseDamage( Event_UnitAddUltimateWeapon_Hero, BlzGetUnitBaseDamage(Event_UnitAddUltimateWeapon_Hero, 0) + WeaponSum, 0 )\r\n        call AddAttack(Event_UnitAddUltimateWeapon_Hero, WeaponSum )\r\n    endfunction\r\n\r\n    //Lose Ultimate Weapon\r\n    private function UnitLoseUltimateWeapon_Conditions takes nothing returns boolean\r\n        return GetUnitAbilityLevel( Event_UnitLoseUltimateWeapon_Hero, ID_ABILITY) > 0\r\n    endfunction\r\n    \r\n    private function UnitLoseUltimateWeapon takes nothing returns nothing\r\n        //call BlzSetUnitBaseDamage( Event_UnitLoseUltimateWeapon_Hero, BlzGetUnitBaseDamage(Event_UnitLoseUltimateWeapon_Hero, 0) - WeaponSum, 0 )\r\n        call AddAttack(Event_UnitLoseUltimateWeapon_Hero, -WeaponSum )\r\n    endfunction\r\n    \r\n    //Create Weapon Gift\r\n    private function ItemRewardCreate_Conditions takes nothing returns boolean\r\n        return GetUnitAbilityLevel( Event_ItemRewardCreate_Hero, ID_ABILITY) > 0 and ItemCreate_ItemPosition(Event_ItemRewardCreate_Position, POSITION_TO_CREATE_ITEM_REWARD)\r\n    endfunction\r\n    \r\n    private function Main takes unit hero, integer chance returns nothing \r\n        if LuckChance( hero, chance ) then\r\n            set Event_ItemRewardCreate_ItemReward = ID_ITEM_REWARD\r\n        endif\r\n        set hero = null\r\n    endfunction\r\n    \r\n    private function Alternative takes unit hero, integer chance returns nothing\r\n        if IsItemsRefreshed == false then\r\n            //call BJDebugMsg(\"Atlernative bonus works!\")\r\n            set chance = chance * ALTERNATIVE_CHANCE_BONUS\r\n        endif\r\n        call Main( hero, chance )\r\n        set hero = null\r\n    endfunction\r\n    \r\n    private function ItemRewardCreate takes nothing returns nothing\r\n        local unit hero = Event_ItemRewardCreate_Hero\r\n        local integer level = GetUnitAbilityLevel( hero, ID_ABILITY)\r\n        local integer chance = CHANCE_FIRST_LEVEL+(CHANCE_LEVEL_BONUS*level)\r\n\r\n        if Aspects_IsHeroAspectActive( hero, ASPECT_03 ) then\r\n            call Alternative( hero, chance )\r\n        else\r\n            call Main( hero, chance )\r\n        endif\r\n        \r\n        set hero = null\r\n    endfunction\r\n    \r\n    //Aspect Added\r\n    private function AspectAdded_Conditions takes nothing returns boolean\r\n        return GetUnitTypeId(Event_AspectAdded_Hero) == ID_HERO and Event_AspectAdded_Key02 == 3\r\n    endfunction\r\n    \r\n    private function AspectAdded takes nothing returns nothing\r\n        call BlzSetUnitBaseDamage( Event_AspectAdded_Hero, BlzGetUnitBaseDamage(Event_AspectAdded_Hero, 0) - WeaponSum, 0 )\r\n    endfunction\r\n    \r\n    //Aspect Removed\r\n    private function AspectRemoved_Conditions takes nothing returns boolean\r\n        return GetUnitTypeId(Event_AspectRemoved_Hero) == ID_HERO and Event_AspectAdded_Key02 == 3\r\n    endfunction\r\n    \r\n    private function AspectRemoved takes nothing returns nothing\r\n        call BlzSetUnitBaseDamage( Event_AspectRemoved_Hero, BlzGetUnitBaseDamage(Event_AspectRemoved_Hero, 0) + WeaponSum, 0 )\r\n    endfunction\r\n\r\n    //===========================================================================\r\n    private function init takes nothing returns nothing\r\n        set gg_trg_ArmsE = CreateTrigger(  )\r\n        call TriggerRegisterAnyUnitEventBJ( gg_trg_ArmsE, EVENT_PLAYER_HERO_SKILL )\r\n        call TriggerAddCondition( gg_trg_ArmsE, Condition( function Trig_ArmsE_Conditions ) )\r\n        call TriggerAddAction( gg_trg_ArmsE, function Trig_ArmsE_Actions )\r\n        \r\n        call CreateEventTrigger( \"Event_UnitAddWeapon_Real\", function UnitAddWeapon, function UnitAddWeapon_Conditions )\r\n        call CreateEventTrigger( \"Event_UnitLoseWeapon_Real\", function UnitLoseWeapon, function UnitLoseWeapon_Conditions )\r\n        call CreateEventTrigger( \"Event_UnitAddUltimateWeapon_Real\", function UnitAddUltimateWeapon, function UnitAddUltimateWeapon_Conditions )\r\n        call CreateEventTrigger( \"Event_UnitLoseUltimateWeapon_Real\", function UnitLoseUltimateWeapon, function UnitLoseUltimateWeapon_Conditions )\r\n        \r\n        call CreateEventTrigger( \"udg_Event_NullingAbility_Real\", function NullingAbility, function NullingAbility_Conditions )\r\n        call CreateEventTrigger( \"Event_ItemRewardCreate_Real\", function ItemRewardCreate, function ItemRewardCreate_Conditions )\r\n        \r\n        call CreateEventTrigger( \"Event_AspectAdded_Real\", function AspectAdded, function AspectAdded_Conditions )\r\n        call CreateEventTrigger( \"Event_AspectRemoved_Real\", function AspectRemoved, function AspectRemoved_Conditions )\r\n    endfunction\r\n\r\nendscope",
  "Events": [],
  "LocalVariables": [],
  "Conditions": [],
  "Actions": []
}