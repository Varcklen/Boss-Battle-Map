{
  "Id": 50332970,
  "Comment": "",
  "IsScript": true,
  "RunOnMapInit": false,
  "Script": "function Trig_MaidenQ_Conditions takes nothing returns boolean\r\n    return GetSpellAbilityId() == 'A16G' and combat( GetSpellAbilityUnit(), true, GetSpellAbilityId() )\r\nendfunction\r\n\r\nfunction MaidenQMove_Condition takes unit caster, unit target, integer id returns boolean\r\n    local boolean isWork = true\r\n    local unit correctTarget = LoadUnitHandle( udg_hash, GetHandleId( caster ), StringHash( \"mdnqtt\" ) )\r\n    local integer pattent = LoadInteger(udg_hash, id, StringHash( \"mdnqp\" ) )\r\n    \r\n    if IsUnitInvisible( target, Player(PLAYER_NEUTRAL_AGGRESSIVE)) then\r\n        set isWork = false\r\n    elseif pattent != udg_Pattern then\r\n        set isWork = false\r\n    elseif IsUnitEnemy( target, GetOwningPlayer( caster ) ) then\r\n        set isWork = false\r\n    elseif caster == target then\r\n        set isWork = false\r\n    elseif correctTarget != target then\r\n        set isWork = false\r\n    elseif IsUnitDead(caster) then\r\n        set isWork = false\r\n    elseif IsUnitDead(target) then\r\n        set isWork = false\r\n    elseif GetUnitAbilityLevel(caster, 'Avul') > 0 then//Invul\r\n        set isWork = false\r\n    elseif GetUnitAbilityLevel(caster, 'A17U') > 0 then//Pudge Q\r\n        set isWork = false\r\n    elseif GetUnitAbilityLevel(caster, 'A16J') == 0 then//Invul from Q\r\n        set isWork = false\r\n    elseif GetUnitAbilityLevel(target, 'A16I') == 0 then//Buff from Q\r\n        set isWork = false\r\n    endif\r\n    \r\n    set caster = null\r\n    set target = null\r\n    set correctTarget = null\r\n    return isWork\r\nendfunction\r\n\r\nfunction MaidenQMove takes nothing returns nothing\r\n    local integer id = GetHandleId( GetExpiredTimer() )\r\n    local unit caster = LoadUnitHandle( udg_hash, id, StringHash( \"mdnq\" ) )\r\n    local unit target = LoadUnitHandle( udg_hash, id, StringHash( \"mdnqt\" ) )\r\n    local lightning l = LoadLightningHandle( udg_hash, GetHandleId( target ), StringHash( \"mdnql\" ) )\r\n\r\n    if MaidenQMove_Condition(caster, target, id) then\r\n        call SetUnitX(caster,GetUnitX( target ) + 150)\r\n        call SetUnitY(caster,GetUnitY( target ) + 150)\r\n    \tcall MoveLightningUnits( l, caster, target )\r\n    else\r\n        if IsUnitAlive(target) then\r\n            call UnitRemoveAbility( target, 'A16I' )\r\n            call UnitRemoveAbility( target, 'B07A' )\r\n        endif\r\n        call SetUnitPathing( caster, true )\r\n        call UnitRemoveAbility( caster, 'A16J' )\r\n        call UnitRemoveAbility( caster, 'A01V' )\r\n        call UnitRemoveAbility( caster, 'B08F' )\r\n        call UnitRemoveAbility( target, 'A04V' )\r\n    \tcall SaveUnitHandle( udg_hash, GetHandleId( caster ), StringHash( \"mdnqtt\" ), caster )\r\n    \tcall DestroyLightning( l )\r\n    \tif not( RectContainsUnit( udg_Boss_Rect, caster) ) and udg_combatlogic[GetPlayerId(GetOwningPlayer( caster )) + 1] then\r\n        \tcall SetUnitPositionLoc( caster, GetRectCenter( udg_Boss_Rect ) )\r\n    \tendif\r\n        call FlushChildHashtable( udg_hash, id )\r\n        call DestroyTimer( GetExpiredTimer() )\r\n    endif\r\n    \r\n    set caster = null\r\n    set target = null\r\n    set l = null\r\nendfunction\r\n\r\nfunction MaidenQStart takes nothing returns nothing\r\n    local integer id = GetHandleId( GetExpiredTimer() )\r\n    local unit caster = LoadUnitHandle( udg_hash, id, StringHash( \"mdnq1\" ) )\r\n    local unit target = LoadUnitHandle( udg_hash, id, StringHash( \"mdnq1t\" ) )\r\n    local lightning l\r\n    local integer lvl = LoadInteger( udg_hash, id, StringHash( \"mdnq1\" ) )\r\n    local integer id1\r\n\r\n\tcall SetUnitPathing( caster, false )\r\n    call UnitAddAbility( target, 'A16I' )\r\n    call UnitAddAbility( caster, 'A16J' )\r\n    call UnitAddAbility( caster, 'A01V' )\r\n    call UnitAddAbility( target, 'A04V' )\r\n    call SetUnitAbilityLevel( target, 'A04V', lvl )\r\n\r\n\tset l = AddLightningEx(\"HWPB\", true, GetUnitX(caster), GetUnitY(caster), GetUnitFlyHeight(caster) , GetUnitX(target), GetUnitY(target), GetUnitFlyHeight(target))\r\n\r\n    set id1 = GetHandleId( target )\r\n    if LoadTimerHandle( udg_hash, id1, StringHash( \"mdnq\" ) ) == null  then\r\n        call SaveTimerHandle( udg_hash, id1, StringHash( \"mdnq\" ), CreateTimer() )\r\n    endif\r\n    set id1 = GetHandleId( LoadTimerHandle( udg_hash, id1, StringHash( \"mdnq\" ) ) ) \r\n    call SaveUnitHandle( udg_hash, id1, StringHash( \"mdnq\" ), caster )\r\n    call SaveUnitHandle( udg_hash, id1, StringHash( \"mdnqt\" ), target )\r\n\tcall SaveUnitHandle( udg_hash, GetHandleId( caster ), StringHash( \"mdnqtt\" ), target )\r\n    call SaveLightningHandle( udg_hash, GetHandleId( target ), StringHash( \"mdnql\" ), l )\r\n    call SaveInteger(udg_hash, id1, StringHash( \"mdnqp\" ), udg_Pattern)\r\n    call TimerStart( LoadTimerHandle( udg_hash, GetHandleId( target ), StringHash( \"mdnq\" ) ), 0.02, true, function MaidenQMove )\r\n\r\n\tcall DestroyTimer( GetExpiredTimer() )\r\n\r\n\tset caster = null\r\n\tset target = null\r\n    set l = null\r\nendfunction\r\n\r\nfunction Trig_MaidenQ_Actions takes nothing returns nothing\r\n    local integer id \r\n    local unit caster\r\n    local unit target\r\n    local integer lvl\r\n    local unit currentBindedUnit\r\n    local boolean isTargetNotOldTarget = true\r\n    \r\n    if CastLogic() then\r\n        set caster = udg_Caster\r\n        set target = udg_Target\r\n        set lvl = udg_Level\r\n    elseif RandomLogic() then\r\n        set caster = udg_Caster\r\n        set target = randomtarget( caster, 900, \"ally\", \"hero\", \"notcaster\", \"vulnerable\", \"\" )\r\n        set lvl = udg_Level\r\n        call textst( udg_string[0] + GetObjectName('A16G'), caster, 64, 90, 10, 1.5 )\r\n        if target == null then\r\n            set caster = null\r\n            return\r\n        endif\r\n    else\r\n        set caster = GetSpellAbilityUnit()\r\n        set target = GetSpellTargetUnit()\r\n        set lvl = GetUnitAbilityLevel(GetSpellAbilityUnit(), GetSpellAbilityId())\r\n    endif\r\n\r\n\tset currentBindedUnit = LoadUnitHandle( udg_hash, GetHandleId( caster ), StringHash( \"mdnqtt\" ) )\r\n\tif currentBindedUnit == target then\r\n\t\tset isTargetNotOldTarget = false\r\n\tendif\r\n    call dummyspawn( caster, 1, 0, 0, 0 )\r\n\tcall SaveUnitHandle( udg_hash, GetHandleId( caster ), StringHash( \"mdnqtt\" ), bj_lastCreatedUnit )\r\n    if currentBindedUnit != null then\r\n        call TimerStart( LoadTimerHandle( udg_hash, GetHandleId( currentBindedUnit ), StringHash( \"mdnq\" ) ), 0.01, false, function MaidenQMove )\r\n    endif\r\n\r\n    if isTargetNotOldTarget and caster != target and IsUnitAlly( target, GetOwningPlayer( caster ) ) and IsUnitType( target, UNIT_TYPE_HERO) and target != null then\r\n    \tset id = GetHandleId( target )\r\n    \tif LoadTimerHandle( udg_hash, id, StringHash( \"mdnq1\" ) ) == null  then\r\n    \t\tcall SaveTimerHandle( udg_hash, id, StringHash( \"mdnq1\" ), CreateTimer() )\r\n    \tendif\r\n    \tset id = GetHandleId( LoadTimerHandle( udg_hash, id, StringHash( \"mdnq1\" ) ) ) \r\n    \tcall SaveUnitHandle( udg_hash, id, StringHash( \"mdnq1\" ), caster )\r\n    \tcall SaveUnitHandle( udg_hash, id, StringHash( \"mdnq1t\" ), target )\r\n    \tcall SaveInteger( udg_hash, id, StringHash( \"mdnq1\" ), lvl )\r\n    \tcall TimerStart( LoadTimerHandle( udg_hash, GetHandleId( target ), StringHash( \"mdnq1\" ) ), 0.01, false, function MaidenQStart )\r\n    endif  \r\n\r\n    set caster = null\r\n    set target = null\r\n    set currentBindedUnit = null\r\nendfunction\r\n\r\n//===========================================================================\r\nfunction InitTrig_MaidenQ takes nothing returns nothing\r\n    set gg_trg_MaidenQ = CreateTrigger(  )\r\n    call TriggerRegisterAnyUnitEventBJ( gg_trg_MaidenQ, EVENT_PLAYER_UNIT_SPELL_EFFECT )\r\n    call TriggerAddCondition( gg_trg_MaidenQ, Condition( function Trig_MaidenQ_Conditions ) )\r\n    call TriggerAddAction( gg_trg_MaidenQ, function Trig_MaidenQ_Actions )\r\nendfunction",
  "Events": [],
  "LocalVariables": [],
  "Conditions": [],
  "Actions": []
}