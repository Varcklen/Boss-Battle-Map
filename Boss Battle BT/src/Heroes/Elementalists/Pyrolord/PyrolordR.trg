{
  "Id": 50333255,
  "Comment": "",
  "IsScript": true,
  "RunOnMapInit": false,
  "Script": "scope PyrolordR initializer init\r\n\t\r\n\tglobals \r\n\t\tprivate constant integer ABILITY_ID = 'A0NM'\r\n\t\r\n\t    private constant real DAMAGE = 35\r\n\t    private constant integer KILL_CONDITION = 6\r\n\t    private constant integer SEARCH_RANGE = 1200\r\n\t    private constant integer MIN_EXPLODE_RANGE = 50\r\n\t    private constant integer ARROWS_LIMIT = 100\r\n\t    \r\n\t    private constant integer ARROWS_INITIAL = 2\r\n\t    private constant integer ARROWS_PER_LEVEL = 1\r\n\t    \r\n\t    private constant string DEATH_ANIMATION = \"Abilities\\\\Spells\\\\Other\\\\Incinerate\\\\FireLordDeathExplode.mdl\"\r\n\t    \r\n\t    private constant real TICK = 0.2\r\n\tendglobals\r\n\t\r\n\tprivate function condition takes nothing returns boolean\r\n\t    return GetSpellAbilityId() == ABILITY_ID\r\n\tendfunction\r\n\t\r\n\tprivate function RemoveProjectile takes unit projectile returns nothing\r\n\t\tcall DestroyEffect( AddSpecialEffect( DEATH_ANIMATION, GetUnitX(projectile), GetUnitY(projectile)) )\r\n        call RemoveUnit( projectile )\r\n        call DestroyTimer( GetExpiredTimer() )\r\n\tendfunction\r\n\t\r\n\tprivate function PyrolordRCast takes nothing returns nothing\r\n\t    local integer id = GetHandleId( GetExpiredTimer( ) )\r\n\t    local unit projectile = LoadUnitHandle( udg_hash, id, StringHash( \"pyrolord_r\" ) )\r\n\t    local unit target = LoadUnitHandle( udg_hash, id, StringHash( \"pyrolord_r_target\" ) )\r\n\t    //local unit caster = LoadUnitHandle( udg_hash, id, StringHash( \"pyrolord_r_caster\" ) )\r\n\t    local real dmg = LoadReal( udg_hash, id, StringHash( \"pyrolord_r_damage\" ) )\r\n\t    local boolean isProjectileAlive = IsUnitAliveBJ(projectile)\r\n\t    local boolean isTargetAlive = IsUnitAliveBJ(target)\r\n\t    \r\n\t    if isTargetAlive then\r\n\t        if DistanceBetweenUnits(target, projectile) < MIN_EXPLODE_RANGE then\r\n\t            call UnitDamageTarget( projectile, target, dmg, true, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_MAGIC, WEAPON_TYPE_WHOKNOWS)\r\n\t            call RemoveProjectile( projectile )\r\n\t        else\r\n\t            call IssuePointOrder( projectile, \"move\", GetUnitX( target ), GetUnitY( target ) )\r\n\t        endif\r\n\t    elseif isProjectileAlive and isTargetAlive == false then\r\n\t        set target = randomtarget( projectile, SEARCH_RANGE, \"enemy\", \"\", \"\", \"\", \"\" )\r\n\t        if target == null then\r\n\t        \tcall RemoveProjectile( projectile )\r\n\t        else\r\n\t            call IssuePointOrder( projectile, \"move\", GetUnitX( target ), GetUnitY( target ) )\r\n\t            call SaveUnitHandle( udg_hash, id, StringHash( \"pyrolord_r_target\" ), target )\r\n\t        endif\r\n\t    elseif isProjectileAlive == false then\r\n\t        call RemoveProjectile( projectile )\r\n\t    endif\r\n\t    \r\n\t    //set caster = null\r\n\t    set target = null\r\n\t    set projectile = null\r\n\tendfunction\r\n\t\r\n\tprivate function FindTarget takes unit caster, real damage returns boolean\r\n\t\tlocal unit target\r\n\t\tlocal integer id\r\n\t\tlocal real rand\r\n\t\t\r\n\t\tset target = randomtarget( caster, SEARCH_RANGE, \"enemy\", \"\", \"\", \"\", \"\" )\r\n\t\t\r\n\t\tif target == null then\r\n\t\t\treturn false\r\n\t\tendif\r\n\t        \r\n        call dummyspawn( caster, 0, 'A017', 'A0N5', 0 )\r\n        call SetUnitMoveSpeed( bj_lastCreatedUnit, GetRandomReal( 300, 500 ) )\r\n        set rand = GetRandomReal( 0.5, 2 )\r\n        call SetUnitScale( bj_lastCreatedUnit, rand, rand, rand )\r\n        call IssuePointOrder( bj_lastCreatedUnit, \"move\", GetUnitX( target ), GetUnitY( target ) )\r\n        \r\n        set id = InvokeTimerWithUnit( bj_lastCreatedUnit, \"pyrolord_r\", TICK, true, function PyrolordRCast )\r\n        call SaveUnitHandle( udg_hash, id, StringHash( \"pyrolord_r_target\" ), target )\r\n        call SaveUnitHandle( udg_hash, id, StringHash( \"pyrolord_r_caster\" ), caster )\r\n        call SaveReal( udg_hash, id, StringHash( \"pyrolord_r_damage\" ), damage )\r\n\t\t\r\n\t\tset target = null\r\n\t\treturn true\r\n\tendfunction\r\n\t\r\n\tprivate function action takes nothing returns nothing\r\n\t    local unit caster\r\n\t    local integer lvl\r\n\t    local integer arrows\r\n\t    local integer i\r\n\t    local integer id\r\n\t    local integer bonus\r\n\t    local real damage\r\n\t    local boolean isEnemyFound = true\r\n\t    \r\n\t    if CastLogic() then\r\n\t        set caster = udg_Caster\r\n\t        set lvl = udg_Level\r\n\t    elseif RandomLogic() then\r\n\t        set caster = udg_Caster\r\n\t        set lvl = udg_Level\r\n\t        call textst( udg_string[0] + GetObjectName(ABILITY_ID), caster, 64, 90, 10, 1.5 )\r\n\t    else\r\n\t        set caster = GetSpellAbilityUnit()\r\n\t        set lvl = GetUnitAbilityLevel(GetSpellAbilityUnit(), GetSpellAbilityId())\r\n\t    endif\r\n\t    \r\n\t    set bonus = R2I(LoadInteger( udg_hash, GetHandleId( caster ), StringHash( \"killb\" ))/KILL_CONDITION)\r\n\t    \r\n\t    set damage = (PyrolordExtraDamage + DAMAGE) * GetUnitSpellPower(caster)\r\n\t    set arrows = IMinBJ( ARROWS_LIMIT, bonus + ARROWS_INITIAL + (ARROWS_PER_LEVEL * lvl) )\r\n\t    \r\n\t    set i = 1\r\n\t    loop\r\n\t        exitwhen i > arrows or isEnemyFound == false\r\n\t        set isEnemyFound = FindTarget(caster, damage)\r\n\t        set i = i + 1\r\n\t    endloop\r\n\t    \r\n\t    if isEnemyFound == false and GetSpellAbilityId() == ABILITY_ID then\r\n\t        call textst( \"|c00909090 No enemies found\", caster, 64, 90, 10, 1 )\r\n\t        \r\n\t        call LaunchShortCooldown(caster, GetSpellAbilityId(), lvl)\r\n\t    endif\r\n\t    \r\n\t    set caster = null\r\n\tendfunction\r\n\t\r\n\t//===========================================================================\r\n\tprivate function init takes nothing returns nothing\r\n\t    set gg_trg_PyrolordR = CreateTrigger(  )\r\n\t    call TriggerRegisterAnyUnitEventBJ( gg_trg_PyrolordR, EVENT_PLAYER_UNIT_SPELL_EFFECT )\r\n\t    call TriggerAddCondition( gg_trg_PyrolordR, Condition( function condition ) )\r\n\t    call TriggerAddAction( gg_trg_PyrolordR, function action )\r\n\tendfunction\r\n\t\r\nendscope",
  "Events": [],
  "LocalVariables": [],
  "Conditions": [],
  "Actions": []
}