{
  "Id": 50333238,
  "Comment": "",
  "IsScript": true,
  "RunOnMapInit": false,
  "Script": "function Trig_IncarnationR_Conditions takes nothing returns boolean\r\n    return GetSpellAbilityId() == 'A0V0' and combat( GetSpellAbilityUnit(), true, GetSpellAbilityId() )\r\nendfunction\r\n\r\nfunction IncarnationRAoE takes unit caster, unit dummy, real x, real y, real dmg, real area, string who, group h returns nothing\r\n    local group g = CreateGroup()\r\n    local unit u\r\n    \r\n    call GroupEnumUnitsInRange( g, x, y, area, null )\r\n    loop\r\n        set u = FirstOfGroup(g)\r\n        exitwhen u == null\r\n        if unitst( u, caster, who ) and not(IsUnitInGroup(u, h)) then\r\n            call UnitDamageTarget( dummy, u, dmg, true, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_MAGIC, WEAPON_TYPE_WHOKNOWS )\r\n            call GroupAddUnit(h,u)\r\n        endif\r\n        call GroupRemoveUnit(g,u)\r\n    endloop\r\n    \r\n    call GroupClear( g )\r\n    call DestroyGroup( g )\r\n    set u = null\r\n    set g = null\r\n    set caster = null\r\n    set dummy = null\r\n    set h = null\r\nendfunction\r\n  \r\nfunction IncarnationRCast takes nothing returns nothing\r\n    local integer id = GetHandleId( GetExpiredTimer() )\r\n\tlocal integer sk = LoadInteger( udg_hash, id, StringHash( \"incrsk\" ) )\r\n\tlocal integer lvl = LoadInteger( udg_hash, id, StringHash( \"incrlvl\" ) )\r\n    local real dmg = LoadReal( udg_hash, id, StringHash( \"incr\" ) )\r\n    local integer count = LoadInteger( udg_hash, id, StringHash( \"incrc\" ) ) + 1\r\n    local real dmgrift = LoadReal( udg_hash, id, StringHash( \"incrf\" ) )\r\n    local unit caster = LoadUnitHandle( udg_hash, id, StringHash( \"incr\" ) )\r\n    local unit dummy = LoadUnitHandle( udg_hash, id, StringHash( \"incrd\" ) )\r\n    local real x = LoadReal( udg_hash, id, StringHash( \"incrx\" ) )\r\n    local real y = LoadReal( udg_hash, id, StringHash( \"incry\" ) )\r\n    local real xc = GetUnitX( caster )\r\n    local real yc = GetUnitY( caster )\r\n    local real angle = Atan2( y - yc, x - xc )\r\n    local real NewX = xc + 20 * Cos( angle )\r\n    local real NewY = yc + 20 * Sin( angle )\r\n    local real IfX = ( x - xc ) * ( x - xc )\r\n    local real IfY = ( y - yc ) * ( y - yc )\r\n\tlocal group h = LoadGroupHandle( udg_hash, id, StringHash( \"incrg\" ) )\r\n    local group aoe\r\n    \r\n    if SquareRoot( IfX + IfY ) > 50 and GetUnitState( caster, UNIT_STATE_LIFE) > 0.405 and combat( caster, false, 0 ) and GetUnitAbilityLevel(caster, 'A16J') == 0 then\r\n        call SetUnitPosition( caster, NewX, NewY )\r\n        if count >= 5 then\r\n            call IncarnationRAoE(caster, dummy, NewX, NewY, dmg, 142, \"enemy\", h)\r\n            set count = 0\r\n        endif\r\n\t\tcall SaveGroupHandle( udg_hash, id, StringHash( \"incrg\" ), h )\r\n        call SaveInteger( udg_hash, id, StringHash( \"incrc\" ), count )\r\n    else\r\n\t\tif GetUnitState( caster, UNIT_STATE_LIFE) > 0.405 then\r\n            call IncarnationRift( caster, xc, yc, dmgrift)\r\n\t\tendif\r\n\t\tcall DestroyEffect( AddSpecialEffect( \"war3mapImported\\\\Soul Discharge Purple.mdx\", GetUnitX(caster), GetUnitY(caster) ) )\r\n\t\tcall SetUnitSkin( caster, sk )\r\n        call SetUnitPathing( caster, true )\r\n        call UnitRemoveAbility( caster, 'Avul' )\r\n        call PauseUnit( caster, false )\r\n        call RemoveUnit( dummy )\r\n        call FlushChildHashtable( udg_hash, id )\r\n        call DestroyTimer( GetExpiredTimer() )\r\n    endif\r\n    \r\n    set aoe = null\r\n\tset h = null\r\n    set caster = null\r\nendfunction\r\n\r\nfunction Trig_IncarnationR_Actions takes nothing returns nothing\r\n    local integer id \r\n    local integer lvl\r\n    local unit caster\r\n    local unit target\r\n    local real dmg\r\n\tlocal real dmgr\r\n    local real dmgrift\r\n    local real x\r\n    local real y\r\n\tlocal integer sk\r\n\tlocal group g = CreateGroup()\r\n    local unit u\r\n    local integer i\r\n    \r\n    if CastLogic() then\r\n        set caster = udg_Caster\r\n        set lvl = udg_Level\r\n\t\tset x = GetSpellTargetX()\r\n        set y = GetSpellTargetY()\r\n    elseif RandomLogic() then\r\n        set caster = udg_Caster\r\n        set lvl = udg_Level\r\n        call textst( udg_string[0] + GetObjectName('A0V0'), caster, 64, 90, 10, 1.5 )\r\n        set x = GetUnitX( caster ) + GetRandomReal( -650, 650 )\r\n        set y = GetUnitY( caster ) + GetRandomReal( -650, 650 )\r\n    else\r\n        set caster = GetSpellAbilityUnit()\r\n        set lvl = GetUnitAbilityLevel(GetSpellAbilityUnit(), GetSpellAbilityId())\r\n\t\tset x = GetSpellTargetX()\r\n        set y = GetSpellTargetY()\r\n    endif\r\n\r\n\tcall DestroyEffect( AddSpecialEffect( \"war3mapImported\\\\Soul Discharge Purple.mdx\", GetUnitX(caster), GetUnitY(caster) ) )\r\n\tset dmgrift = ( 5 + ( 5 * lvl ) ) * GetUnitSpellPower(caster)\r\n\r\n    call IncarnationRift( caster, GetUnitX( caster ), GetUnitY( caster ), dmgrift)\r\n\r\n    if udg_combatlogic[GetPlayerId(GetOwningPlayer( caster )) + 1] and not( RectContainsLoc(udg_Boss_Rect, Location(x, y) ) ) then\r\n        set caster = null\r\n        set target = null\r\n        return\r\n    endif\r\n\r\n    set id = GetHandleId( caster )\r\n    set dmg = (65 + ( 35 * lvl )) * GetUnitSpellPower(caster)\r\n\tset dmgr = dmg\r\n\t\r\n\tset bj_livingPlayerUnitsTypeId = 'u000'\r\n    call GroupEnumUnitsOfPlayer(g, GetOwningPlayer( caster ), filterLivingPlayerUnitsOfTypeId)\r\n    loop\r\n        set u = FirstOfGroup(g)\r\n        exitwhen u == null\r\n\t\tif GetUnitAbilityLevel( u, 'A0UC') > 0 then\r\n\t\t\tset dmg = dmg + (dmgr*0.1)\r\n\t\tendif\r\n        call GroupRemoveUnit(g,u)\r\n    endloop\r\n    \r\n\t//set i = GetPlayerId( GetOwningPlayer(caster) ) + 1\r\n    set i = CorrectPlayer(caster)\r\n    if udg_SkinUsed[i] != 0 then\r\n        set sk = udg_SkinUsed[i]\r\n    else\r\n        set sk = GetUnitTypeId( caster )\r\n    endif\r\n\tcall SetUnitSkin( caster, 'u00Y' )\r\n\t\r\n    call PauseUnit( caster, true )\r\n\tcall UnitAddAbility( caster, 'Avul' )\r\n    \r\n    call dummyspawn( caster, 0, 'A0N5', 0, 0 )\r\n    call SetUnitPathing( caster, false )\r\n    call SetUnitFacing( caster, bj_RADTODEG * Atan2(y - GetUnitY(caster), x - GetUnitX(caster) ) )\r\n\r\n    if LoadTimerHandle( udg_hash, id, StringHash( \"incr\" ) ) == null  then\r\n    \tcall SaveTimerHandle( udg_hash, id, StringHash( \"incr\" ), CreateTimer() )\r\n    endif\r\n    set id = GetHandleId( LoadTimerHandle( udg_hash, id, StringHash( \"incr\" ) ) ) \r\n    call SaveUnitHandle( udg_hash, id, StringHash( \"incr\" ), caster )\r\n    call SaveUnitHandle( udg_hash, id, StringHash( \"incrd\" ), bj_lastCreatedUnit )\r\n\tcall SaveReal( udg_hash, id, StringHash( \"incrx\" ), x )\r\n\tcall SaveReal( udg_hash, id, StringHash( \"incry\" ), y )\r\n    call SaveReal( udg_hash, id, StringHash( \"incr\" ), dmg )\r\n    call SaveReal( udg_hash, id, StringHash( \"incrf\" ), dmgrift )\r\n\tcall SaveInteger( udg_hash, id, StringHash( \"incrsk\" ), sk )\r\n\tcall SaveInteger( udg_hash, id, StringHash( \"incrlvl\" ), lvl )\r\n\tcall SaveGroupHandle( udg_hash, id, StringHash( \"incrg\" ), CreateGroup() )\r\n    call TimerStart( LoadTimerHandle( udg_hash, GetHandleId( caster ), StringHash( \"incr\" ) ), 0.02, true, function IncarnationRCast )\r\n\r\n\tcall SetUnitState( caster, UNIT_STATE_LIFE, RMaxBJ(10,GetUnitState( caster, UNIT_STATE_LIFE) - ( GetUnitState( caster, UNIT_STATE_MAX_LIFE) * (0.2 - (0.02*lvl) ) ) ) )\r\n\r\n\tcall GroupClear( g )\r\n    call DestroyGroup( g )\r\n    set u = null\r\n\tset g = null\r\n    set caster = null\r\n    set target = null\r\nendfunction\r\n\r\n//===========================================================================\r\nfunction InitTrig_IncarnationR takes nothing returns nothing\r\n    set gg_trg_IncarnationR = CreateTrigger(  )\r\n    call TriggerRegisterAnyUnitEventBJ( gg_trg_IncarnationR, EVENT_PLAYER_UNIT_SPELL_EFFECT )\r\n    call TriggerAddCondition( gg_trg_IncarnationR, Condition( function Trig_IncarnationR_Conditions ) )\r\n    call TriggerAddAction( gg_trg_IncarnationR, function Trig_IncarnationR_Actions )\r\nendfunction\r\n\r\n",
  "Events": [],
  "LocalVariables": [],
  "Conditions": [],
  "Actions": []
}