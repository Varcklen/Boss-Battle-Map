{
  "Id": 50333235,
  "Comment": "",
  "IsScript": true,
  "RunOnMapInit": false,
  "Script": "function Trig_IncarnationQ_Conditions takes nothing returns boolean\r\n    return GetSpellAbilityId() == 'A0U7' and combat( GetSpellAbilityUnit(), true, GetSpellAbilityId() )\r\nendfunction\r\n\r\nfunction IncarnationQCast takes nothing returns nothing\r\n    local integer id = GetHandleId( GetExpiredTimer() )\r\n    local integer counter = LoadInteger( udg_hash, id, StringHash( \"incq\" ) )\r\n    local unit dummy = LoadUnitHandle( udg_hash, id, StringHash( \"incq1\" ) )\r\n    local unit caster = LoadUnitHandle( udg_hash, id, StringHash( \"incq\" ) )\r\n    local group g = CreateGroup()\r\n    local unit u\r\n    local real dmg = LoadReal( udg_hash, id, StringHash( \"incq\" ) )\r\n    local real x = LoadReal( udg_hash, id, StringHash( \"incqx\" ) )\r\n    local real y = LoadReal( udg_hash, id, StringHash( \"incqy\" ) )\r\n\r\n    call GroupEnumUnitsInRange( g, x, y, 142, null )\r\n    loop\r\n        set u = FirstOfGroup(g)\r\n        exitwhen u == null\r\n        if unitst( u, caster, \"enemy\" ) then\r\n            call UnitDamageTarget( dummy, u, dmg, true, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_MAGIC, WEAPON_TYPE_WHOKNOWS )\r\n        endif\r\n        call GroupRemoveUnit(g,u)\r\n    endloop\r\n    \r\n    if counter > 0 and GetUnitState( dummy, UNIT_STATE_LIFE) > 0.405 then\r\n        call SaveInteger( udg_hash, id, StringHash( \"incq\" ), counter - 1 )\r\n    else\r\n        call RemoveUnit( dummy )\r\n        call DestroyTimer( GetExpiredTimer() )\r\n        call FlushChildHashtable( udg_hash, id ) \r\n    endif\r\n    \r\n    call GroupClear( g )\r\n    call DestroyGroup( g )\r\n    set u = null\r\n\tset g = null\r\n    set dummy = null\r\n    set caster = null\r\nendfunction\r\n\r\nfunction IncarnationQRushEnd takes unit caster, integer sk, integer id, timer t returns nothing\r\n    call DestroyEffect( AddSpecialEffect( \"war3mapImported\\\\Soul Discharge Purple.mdx\", GetUnitX(caster), GetUnitY(caster) ) )\r\n    call SetUnitSkin( caster, sk )\r\n    call SetUnitPathing( caster, true )\r\n    call PauseUnit( caster, false )\r\n    call UnitRemoveAbility( caster, 'Avul' )\r\n    call FlushChildHashtable( udg_hash, id )\r\n    call DestroyTimer( t )\r\n\r\n    set caster = null\r\n    set t = null\r\nendfunction\r\n\r\nfunction IncarnationQRush takes nothing returns nothing\r\n    local integer id = GetHandleId( GetExpiredTimer() )\r\n    local integer counter = LoadInteger( udg_hash, id, StringHash( \"incqr\" ) )\r\n\tlocal integer c = LoadInteger( udg_hash, id, StringHash( \"incqrc\" ) ) + 1\r\n\tlocal integer sk = LoadInteger( udg_hash, id, StringHash( \"incqrsk\" ) )\r\n    local real dmg = LoadReal( udg_hash, id, StringHash( \"incqr\" ) )\r\n    local unit caster = LoadUnitHandle( udg_hash, id, StringHash( \"incqr\" ) )\r\n    local unit target = LoadUnitHandle( udg_hash, id, StringHash( \"incqrt\" ) )\r\n    local real x = GetUnitX( target )\r\n    local real y = GetUnitY( target )\r\n    local real xc = GetUnitX( caster )\r\n    local real yc = GetUnitY( caster )\r\n    local real angle = Atan2( y - yc, x - xc )\r\n    local real NewX = xc + 30 * Cos( angle )\r\n    local real NewY = yc + 30 * Sin( angle )\r\n    local real IfX = ( x - xc ) * ( x - xc )\r\n    local real IfY = ( y - yc ) * ( y - yc )\r\n\tlocal group h = LoadGroupHandle( udg_hash, id, StringHash( \"incqrg\" ) )\r\n    \r\n\tif GetUnitState( caster, UNIT_STATE_LIFE) > 0.405 then\r\n\t\tif c >= 12 then\r\n\t\t\tcall SaveInteger( udg_hash, id, StringHash( \"incqrc\" ), 0 )\r\n            call GroupAoE( caster, xc, yc, dmg, 142, \"enemy\", \"\", \"\" )\r\n            /*\r\n\t\t\tcall GroupEnumUnitsInRange( g, xc, yc, 142, null )\r\n\t\t\tloop\r\n\t\t\t\tset u = FirstOfGroup(g)\r\n\t\t\t\texitwhen u == null\r\n\t\t\t\tif unitst( u, caster, \"enemy\" ) then\r\n\t\t\t\t\tcall UnitDamageTarget( caster, u, dmg, true, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_MAGIC, WEAPON_TYPE_WHOKNOWS )\r\n\t\t\t\tendif\r\n\t\t\t\tcall GroupRemoveUnit(g,u)\r\n\t\t\tendloop*/\r\n\t\telse\r\n\t\t\tcall SaveInteger( udg_hash, id, StringHash( \"incqrc\" ), c )\r\n\t\tendif\r\n\tendif\r\n\tif counter < 500 and GetUnitState( caster, UNIT_STATE_LIFE) > 0.405 and GetUnitAbilityLevel(caster, 'A17U') == 0 then\r\n        if SquareRoot( IfX + IfY ) > 50 and GetUnitState( target, UNIT_STATE_LIFE) > 0.405 then\r\n            call SetUnitPosition( caster, NewX, NewY )\r\n        else\r\n            set target = GroupPickRandomUnit(h)\r\n            if target == null then\r\n                call IncarnationQRushEnd(caster, sk, id, GetExpiredTimer())\r\n            else\r\n                call GroupRemoveUnit(h,target)\r\n                call SaveUnitHandle( udg_hash, id, StringHash( \"incqrt\" ), target )\r\n                call SaveGroupHandle( udg_hash, id, StringHash( \"incqrg\" ), h )\r\n            endif\r\n        endif\r\n        call SaveInteger( udg_hash, id, StringHash( \"incqr\" ), counter + 1 )\r\n\telse\r\n\t\tcall IncarnationQRushEnd(caster, sk, id, GetExpiredTimer())\r\n    endif\r\n    \r\n\tset h = null\r\n    set caster = null\r\n    set target = null\r\nendfunction\r\n\r\nfunction IncarnationRift takes unit u, real x, real y, real dmg returns nothing\r\n    local integer id \r\n    \r\n    set bj_lastCreatedUnit = CreateUnit( GetOwningPlayer( u ), 'u000', x, y, bj_UNIT_FACING )\r\n    call UnitAddAbility( bj_lastCreatedUnit, 'A0UC' )\r\n    set id = GetHandleId( bj_lastCreatedUnit )\r\n    \r\n    call SaveTimerHandle( udg_hash, id, StringHash( \"incq\" ), CreateTimer() )\r\n\tset id = GetHandleId( LoadTimerHandle( udg_hash, id, StringHash( \"incq\" ) ) ) \r\n\tcall SaveUnitHandle( udg_hash, id, StringHash( \"incq\" ), u )\r\n    call SaveUnitHandle( udg_hash, id, StringHash( \"incq1\" ), bj_lastCreatedUnit )\r\n    call SaveInteger( udg_hash, id, StringHash( \"incq\" ), 30 )\r\n    call SaveReal( udg_hash, id, StringHash( \"incq\" ), dmg )\r\n    call SaveReal( udg_hash, id, StringHash( \"incqx\" ), x )\r\n    call SaveReal( udg_hash, id, StringHash( \"incqy\" ), y )\r\n\tcall TimerStart( LoadTimerHandle( udg_hash, GetHandleId( bj_lastCreatedUnit ), StringHash( \"incq\" ) ), 1, true, function IncarnationQCast )\r\n    \r\n    set u = null\r\nendfunction\r\n\r\nfunction Trig_IncarnationQ_Actions takes nothing returns nothing\r\n    local integer id \r\n    local unit caster\r\n    local integer lvl\r\n    local real x\r\n    local real y\r\n    local real dmg\r\n\tlocal group g = CreateGroup()\r\n\tlocal group h = CreateGroup()\r\n    local unit u\r\n\tlocal unit t\r\n\tlocal integer sk\r\n    local integer i\r\n    \r\n    if CastLogic() then\r\n        set caster = udg_Caster\r\n        set lvl = udg_Level\r\n        set x = GetSpellTargetX()\r\n        set y = GetSpellTargetY()\r\n    elseif RandomLogic() then\r\n        set caster = udg_Caster\r\n        set lvl = udg_Level\r\n        set x = GetUnitX( caster ) + GetRandomReal( -650, 650 )\r\n        set y = GetUnitY( caster ) + GetRandomReal( -650, 650 )\r\n        call textst( udg_string[0] + GetObjectName('A0U7'), caster, 64, 90, 10, 1.5 )\r\n    else\r\n        set caster = GetSpellAbilityUnit()\r\n        set lvl = GetUnitAbilityLevel(GetSpellAbilityUnit(), GetSpellAbilityId())\r\n        set x = GetSpellTargetX()\r\n        set y = GetSpellTargetY()\r\n    endif\r\n\r\n    set dmg = ( 15 + ( 5 * lvl ) ) * GetUnitSpellPower(caster)\r\n\r\n\tcall DestroyEffect( AddSpecialEffect( \"war3mapImported\\\\Soul Discharge Purple.mdx\", GetUnitX(caster), GetUnitY(caster) ) )\r\n\t\r\n    call IncarnationRift( caster, x, y, dmg)\r\n    \r\n\tset bj_livingPlayerUnitsTypeId = 'u000'\r\n    call GroupEnumUnitsOfPlayer(g, GetOwningPlayer( caster ), filterLivingPlayerUnitsOfTypeId)\r\n    loop\r\n        set u = FirstOfGroup(g)\r\n        exitwhen u == null\r\n\t\tif GetUnitAbilityLevel( u, 'A0UC') > 0 then\r\n\t\t\tcall GroupAddUnitSimple( u, h )\r\n\t\tendif\r\n        call GroupRemoveUnit(g,u)\r\n    endloop\r\n\t\r\n\tset t = GroupPickRandomUnit(h)\r\n\tcall GroupRemoveUnit(h,t)\r\n    \r\n    call PauseUnit( caster, true )\r\n    \r\n    call SetUnitPathing( caster, false )\r\n\tcall UnitAddAbility( caster, 'Avul' )\r\n\t\r\n    //set i = GetPlayerId( GetOwningPlayer(caster) ) + 1\r\n    set i = GetUnitUserData(caster)\r\n    if udg_SkinUsed[i] != 0 then\r\n        set sk = udg_SkinUsed[i]\r\n    else\r\n        set sk = GetUnitTypeId( caster )\r\n    endif\r\n\t\r\n\tcall SetUnitSkin( caster, 'u00Y' )\r\n\r\n    set id = GetHandleId( caster )\r\n    if LoadTimerHandle( udg_hash, id, StringHash( \"incqr\" ) ) == null  then\r\n    \tcall SaveTimerHandle( udg_hash, id, StringHash( \"incqr\" ), CreateTimer() )\r\n    endif\r\n    set id = GetHandleId( LoadTimerHandle( udg_hash, id, StringHash( \"incqr\" ) ) ) \r\n    call SaveUnitHandle( udg_hash, id, StringHash( \"incqr\" ), caster )\r\n    call SaveUnitHandle( udg_hash, id, StringHash( \"incqrt\" ), t )\r\n\tcall SaveGroupHandle( udg_hash, id, StringHash( \"incqrg\" ), h )\r\n    call SaveReal( udg_hash, id, StringHash( \"incqr\" ), dmg )\r\n\tcall SaveInteger( udg_hash, id, StringHash( \"incqrsk\" ), sk )\r\n    call TimerStart( LoadTimerHandle( udg_hash, GetHandleId( caster ), StringHash( \"incqr\" ) ), 0.02, true, function IncarnationQRush )\r\n\t\r\n\tcall SetUnitState( caster, UNIT_STATE_LIFE, RMaxBJ(10,GetUnitState( caster, UNIT_STATE_LIFE) - ( GetUnitState( caster, UNIT_STATE_MAX_LIFE) * (0.22 - (0.02*lvl) ) ) ) )\r\n\t\r\n\tcall GroupClear( g )\r\n    call DestroyGroup( g )\r\n\tset t = null\r\n    set h = null\r\n    set u = null\r\n    set g = null\r\n    set caster = null\r\nendfunction\r\n\r\n//===========================================================================\r\nfunction InitTrig_IncarnationQ takes nothing returns nothing\r\n    set gg_trg_IncarnationQ = CreateTrigger(  )\r\n    call TriggerRegisterAnyUnitEventBJ( gg_trg_IncarnationQ, EVENT_PLAYER_UNIT_SPELL_EFFECT )\r\n    call TriggerAddCondition( gg_trg_IncarnationQ, Condition( function Trig_IncarnationQ_Conditions ) )\r\n    call TriggerAddAction( gg_trg_IncarnationQ, function Trig_IncarnationQ_Actions )\r\nendfunction\r\n\r\n",
  "Events": [],
  "LocalVariables": [],
  "Conditions": [],
  "Actions": []
}