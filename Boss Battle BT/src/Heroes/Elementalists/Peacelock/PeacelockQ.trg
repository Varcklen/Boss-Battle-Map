{
  "Id": 50333274,
  "Comment": "",
  "IsScript": true,
  "RunOnMapInit": false,
  "Script": "function Trig_PeacelockQ_Conditions takes nothing returns boolean\r\n    return GetSpellAbilityId() == 'A01W'\r\nendfunction\r\n\r\nfunction PeacelockQCast takes nothing returns nothing\r\n    local integer id = GetHandleId( GetExpiredTimer( ) )\r\n    local real counter = LoadReal( udg_hash, id, StringHash( \"pckqt\" ) ) - 1\r\n    local unit target = LoadUnitHandle( udg_hash, id, StringHash( \"pckq\" ) )\r\n    local unit caster = LoadUnitHandle( udg_hash, id, StringHash( \"pckq1\" ) )\r\n    local real heal = LoadReal( udg_hash, id, StringHash( \"pckq\" ) )\r\n    \r\n    if GetUnitState( target, UNIT_STATE_LIFE) > 0.405 then\r\n        call healst( caster, target, heal )\r\n    endif\r\n    \r\n    if counter > 0 and GetUnitState( target, UNIT_STATE_LIFE) > 0.405 and GetUnitAbilityLevel( target, 'B00Z' ) > 0 then\r\n        call SaveReal( udg_hash, id, StringHash( \"pckqt\" ), counter )\r\n    else\r\n        call UnitRemoveAbility( target, 'A038' )\r\n        call UnitRemoveAbility( target, 'B00Z' )\r\n        call DestroyTimer( GetExpiredTimer() )\r\n        call FlushChildHashtable( udg_hash, id )\r\n    endif\r\n    \r\n    set target = null\r\n    set caster = null\r\nendfunction\r\n\r\nfunction Trig_PeacelockQ_Actions takes nothing returns nothing\r\n    local integer id\r\n    local real heal\r\n    local unit caster\r\n    local unit target\r\n    local integer lvl\r\n    local real t\r\n    local integer i\r\n\r\n    if CastLogic() then\r\n        set caster = udg_Caster\r\n        set target = udg_Target\r\n        set lvl = udg_Level\r\n        set t = udg_Time\r\n    elseif RandomLogic() then\r\n        set caster = udg_Caster\r\n        set target = randomtarget( caster, 300, \"ally\", \"\", \"\", \"\", \"\" )\r\n        set lvl = udg_Level\r\n        call textst( udg_string[0] + GetObjectName('A01W'), caster, 64, 90, 10, 1.5 )\r\n        set t = 6\r\n        if target == null then\r\n            set caster = null\r\n            return\r\n        endif\r\n    else\r\n        set caster = GetSpellAbilityUnit()\r\n        set target = GetSpellTargetUnit()\r\n        set lvl = GetUnitAbilityLevel(GetSpellAbilityUnit(), GetSpellAbilityId())\r\n        set t = 6\r\n    endif\r\n    set t = timebonus(caster, t)\r\n    set heal = 25 + ( 10 * lvl )\r\n\r\n    call PlaySoundOnUnitBJ( gg_snd_bonk, 100, target )\r\n    call UnitDamageTarget( caster, target, 75, true, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_MAGIC, WEAPON_TYPE_WHOKNOWS)\r\n    \r\n    if GetUnitState( target, UNIT_STATE_LIFE) > 0.405 then\r\n        set id = GetHandleId( target )\r\n        call UnitAddAbility( target, 'A038' )\r\n        \r\n        if LoadTimerHandle( udg_hash, id, StringHash( \"pckq\" ) ) == null then\r\n            call SaveTimerHandle( udg_hash, id, StringHash( \"pckq\" ), CreateTimer() )\r\n        endif\r\n        set id = GetHandleId( LoadTimerHandle( udg_hash, id, StringHash( \"pckq\" ) ) ) \r\n        call SaveUnitHandle( udg_hash, id, StringHash( \"pckq\" ), target )\r\n        call SaveUnitHandle( udg_hash, id, StringHash( \"pckq1\" ), caster )\r\n        call SaveReal( udg_hash, id, StringHash( \"pckq\" ), heal )\r\n        call SaveReal( udg_hash, id, StringHash( \"pckqt\" ), t )\r\n        call TimerStart( LoadTimerHandle( udg_hash, GetHandleId( target ), StringHash( \"pckq\" ) ), 1, true, function PeacelockQCast )\r\n    endif\r\n    \r\n    set caster = null\r\n    set target = null\r\nendfunction\r\n\r\n//===========================================================================\r\nfunction InitTrig_PeacelockQ takes nothing returns nothing\r\n    set gg_trg_PeacelockQ = CreateTrigger(  )\r\n    call TriggerRegisterAnyUnitEventBJ( gg_trg_PeacelockQ, EVENT_PLAYER_UNIT_SPELL_EFFECT )\r\n    call TriggerAddCondition( gg_trg_PeacelockQ, Condition( function Trig_PeacelockQ_Conditions ) )\r\n    call TriggerAddAction( gg_trg_PeacelockQ, function Trig_PeacelockQ_Actions )\r\nendfunction\r\n\r\n",
  "Events": [],
  "LocalVariables": [],
  "Conditions": [],
  "Actions": []
}