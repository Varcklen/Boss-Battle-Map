{
  "Id": 50333226,
  "Comment": "",
  "IsScript": true,
  "RunOnMapInit": false,
  "Script": "function Trig_RealBroW_Conditions takes nothing returns boolean\r\n    return GetSpellAbilityId() == 'A1BF'\r\nendfunction\r\n\r\nfunction Trig_RealBroW_Actions takes nothing returns nothing\r\n    local unit caster\r\n    local unit target\r\n    local integer lvl\r\n    local real hpc\r\n    local real hpt\r\n    local real amount\r\n    local real dmg\r\n    local group g = CreateGroup()\r\n    local unit u\r\n    \r\n    if CastLogic() then\r\n        set caster = udg_Caster\r\n        set target = udg_Target\r\n        set lvl = udg_Level\r\n    elseif RandomLogic() then\r\n        set caster = udg_Caster\r\n        set target = randomtarget( caster, 900, \"all\", \"notcaster\", \"\", \"\", \"\" )\r\n        set lvl = udg_Level\r\n        call textst( udg_string[0] + GetObjectName('A1BF'), caster, 64, 90, 10, 1.5 )\r\n        if target == null then\r\n            set caster = null\r\n            return\r\n        endif\r\n    else\r\n        set caster = GetSpellAbilityUnit()\r\n        set target = GetSpellTargetUnit()\r\n        set lvl = GetUnitAbilityLevel(GetSpellAbilityUnit(), GetSpellAbilityId())\r\n    endif\r\n    \r\n    call DestroyEffect( AddSpecialEffectTarget(\"Abilities\\\\Spells\\\\Orc\\\\MirrorImage\\\\MirrorImageCaster.mdl\" , caster, \"origin\" ) )\r\n    call DestroyEffect( AddSpecialEffectTarget(\"Abilities\\\\Spells\\\\Orc\\\\MirrorImage\\\\MirrorImageCaster.mdl\" , target, \"origin\" ) )\r\n    set hpc = GetUnitState(caster, UNIT_STATE_LIFE)/RMaxBJ(1,GetUnitState(caster, UNIT_STATE_MAX_LIFE))\r\n    set hpt = GetUnitState(target, UNIT_STATE_LIFE)/RMaxBJ(1,GetUnitState(target, UNIT_STATE_MAX_LIFE))\r\n    \r\n    if IsUnitEnemy( target, GetOwningPlayer( caster ) ) then\r\n        set amount = 75+(75*lvl)\r\n        if hpc > hpt then\r\n            call SetUnitState( caster, UNIT_STATE_LIFE, RMaxBJ(0,GetUnitState( caster, UNIT_STATE_LIFE) - amount ) )\r\n            call SetUnitState( target, UNIT_STATE_LIFE, RMaxBJ(0,GetUnitState( target, UNIT_STATE_LIFE) + amount ) )\r\n        else\r\n            call SetUnitState( caster, UNIT_STATE_LIFE, RMaxBJ(0,GetUnitState( caster, UNIT_STATE_LIFE) + amount ) )\r\n            call SetUnitState( target, UNIT_STATE_LIFE, RMaxBJ(0,GetUnitState( target, UNIT_STATE_LIFE) - amount ) )\r\n        endif\r\n    else\r\n        call SetUnitState( caster, UNIT_STATE_LIFE, GetUnitState( caster, UNIT_STATE_MAX_LIFE) * hpt )\r\n        call SetUnitState( target, UNIT_STATE_LIFE, GetUnitState( target, UNIT_STATE_MAX_LIFE) * hpc )\r\n    endif\r\n    \r\n    if GetUnitState( caster, UNIT_STATE_LIFE) > 0.405 then\r\n        set dmg = 30+(30*lvl)\r\n        call dummyspawn( caster, 1, 0, 0, 0 )\r\n        call GroupEnumUnitsInRange( g, GetUnitX( caster ), GetUnitY( caster ), 400, null )\r\n        loop\r\n            set u = FirstOfGroup(g)\r\n            exitwhen u == null\r\n            if unitst( u, caster, \"enemy\" ) then\r\n                call DestroyEffect( AddSpecialEffect( \"Abilities\\\\Spells\\\\Human\\\\FlakCannons\\\\FlakTarget.mdl\", GetUnitX(u), GetUnitY(u) ) )\r\n                call UnitDamageTarget( bj_lastCreatedUnit, u, dmg, true, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_MAGIC, WEAPON_TYPE_WHOKNOWS )\r\n            endif\r\n            call GroupRemoveUnit(g,u)\r\n        endloop\r\n    endif\r\n    \r\n    call GroupClear( g )\r\n    call DestroyGroup( g )\r\n    set u = null\r\n    set g = null\r\n    set caster = null\r\n    set target = null\r\nendfunction\r\n\r\n//===========================================================================\r\nfunction InitTrig_RealBroW takes nothing returns nothing\r\n    set gg_trg_RealBroW = CreateTrigger(  )\r\n    call TriggerRegisterAnyUnitEventBJ( gg_trg_RealBroW, EVENT_PLAYER_UNIT_SPELL_EFFECT )\r\n    call TriggerAddCondition( gg_trg_RealBroW, Condition( function Trig_RealBroW_Conditions ) )\r\n    call TriggerAddAction( gg_trg_RealBroW, function Trig_RealBroW_Actions )\r\nendfunction\r\n\r\n",
  "Events": [],
  "LocalVariables": [],
  "Conditions": [],
  "Actions": []
}