{
  "Id": 50333212,
  "Comment": "",
  "IsScript": true,
  "RunOnMapInit": false,
  "Script": "function Trig_DryadR_Conditions takes nothing returns boolean\r\n    return GetSpellAbilityId() == 'A0HP'\r\nendfunction\r\n\r\nfunction DryadRCast takes nothing returns nothing\r\n    local integer id = GetHandleId( GetExpiredTimer( ) )\r\n    local unit u = LoadUnitHandle( udg_hash, id, StringHash( \"drdr\" ) )\r\n    \r\n    call UnitRemoveAbility( u, 'A0H0' )\r\n    call UnitRemoveAbility( u, 'B06D' )\r\n    call FlushChildHashtable( udg_hash, id )\r\n    \r\n    set u = null\r\nendfunction\r\n\r\nfunction DryadR1Cast takes nothing returns nothing\r\n    local integer id = GetHandleId( GetExpiredTimer( ) )\r\n    \r\n    call DestroyEffect( LoadEffectHandle( udg_hash, id, StringHash( \"drdr1\" ) ) )\r\n    call FlushChildHashtable( udg_hash, id )\r\nendfunction\r\n\r\nfunction Trig_DryadR_Actions takes nothing returns nothing\r\n    local group g = CreateGroup()\r\n    local unit u\r\n    local integer id \r\n    local integer lvl\r\n    local unit caster\r\n    local real t\r\n    \r\n    if CastLogic() then\r\n        set caster = udg_Caster\r\n        set lvl = udg_Level\r\n        set t = udg_Time\r\n    elseif RandomLogic() then\r\n        set caster = udg_Caster\r\n        set lvl = udg_Level\r\n        call textst( udg_string[0] + GetObjectName('A0HP'), caster, 64, 90, 10, 1.5 )\r\n        set t = 15\r\n    else\r\n        set caster = GetSpellAbilityUnit()\r\n        set lvl = GetUnitAbilityLevel(GetSpellAbilityUnit(), GetSpellAbilityId() )\r\n        set t = 15\r\n    endif\r\n    set id = GetHandleId( caster )\r\n    \r\n    call GroupEnumUnitsInRange( g, GetUnitX( caster ), GetUnitY( caster ), 600, null )\r\n    loop\r\n        set u = FirstOfGroup(g)\r\n        exitwhen u == null\r\n        if unitst( u, caster, \"ally\") then\r\n            call healst( caster, u, 25+(25*lvl) )\r\n            call manast( caster, u, 10+(10*lvl) )\r\n            call UnitAddAbility( u, 'A0H0' )\r\n            call SetUnitAbilityLevel( u, 'A0H3', lvl )\r\n            set id = GetHandleId( u )\r\n            if LoadTimerHandle( udg_hash, id, StringHash( \"drdr\" ) ) == null then\r\n                call SaveTimerHandle( udg_hash, id, StringHash( \"drdr\" ), CreateTimer() )\r\n            endif\r\n            set id = GetHandleId( LoadTimerHandle( udg_hash, id, StringHash( \"drdr\" ) ) ) \r\n            call SaveUnitHandle( udg_hash, id, StringHash( \"drdr\" ), u )\r\n            call TimerStart( LoadTimerHandle( udg_hash, GetHandleId( u ), StringHash( \"drdr\" ) ), t, false, function DryadRCast )\r\n        endif\r\n        call GroupRemoveUnit(g,u)\r\n    endloop\r\n    \r\n    set bj_lastCreatedEffect = AddSpecialEffect( \"Abilities\\\\Spells\\\\NightElf\\\\Tranquility\\\\Tranquility.mdl\", GetUnitX(caster), GetUnitY(caster) )\r\n    \r\n    set id = GetHandleId( bj_lastCreatedEffect )\r\n    if LoadTimerHandle( udg_hash, id, StringHash( \"drdr1\" ) ) == null then\r\n        call SaveTimerHandle( udg_hash, id, StringHash( \"drdr1\" ), CreateTimer() )\r\n    endif\r\n    set id = GetHandleId( LoadTimerHandle( udg_hash, id, StringHash( \"drdr1\" ) ) )\r\n    call SaveEffectHandle( udg_hash, id, StringHash( \"drdr1\" ), bj_lastCreatedEffect )\r\n    call TimerStart( LoadTimerHandle( udg_hash, GetHandleId( bj_lastCreatedEffect ), StringHash( \"drdr1\" ) ), 2.5, false, function DryadR1Cast )\r\n    \r\n    call GroupClear( g )\r\n    call DestroyGroup( g )\r\n    set u = null\r\n    set g = null\r\n    set caster = null\r\nendfunction\r\n\r\n//===========================================================================\r\nfunction InitTrig_DryadR takes nothing returns nothing\r\n    set gg_trg_DryadR = CreateTrigger(  )\r\n    call TriggerRegisterAnyUnitEventBJ( gg_trg_DryadR, EVENT_PLAYER_UNIT_SPELL_EFFECT )\r\n    call TriggerAddCondition( gg_trg_DryadR, Condition( function Trig_DryadR_Conditions ) )\r\n    call TriggerAddAction( gg_trg_DryadR, function Trig_DryadR_Actions )\r\nendfunction\r\n\r\n",
  "Events": [],
  "LocalVariables": [],
  "Conditions": [],
  "Actions": []
}