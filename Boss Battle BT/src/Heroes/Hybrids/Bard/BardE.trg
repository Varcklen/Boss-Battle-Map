{
  "Id": 50333221,
  "Comment": "",
  "IsScript": true,
  "RunOnMapInit": false,
  "Script": "function Trig_BardE_Conditions takes nothing returns boolean\r\n    return GetUnitAbilityLevel(GetSpellAbilityUnit(), 'A1AT') > 0 and luckylogic( GetSpellAbilityUnit(), 3 + GetUnitAbilityLevel(GetSpellAbilityUnit(), 'A1AT'), 1, 100 )\r\nendfunction\r\n\r\nfunction BardECast takes nothing returns nothing\r\n    local integer id = GetHandleId( GetExpiredTimer( ) )\r\n    local unit u = LoadUnitHandle( udg_hash, id, StringHash( \"brde\" ) )\r\n\r\n    call spdst( u, -LoadReal( udg_hash, GetHandleId( u ), StringHash( \"brde\" ) ) )\r\n    call UnitRemoveAbility( u, 'A1AU' )\r\n    call UnitRemoveAbility( u, 'B09K' )\r\n    call RemoveSavedReal( udg_hash, GetHandleId( u ), StringHash( \"brde\" ) )\r\n    call FlushChildHashtable( udg_hash, id )\r\n    \r\n    set u = null\r\nendfunction\r\n\r\nfunction BardEUse takes unit caster, unit target, integer lvl returns nothing\r\n    local integer id \r\n    local integer array a\r\n    local boolean array l\r\n    local integer rand\r\n    local integer cyclA\r\n    local integer i\r\n    local real spd\r\n    local real rsum\r\n    local real t = timebonus(caster, 5)\r\n    \r\n    if target != null then\r\n        set spd = 10 + (10*lvl )\r\n\r\n        set i = GetPlayerId(GetOwningPlayer(target)) + 1\r\n        call DestroyEffect( AddSpecialEffectTarget(\"war3mapImported\\\\TimeUpheaval.mdx\", target, \"origin\" ) )\r\n        \r\n        set a[1] = Database_Hero_Abilities[1][udg_HeroNum[i]]\r\n        set a[2] = Database_Hero_Abilities[2][udg_HeroNum[i]]\r\n        set a[3] = Database_Hero_Abilities[3][udg_HeroNum[i]]\r\n        set a[4] = Database_Hero_Abilities[4][udg_HeroNum[i]]\r\n\r\n        set cyclA = 1\r\n        loop\r\n            exitwhen cyclA > 4\r\n            if BlzGetUnitAbilityCooldownRemaining( target,a[cyclA]) > 1 then\r\n                set l[cyclA] = true\r\n            else\r\n                set l[cyclA] = false\r\n            endif\r\n            set cyclA = cyclA + 1\r\n        endloop\r\n\r\n        if l[1] or l[2] or l[3] or l[4] then\r\n            set cyclA = 1\r\n            loop\r\n                exitwhen cyclA > 1\r\n                set rand = GetRandomInt( 1, 4 )\r\n                if l[rand] then\r\n                    call BlzStartUnitAbilityCooldown( target, a[rand], 0.01 )\r\n                else\r\n                    set cyclA = cyclA - 1\r\n                endif\r\n                set cyclA = cyclA + 1\r\n            endloop\r\n        endif\r\n         \r\n        set rsum = LoadReal( udg_hash, GetHandleId( target ), StringHash( \"brde\" ) ) + spd\r\n        call spdst( target, spd )\r\n        call UnitAddAbility( target, 'A1AU')\r\n        call SetUnitAbilityLevel( target, 'A1AU', lvl )\r\n        \r\n        set id = GetHandleId( target )\r\n        if LoadTimerHandle( udg_hash, id, StringHash( \"brde\" ) ) == null   then\r\n            call SaveTimerHandle( udg_hash, id, StringHash( \"brde\" ), CreateTimer() )\r\n        endif\r\n        set id = GetHandleId( LoadTimerHandle( udg_hash, id, StringHash( \"brde\" ) ) ) \r\n        call SaveUnitHandle( udg_hash, id, StringHash( \"brde\" ), target )\r\n        call SaveReal( udg_hash, GetHandleId( target ), StringHash( \"brde\" ), rsum )\r\n        call TimerStart( LoadTimerHandle( udg_hash, GetHandleId( target ), StringHash( \"brde\" ) ), t, false, function BardECast ) \r\n    endif\r\n    \r\n    set caster = null\r\n    set target = null\r\nendfunction\r\n\r\nfunction Trig_BardE_Actions takes nothing returns nothing\r\n    call BardEUse( GetSpellAbilityUnit(), GroupPickRandomUnit(udg_otryad), GetUnitAbilityLevel(GetSpellAbilityUnit(), 'A1AT') )\r\nendfunction\r\n\r\n//===========================================================================\r\nfunction InitTrig_BardE takes nothing returns nothing\r\n    set gg_trg_BardE = CreateTrigger(  )\r\n    call TriggerRegisterAnyUnitEventBJ( gg_trg_BardE, EVENT_PLAYER_UNIT_SPELL_EFFECT )\r\n    call TriggerAddCondition( gg_trg_BardE, Condition( function Trig_BardE_Conditions ) )\r\n    call TriggerAddAction( gg_trg_BardE, function Trig_BardE_Actions )\r\nendfunction\r\n\r\n",
  "Events": [],
  "LocalVariables": [],
  "Conditions": [],
  "Actions": []
}