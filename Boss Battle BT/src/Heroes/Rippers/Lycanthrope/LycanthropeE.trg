{
  "Id": 50333082,
  "Comment": "",
  "IsScript": true,
  "RunOnMapInit": false,
  "Script": "scope LycanthropeE initializer init\r\n\r\n    globals\r\n        public boolean WolfMode = false\r\n    \r\n        private constant integer ID_ABILITY = 'A1CR'\r\n        \r\n        private constant integer AGILITY_BONUS_FIRST_LEVEL = 2\r\n        private constant integer AGILITY_BONUS_LEVEL_BONUS = 1\r\n        \r\n        private constant integer COOLDOWN_FIRST_LEVEL = 22\r\n        private constant integer COOLDOWN_LEVEL_BONUS = -2\r\n        \r\n        private constant integer AGILITY_BONUS_PER_ATTACK = 1\r\n        private constant integer CHANCE_FIRST_LEVEL = 10\r\n        private constant integer CHANCE_LEVEL_BONUS = 15\r\n        \r\n        private constant integer ALT_AGILITY_BONUS_PER_ATTACK = 1\r\n        \r\n        private constant string ANIMATION = \"Abilities\\\\Spells\\\\Items\\\\AIam\\\\AIamTarget.mdl\"\r\n        \r\n        private constant integer R_DURATION_FIRST_LEVEL = 5\r\n        private constant integer R_DURATION_LEVEL_BONUS = 1\r\n        \r\n        private unit GetUnit = null\r\n    endglobals\r\n    \r\n    private function GetMostHealthiestEnemyNearby takes unit caster returns unit\r\n        local group g = CreateGroup()\r\n        local unit u\r\n        local real maxHealth = 0\r\n        set GetUnit = null\r\n    \r\n        call GroupEnumUnitsInRange( g, GetUnitX( caster ), GetUnitY( caster ), 400, null )\r\n        loop\r\n            set u = FirstOfGroup(g)\r\n            exitwhen u == null\r\n            if unitst( u, caster, \"enemy\" ) and GetUnitState( u, UNIT_STATE_LIFE ) > maxHealth then\r\n                set GetUnit = u\r\n                set maxHealth = GetUnitState( u, UNIT_STATE_LIFE )\r\n            endif\r\n            call GroupRemoveUnit(g,u)\r\n        endloop\r\n    \r\n        call GroupClear( g )\r\n        call DestroyGroup( g )\r\n        set u = null\r\n        set g = null\r\n        return GetUnit\r\n    endfunction\r\n\r\n    private function LycanthropeE_Cast takes nothing returns nothing\r\n        local integer id = GetHandleId( GetExpiredTimer( ) )\r\n        local unit caster = LoadUnitHandle( udg_hash, id, StringHash( \"lcne\" ) )\r\n        local integer level = LoadInteger(udg_hash, id, StringHash( \"lcne\" ) )\r\n        \r\n        if IsUnitHasAbility(caster, ID_ABILITY) then\r\n            if IsNight() == false and IsUnitAlive(caster) and IsUnitLoaded( caster ) == false and Aspects_IsHeroAspectActive(caster, ASPECT_03) == false then\r\n                if GetRandomInt(0,1) == 0 then\r\n                    set udg_Caster = caster\r\n                    set udg_Target = null\r\n                    set udg_Level = level\r\n                    set udg_CastLogic = true\r\n                    set udg_Time = LycanthropeQ_DURATION\r\n                    set WolfMode = true\r\n                    call TriggerExecute( gg_trg_LycanthropeQ )\r\n                    set WolfMode = false\r\n                else\r\n                    set udg_Target = GetMostHealthiestEnemyNearby(caster)\r\n                    if udg_Target != null then\r\n                        set udg_Caster = caster\r\n                        set udg_Level = level\r\n                        set udg_CastLogic = true\r\n                        set udg_Time = R_DURATION_FIRST_LEVEL + (level * R_DURATION_LEVEL_BONUS)\r\n                        set WolfMode = true\r\n                        call TriggerExecute( gg_trg_LycanthropeR )\r\n                        set WolfMode = false\r\n                    endif\r\n                endif\r\n            endif\r\n        else\r\n            call FlushChildHashtable( udg_hash, id )\r\n            call DestroyTimer( GetExpiredTimer() )\r\n        endif\r\n        \r\n        set caster = null\r\n    endfunction\r\n\r\n    function Trig_LycanthropeE_Conditions takes nothing returns boolean\r\n        return GetLearnedSkill() == ID_ABILITY\r\n    endfunction\r\n\r\n    function Trig_LycanthropeE_Actions takes nothing returns nothing\r\n        local unit hero = GetLearningUnit()\r\n        local integer level = GetUnitAbilityLevel( hero, ID_ABILITY)\r\n        local integer cooldown = COOLDOWN_FIRST_LEVEL + (level*COOLDOWN_LEVEL_BONUS)\r\n        local integer id\r\n        \r\n        set id = InvokeTimerWithUnit(hero, \"lcne\", cooldown, true, function LycanthropeE_Cast )\r\n        call SaveInteger(udg_hash, id, StringHash( \"lcne\" ), level )\r\n        \r\n        set hero = null\r\n    endfunction\r\n    \r\n    \r\n    private function EndOfLostBattle_Conditions takes nothing returns boolean\r\n        return IsUnitHasAbility(Event_EndOfLostBattle_Hero, ID_ABILITY) and udg_fightmod[3] == false and Aspects_IsHeroAspectActive(Event_EndOfLostBattle_Hero, ASPECT_03) == false\r\n    endfunction\r\n    \r\n    private function EndOfLostBattle takes nothing returns nothing\r\n        local unit hero = Event_EndOfLostBattle_Hero\r\n        local integer level = GetUnitAbilityLevel( hero, ID_ABILITY)\r\n        local integer addedAgility = AGILITY_BONUS_FIRST_LEVEL + (level * AGILITY_BONUS_LEVEL_BONUS)\r\n        \r\n        call textst( \"|cFF57E5C6 +\" + I2S(addedAgility) + \" agility\", hero, 64, 90, 12, 3 )\r\n        call PlaySpecialEffect(ANIMATION, hero)\r\n        call statst(hero, 0, addedAgility, 0, 0, true)\r\n        \r\n        set hero = null\r\n    endfunction\r\n    \r\n    private function AfterDamageEvent_Conditions takes nothing returns boolean\r\n        if udg_DamageEventAmount <= 0 then\r\n            return false\r\n        elseif IsUnitHasAbility(udg_DamageEventSource, ID_ABILITY) == false then\r\n            return false\r\n        elseif IsNight() == false then\r\n            return false\r\n        elseif udg_IsDamageSpell == true then\r\n            return false\r\n        elseif LuckChance(udg_DamageEventSource, CHANCE_FIRST_LEVEL + ( GetUnitAbilityLevel( udg_DamageEventSource, ID_ABILITY ) * CHANCE_LEVEL_BONUS ) ) == false then\r\n            return false\r\n        endif\r\n    \r\n        return true\r\n    endfunction\r\n    \r\n    private function AfterDamageEvent takes nothing returns nothing\r\n        local unit hero = udg_DamageEventSource\r\n        local integer bonusAgility = LoadInteger(udg_hash, GetHandleId(hero), StringHash( \"lcnea\" ) ) + AGILITY_BONUS_PER_ATTACK\r\n        local integer agilityBonus = AGILITY_BONUS_PER_ATTACK\r\n        \r\n        if Aspects_IsHeroAspectActive(hero, ASPECT_03) then\r\n            set agilityBonus = agilityBonus + ALT_AGILITY_BONUS_PER_ATTACK\r\n            set bonusAgility = bonusAgility + ALT_AGILITY_BONUS_PER_ATTACK\r\n        endif\r\n        \r\n        call statst(hero, 0, agilityBonus, 0, 0, false )\r\n        call SaveInteger(udg_hash, GetHandleId(hero), StringHash( \"lcnea\" ), bonusAgility )\r\n        \r\n        set hero = null\r\n    endfunction\r\n    \r\n    private function MoonChange_Conditions takes nothing returns boolean\r\n        return LoadInteger(udg_hash, GetHandleId(Event_MoonChange_Unit), StringHash( \"lcnea\" ) ) > 0 and Event_MoonChange_isNight == false\r\n    endfunction\r\n    \r\n    private function MoonChange takes nothing returns nothing\r\n        local unit hero = Event_MoonChange_Unit\r\n        local integer bonusAgility = LoadInteger(udg_hash, GetHandleId(hero), StringHash( \"lcnea\" ) )\r\n        \r\n        call statst(hero, 0, -bonusAgility, 0, 0, false )\r\n        call RemoveSavedInteger( udg_hash, GetHandleId( hero ), StringHash( \"lcnea\" ) )\r\n        \r\n        set hero = null\r\n    endfunction\r\n    \r\n    //===========================================================================\r\n    private function init takes nothing returns nothing\r\n        set gg_trg_LycanthropeE = CreateTrigger(  )\r\n        call TriggerRegisterAnyUnitEventBJ( gg_trg_LycanthropeE, EVENT_PLAYER_HERO_SKILL )\r\n        call TriggerAddCondition( gg_trg_LycanthropeE, Condition( function Trig_LycanthropeE_Conditions ) )\r\n        call TriggerAddAction( gg_trg_LycanthropeE, function Trig_LycanthropeE_Actions )\r\n    \r\n        call CreateEventTrigger( \"Event_MoonChange_Real\", function MoonChange, function MoonChange_Conditions )\r\n        call CreateEventTrigger( \"udg_AfterDamageEvent\", function AfterDamageEvent, function AfterDamageEvent_Conditions )\r\n        call CreateEventTrigger( \"Event_EndOfLostBattle_Real\", function EndOfLostBattle, function EndOfLostBattle_Conditions )\r\n    endfunction\r\n\r\nendscope",
  "Events": [],
  "LocalVariables": [],
  "Conditions": [],
  "Actions": []
}