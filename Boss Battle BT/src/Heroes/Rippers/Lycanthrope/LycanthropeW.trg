{
  "Id": 50333081,
  "Comment": "",
  "IsScript": true,
  "RunOnMapInit": false,
  "Script": "scope LycanthropeW initializer init\r\n\r\n    globals\r\n        public constant integer WOLF_BUFF = 'B0A3'\r\n        \r\n        private constant integer ID_ABILITY = 'A1CI'\r\n        private constant integer HUMAN_FORM = 'N03P'\r\n        private constant integer WOLF_FORM = 'N03R'\r\n        \r\n        private constant real BONUS_DAMAGE_FIRST_LEVEL = 0.15\r\n        private constant real BONUS_DAMAGE_LEVEL_BONUS = 0.15\r\n        \r\n        private constant integer TICK = 1\r\n        private constant integer LOST_HEALTH_PERCENT = 5\r\n        \r\n        private constant integer NIGHT_DURATION_FIRST_LEVEL = 16\r\n        private constant integer NIGHT_DURATION_LEVEL_BONUS = 0\r\n    \r\n        private constant string ANIMATION = \"Abilities\\\\Spells\\\\Orc\\\\FeralSpirit\\\\feralspirittarget.mdl\"\r\n        \r\n        private constant integer ID_Q_ABILITY = 'A1CJ'\r\n        private constant integer ID_Q_ABILITY_ALT = 'A1CK'\r\n        private constant integer Q_NUMBER = 0\r\n        \r\n        private constant integer ID_R_ABILITY = 'A1CN'\r\n        private constant integer ID_R_ABILITY_ALT = 'A1CO'\r\n        private constant integer R_NUMBER = 1\r\n        \r\n        private constant integer ALT_LOST_HEALTH_PERCENT = 10\r\n        private constant integer ALT_VAMPIRISM = 15\r\n        private constant integer ALT_DAMAGE_REDUCE = 10\r\n        \r\n        private string array Tooltip[2][6]//ability/levels\r\n        private string array Name[2][6]//ability/levels\r\n    endglobals\r\n\r\n    function Trig_LycanthropeW_Conditions takes nothing returns boolean\r\n        return GetUnitAbilityLevel(GetOrderedUnit(), ID_ABILITY) > 0\r\n    endfunction\r\n    \r\n    private function TakeHealth takes nothing returns nothing\r\n        local integer id = GetHandleId( GetExpiredTimer() )\r\n        local unit hero = LoadUnitHandle(udg_hash, id, StringHash(\"lcnw\") )\r\n        local integer healthPerc = LoadInteger(udg_hash, id, StringHash(\"lcnw\") )\r\n        local boolean isWolf = LoadBoolean(udg_hash, GetHandleId(hero), StringHash(\"lcnw\") )\r\n\r\n        if IsUnitAlive(hero) and IsUnitHasAbility( hero, WOLF_BUFF) and isWolf then\r\n            if IsUnitLoaded( hero ) == false and IsUnitHidden(hero) == false then\r\n                call AddHealthPercent(hero, -healthPerc)\r\n            endif\r\n        else\r\n            call FlushChildHashtable( udg_hash, id ) \r\n            call DestroyTimer( GetExpiredTimer() )\r\n        endif\r\n        \r\n        set hero = null\r\n    endfunction\r\n    \r\n    private function MoonEnd takes nothing returns nothing\r\n        call moonst( -1 )\r\n    endfunction\r\n    \r\n     private function TurnOn_Ability takes unit hero, integer abilityId, integer abilityNew, integer abilityNumber returns nothing\r\n        local integer lv = GetUnitAbilityLevel( hero, abilityId )\r\n        local integer lvlLow = lv - 1\r\n        local ability heroAbility = BlzGetUnitAbility(hero, abilityId)\r\n        local ability heroAbilityNew\r\n        \r\n        if IsUnitHasAbility( hero, abilityId)  then\r\n            call UnitAddAbility( hero, abilityNew )\r\n            set heroAbilityNew = BlzGetUnitAbility(hero, abilityNew)\r\n            call BlzSetAbilityIcon( abilityId, BlzGetAbilityStringField(heroAbilityNew, ABILITY_SF_ICON_RESEARCH) )\r\n            \r\n            set Tooltip[abilityNumber][lv] = BlzGetAbilityExtendedTooltip(abilityId, lvlLow)\r\n            call BlzSetAbilityExtendedTooltip( abilityId, BlzGetAbilityExtendedTooltip(abilityNew, lvlLow), lvlLow )\r\n            \r\n            set Name[abilityNumber][lv] = BlzGetAbilityStringLevelField(heroAbility, ABILITY_SLF_TOOLTIP_NORMAL, lvlLow)\r\n            call BlzSetAbilityStringLevelFieldBJ( heroAbility, ABILITY_SLF_TOOLTIP_NORMAL, lvlLow, BlzGetAbilityStringLevelField(heroAbilityNew, ABILITY_SLF_TOOLTIP_NORMAL, lvlLow) )\r\n            \r\n            call UnitRemoveAbility( hero, abilityNew )\r\n        endif\r\n    \r\n        set heroAbility = null\r\n        set heroAbilityNew = null\r\n        set hero = null\r\n    endfunction\r\n    \r\n    private function LycanthropeW_Alternative takes unit hero, real damageBonus returns nothing\r\n        local integer id\r\n    \r\n        set id = InvokeTimerWithUnit(hero, \"lcnw\", TICK, true, function TakeHealth )\r\n        call SaveReal(udg_hash, GetHandleId(hero), StringHash(\"lcnw\"), damageBonus )\r\n        call SaveInteger(udg_hash, id, StringHash(\"lcnw\"), ALT_LOST_HEALTH_PERCENT )\r\n        call SaveBoolean(udg_hash, GetHandleId(hero), StringHash(\"lcnw\"), true )\r\n        \r\n        set hero = null\r\n    endfunction\r\n    \r\n    private function LycanthropeW_Main takes unit hero, real damageBonus returns nothing\r\n        local integer id\r\n    \r\n        set id = InvokeTimerWithUnit(hero, \"lcnw\", TICK, true, function TakeHealth )\r\n        call SaveReal(udg_hash, GetHandleId(hero), StringHash(\"lcnw\"), damageBonus )\r\n        call SaveInteger(udg_hash, id, StringHash(\"lcnw\"), LOST_HEALTH_PERCENT )\r\n        call SaveBoolean(udg_hash, GetHandleId(hero), StringHash(\"lcnw\"), true )\r\n        \r\n        set hero = null\r\n    endfunction\r\n    \r\n    private function TurnOn takes unit hero returns nothing\r\n        local integer level = GetUnitAbilityLevel( hero, ID_ABILITY )\r\n        local real damageBonus = BONUS_DAMAGE_FIRST_LEVEL + ( level * BONUS_DAMAGE_LEVEL_BONUS )\r\n        local integer moonDuration = NIGHT_DURATION_FIRST_LEVEL + ( level * NIGHT_DURATION_LEVEL_BONUS)\r\n        local integer lv\r\n        local integer lvlLow\r\n\r\n        call PlaySpecialEffect(ANIMATION, hero)\r\n        //call BlzSetUnitSkin( hero, WOLF_FORM )\r\n        call SetUnitSkin( hero, WOLF_FORM )\r\n        \r\n        if Aspects_IsHeroAspectActive(hero, ASPECT_02) then\r\n            call LycanthropeW_Alternative( hero, damageBonus )\r\n        else\r\n            call LycanthropeW_Main( hero, damageBonus )\r\n        endif\r\n        \r\n        call moonst( 1 )\r\n        call TimerStart( CreateTimer(), moonDuration, false, function MoonEnd )\r\n        \r\n        call TurnOn_Ability(hero, ID_Q_ABILITY, ID_Q_ABILITY_ALT, Q_NUMBER)\r\n        call TurnOn_Ability(hero, ID_R_ABILITY, ID_R_ABILITY_ALT, R_NUMBER)\r\n        \r\n        set hero = null\r\n    endfunction\r\n    \r\n    private function TurnOff_Ability takes unit hero, integer abilityId, integer abilityNumber returns nothing\r\n        local integer lv = GetUnitAbilityLevel( hero, abilityId )\r\n        local integer lvlLow = lv - 1\r\n        local ability heroAbility = BlzGetUnitAbility(hero, abilityId)\r\n        local string tooltip = Tooltip[abilityNumber][lv]\r\n        local string name = Name[abilityNumber][lv]\r\n        \r\n        if IsUnitHasAbility( hero, abilityId) then\r\n            call BlzSetAbilityIcon( abilityId, BlzGetAbilityStringField(heroAbility, ABILITY_SF_ICON_RESEARCH) )\r\n            if tooltip != null then\r\n                call BlzSetAbilityExtendedTooltip( abilityId, tooltip, lvlLow )\r\n            endif\r\n            if name != null then\r\n                call BlzSetAbilityStringLevelFieldBJ( heroAbility, ABILITY_SLF_TOOLTIP_NORMAL, lvlLow, name )\r\n            endif\r\n        endif\r\n    \r\n        set heroAbility = null\r\n        set hero = null\r\n    endfunction\r\n    \r\n    private function TurnOff takes unit hero returns nothing\r\n        local integer level = GetUnitAbilityLevel( hero, ID_ABILITY )\r\n        \r\n        call PlaySpecialEffect(ANIMATION, hero)\r\n        //call BlzSetUnitSkin( hero, HUMAN_FORM )\r\n        call SetUnitSkin( hero, HUMAN_FORM )\r\n        \r\n        call SaveBoolean(udg_hash, GetHandleId(hero), StringHash(\"lcnw\"), false )\r\n        call RemoveSavedReal( udg_hash, GetHandleId( hero ), StringHash( \"lcnw\" ) )\r\n        \r\n        call TurnOff_Ability(hero, ID_Q_ABILITY, Q_NUMBER)\r\n        call TurnOff_Ability(hero, ID_R_ABILITY, R_NUMBER)\r\n    \r\n        set hero = null\r\n    endfunction\r\n\r\n    function Trig_LycanthropeW_Actions takes nothing returns nothing\r\n        if GetIssuedOrderId() == OrderId(\"immolation\") and combat(GetOrderedUnit(), false, 0) then\r\n            call TurnOn(GetOrderedUnit())\r\n        elseif GetIssuedOrderId() == OrderId(\"unimmolation\") then\r\n            call TurnOff(GetOrderedUnit())\r\n        endif\r\n    endfunction\r\n    \r\n    //When ability deleted\r\n    private function NullingAbility_Conditions takes nothing returns boolean\r\n        return GetUnitAbilityLevel( udg_Event_NullingAbility_Unit, ID_ABILITY) > 0\r\n    endfunction\r\n    \r\n    private function NullingAbility_Ability takes unit hero, integer abilityId, integer abilityNumber returns nothing\r\n        local integer i\r\n        local integer lowLvl\r\n        local ability currentAbility = BlzGetUnitAbility(hero, abilityId)\r\n        \r\n        call BlzSetAbilityIcon( abilityId, BlzGetAbilityStringField(currentAbility, ABILITY_SF_ICON_RESEARCH) )\r\n        set i = 1\r\n        loop\r\n            exitwhen i > 5\r\n            set lowLvl = i - 1\r\n            if Tooltip[abilityNumber][i] != null then\r\n                call BlzSetAbilityExtendedTooltip( abilityId, Tooltip[abilityNumber][i], lowLvl )\r\n            endif\r\n            if Name[abilityNumber][i] != null then\r\n                call BlzSetAbilityStringLevelFieldBJ( currentAbility, ABILITY_SLF_TOOLTIP_NORMAL, lowLvl, Name[abilityNumber][i] )\r\n            endif\r\n            set i = i + 1\r\n        endloop\r\n    \r\n        set hero = null\r\n        set currentAbility = null\r\n    endfunction\r\n    \r\n    private function NullingAbility takes nothing returns nothing\r\n        local unit caster = udg_Event_NullingAbility_Unit\r\n    \r\n        call TurnOff(caster)\r\n        \r\n        call NullingAbility_Ability(caster, ID_Q_ABILITY, Q_NUMBER )\r\n        call NullingAbility_Ability(caster, ID_R_ABILITY, R_NUMBER )\r\n        \r\n        set caster = null\r\n    endfunction\r\n    \r\n    //When hero deal damage and has buff\r\n    private function OnDamageChange_Conditions takes nothing returns boolean\r\n        return GetUnitAbilityLevel( udg_DamageEventSource, WOLF_BUFF) > 0 and udg_IsDamageSpell == false\r\n    endfunction\r\n    \r\n    private function OnDamageChange takes nothing returns nothing\r\n        local real bonusDamage = LoadReal(udg_hash, GetHandleId(udg_DamageEventSource), StringHash(\"lcnw\") ) * GetHeroAgi( udg_DamageEventSource, false)\r\n        \r\n        set udg_DamageEventAmount = udg_DamageEventAmount + bonusDamage\r\n        \r\n        if Aspects_IsHeroAspectActive(udg_DamageEventSource, ASPECT_02) then\r\n            call healst( udg_DamageEventSource, null, ALT_VAMPIRISM)\r\n        endif\r\n    endfunction\r\n    \r\n    //When Ability Upgraded\r\n    private function SkillUp_Conditions takes nothing returns boolean\r\n        return GetLearnedSkill() == ID_Q_ABILITY or GetLearnedSkill() == ID_R_ABILITY\r\n    endfunction\r\n    \r\n    private function SkillUp_Ability takes unit hero, integer currentAbility, integer abilityNumber returns nothing\r\n        local integer lv = GetUnitAbilityLevel( hero, currentAbility )\r\n        local integer lowLvl = lv - 1\r\n    \r\n        if IsUnitHasAbility( hero, currentAbility) then\r\n            set Tooltip[abilityNumber][lv] = BlzGetAbilityExtendedTooltip(currentAbility, lowLvl)\r\n            set Name[abilityNumber][lv] = BlzGetAbilityStringLevelField(BlzGetUnitAbility(hero, currentAbility), ABILITY_SLF_TOOLTIP_NORMAL, lowLvl)\r\n        endif\r\n    \r\n        set hero = null\r\n    endfunction\r\n    \r\n    private function SkillUp takes nothing returns nothing\r\n        local unit u = GetLearningUnit()\r\n        \r\n        call IssueImmediateOrderBJ( u, \"unimmolation\" )\r\n\r\n        call SkillUp_Ability(u, ID_Q_ABILITY, Q_NUMBER)\r\n        call SkillUp_Ability(u, ID_R_ABILITY, R_NUMBER)\r\n        \r\n        set u = null\r\n    endfunction\r\n    \r\n    \r\n    //When hero take damage, has buff and aspect\r\n    private function OnDamageChange_Alt_Conditions takes nothing returns boolean\r\n        if IsUnitHasAbility( udg_DamageEventTarget, WOLF_BUFF) == false then\r\n            return false\r\n        elseif Aspects_IsHeroAspectActive(udg_DamageEventTarget, ASPECT_02) == false then\r\n            return false\r\n        endif\r\n        return true\r\n    endfunction\r\n    \r\n    private function OnDamageChange_Alt takes nothing returns nothing\r\n        set udg_DamageEventAmount = udg_DamageEventAmount - ALT_DAMAGE_REDUCE\r\n    endfunction\r\n\r\n    //===========================================================================\r\n    private function init takes nothing returns nothing\r\n        local trigger trig = CreateTrigger()\r\n        set gg_trg_LycanthropeW = CreateTrigger(  )\r\n        call TriggerRegisterAnyUnitEventBJ( gg_trg_LycanthropeW, EVENT_PLAYER_UNIT_ISSUED_ORDER )\r\n        call TriggerAddCondition( gg_trg_LycanthropeW, Condition( function Trig_LycanthropeW_Conditions ) )\r\n        call TriggerAddAction( gg_trg_LycanthropeW, function Trig_LycanthropeW_Actions )\r\n        \r\n        call TriggerRegisterAnyUnitEventBJ( trig, EVENT_PLAYER_HERO_SKILL )\r\n        call TriggerAddCondition( trig, Condition( function SkillUp_Conditions ) )\r\n        call TriggerAddAction( trig, function SkillUp )\r\n        \r\n        call CreateEventTrigger( \"Event_OnDamageChange_Real\", function OnDamageChange, function OnDamageChange_Conditions )\r\n        call CreateEventTrigger( \"udg_Event_NullingAbility_Real\", function NullingAbility, function NullingAbility_Conditions )\r\n        \r\n        call CreateEventTrigger( \"Event_OnDamageChange_Real\", function OnDamageChange_Alt, function OnDamageChange_Alt_Conditions )\r\n        \r\n        set trig = null\r\n    endfunction\r\n\r\nendscope",
  "Events": [],
  "LocalVariables": [],
  "Conditions": [],
  "Actions": []
}